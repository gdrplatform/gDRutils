# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: gDRutils

on:
  push:

jobs:
  buildx:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PRIVATE_ACCESS_TOKEN }}
      TEST_TAG: user/app:latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2  
      -
        uses: docker/setup-buildx-action@v1
        #id: buildx
        with:
          install: true
    # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
    # And make it available for the builds
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.TEST_TAG }}
          build-args:
            GITHUB_TOKEN=${{ secrets.PRIVATE_ACCESS_TOKEN }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Run tests
        run: |
          docker run -v `pwd`:/mnt/vol ${{ env.TEST_TAG }} bash -c 'bash /mnt/vol/rplatform/run_tests.sh /mnt/vol/gDRutils'
