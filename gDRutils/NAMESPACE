# Generated by roxygen2: do not edit by hand

export(.calculate_complement)
export(.clean_key_inputs)
export(.set_constant_fit_params)
export(.set_invalid_fit_params)
export(.set_mean_params)
export(.setup_metric_output)
export(MAEpply)
export(apply_bumpy_function)
export(assert_choices)
export(convert_combo_data_to_dt)
export(convert_mae_assay_to_dt)
export(convert_mae_to_json)
export(convert_se_assay_to_dt)
export(convert_se_to_json)
export(df_to_bm_assay)
export(fit_curves)
export(flatten)
export(get_MAE_identifiers)
export(get_SE_experiment_metadata)
export(get_SE_experiment_raw_data)
export(get_SE_identifiers)
export(get_SE_keys)
export(get_assay_names)
export(get_combo_assay_names)
export(get_combo_base_assay_names)
export(get_combo_col_settings)
export(get_combo_score_assay_names)
export(get_default_identifiers)
export(get_env_identifiers)
export(get_expect_one_identifiers)
export(get_experiment_groups)
export(get_header)
export(get_identifiers_dt)
export(get_idfs_synonyms)
export(get_iso_colors)
export(get_non_empty_assays)
export(get_prettified_identifiers)
export(get_required_identifiers)
export(identify_unique_se_metadata_fields)
export(is_any_exp_empty)
export(is_exp_empty)
export(is_mae_empty)
export(logisticFit)
export(loop)
export(mcolData)
export(merge_SE)
export(merge_assay)
export(merge_metadata)
export(mrowData)
export(predict_conc_from_efficacy)
export(predict_efficacy_from_conc)
export(prettify_flat_metrics)
export(refine_coldata)
export(refine_rowdata)
export(reset_env_identifiers)
export(set_SE_experiment_metadata)
export(set_SE_experiment_raw_data)
export(set_SE_fit_parameters)
export(set_SE_identifiers)
export(set_SE_keys)
export(set_SE_processing_metadata)
export(set_env_identifier)
export(shorten_normalization_type_name)
export(split_SE_components)
export(update_env_idfs_from_mae)
export(update_idfs_synonyms)
export(validate_MAE)
export(validate_SE)
export(validate_identifiers)
export(validate_json)
export(validate_mae_with_schema)
export(validate_se_assay_name)
import(SummarizedExperiment)
importFrom(checkmate,assert_number)
importFrom(data.table,":=")
importFrom(data.table,.N)
importFrom(magrittr,"%$%")
importFrom(magrittr,"%<>%")
importFrom(magrittr,"%>%")
importFrom(methods,is)
importFrom(stats,aggregate)
importFrom(tibble,tribble)
