[{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/PULL_REQUEST_TEMPLATE.html","id":"what-changed","dir":"","previous_headings":"","what":"What changed?","title":"Description","text":"Related JIRA issue:","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/PULL_REQUEST_TEMPLATE.html","id":"checklist-for-sustainable-code-base","dir":"","previous_headings":"","what":"Checklist for sustainable code base","title":"Description","text":"added tests code changed/added added documentation code changed/added made sure naming new functions self-explanatory consistent","code":""},{"path":"https://gdrplatform.github.io/gDRutils/PULL_REQUEST_TEMPLATE.html","id":"logistic-checklist","dir":"","previous_headings":"","what":"Logistic checklist","title":"Description","text":"Package version bumped Changelog updated","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/articles/gDRutils.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"gDRutils","text":"gDRutils part gDR suite. package provides bunch tools , among others: * data manipulation, especially output gDRcore package (MultiAssayExperiments SummarizedExperiment), * data extraction, * managing identifiers used creating gDR experiments, * data validation.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/articles/gDRutils.html","id":"data-manipulation","dir":"Articles","previous_headings":"Use cases","what":"Data manipulation","title":"gDRutils","text":"basic output gDRcore package MultiAssayExperiment object. Function MAEpply allows data manipulation object, can used similar way basic function lapply. function allows also extraction unified data across SummarizedExperiments inside MultiAssayExperiment, e.g.","code":"mae <- get_synthetic_data(\"finalMAE_combo_matrix_small\") MAEpply(mae, dim) #> $combination #> [1] 6 2 #>  #> $`single-agent` #> [1] 5 2 MAEpply(mae, rowData) #> $combination #> DataFrame with 6 rows and 7 columns #>                                                    Gnumber    DrugName #>                                                <character> <character> #> G00004_drug_004_moa_A_G00021_drug_021_moa_D_72      G00004    drug_004 #> G00004_drug_004_moa_A_G00026_drug_026_moa_E_72      G00004    drug_004 #> G00005_drug_005_moa_A_G00021_drug_021_moa_D_72      G00005    drug_005 #> G00005_drug_005_moa_A_G00026_drug_026_moa_E_72      G00005    drug_005 #> G00006_drug_006_moa_A_G00021_drug_021_moa_D_72      G00006    drug_006 #> G00006_drug_006_moa_A_G00026_drug_026_moa_E_72      G00006    drug_006 #>                                                   drug_moa   Gnumber_2 #>                                                <character> <character> #> G00004_drug_004_moa_A_G00021_drug_021_moa_D_72       moa_A      G00021 #> G00004_drug_004_moa_A_G00026_drug_026_moa_E_72       moa_A      G00026 #> G00005_drug_005_moa_A_G00021_drug_021_moa_D_72       moa_A      G00021 #> G00005_drug_005_moa_A_G00026_drug_026_moa_E_72       moa_A      G00026 #> G00006_drug_006_moa_A_G00021_drug_021_moa_D_72       moa_A      G00021 #> G00006_drug_006_moa_A_G00026_drug_026_moa_E_72       moa_A      G00026 #>                                                 DrugName_2  drug_moa_2 #>                                                <character> <character> #> G00004_drug_004_moa_A_G00021_drug_021_moa_D_72    drug_021       moa_D #> G00004_drug_004_moa_A_G00026_drug_026_moa_E_72    drug_026       moa_E #> G00005_drug_005_moa_A_G00021_drug_021_moa_D_72    drug_021       moa_D #> G00005_drug_005_moa_A_G00026_drug_026_moa_E_72    drug_026       moa_E #> G00006_drug_006_moa_A_G00021_drug_021_moa_D_72    drug_021       moa_D #> G00006_drug_006_moa_A_G00026_drug_026_moa_E_72    drug_026       moa_E #>                                                 Duration #>                                                <numeric> #> G00004_drug_004_moa_A_G00021_drug_021_moa_D_72        72 #> G00004_drug_004_moa_A_G00026_drug_026_moa_E_72        72 #> G00005_drug_005_moa_A_G00021_drug_021_moa_D_72        72 #> G00005_drug_005_moa_A_G00026_drug_026_moa_E_72        72 #> G00006_drug_006_moa_A_G00021_drug_021_moa_D_72        72 #> G00006_drug_006_moa_A_G00026_drug_026_moa_E_72        72 #>  #> $`single-agent` #> DataFrame with 5 rows and 4 columns #>                              Gnumber    DrugName    drug_moa  Duration #>                          <character> <character> <character> <numeric> #> G00004_drug_004_moa_A_72      G00004    drug_004       moa_A        72 #> G00005_drug_005_moa_A_72      G00005    drug_005       moa_A        72 #> G00006_drug_006_moa_A_72      G00006    drug_006       moa_A        72 #> G00021_drug_021_moa_D_72      G00021    drug_021       moa_D        72 #> G00026_drug_026_moa_E_72      G00026    drug_026       moa_E        72 MAEpply(mae, rowData, unify = TRUE) #>     Gnumber DrugName drug_moa Gnumber_2 DrugName_2 drug_moa_2 Duration #>      <char>   <char>   <char>    <char>     <char>     <char>    <num> #>  1:  G00004 drug_004    moa_A    G00021   drug_021      moa_D       72 #>  2:  G00004 drug_004    moa_A    G00026   drug_026      moa_E       72 #>  3:  G00005 drug_005    moa_A    G00021   drug_021      moa_D       72 #>  4:  G00005 drug_005    moa_A    G00026   drug_026      moa_E       72 #>  5:  G00006 drug_006    moa_A    G00021   drug_021      moa_D       72 #>  6:  G00006 drug_006    moa_A    G00026   drug_026      moa_E       72 #>  7:  G00004 drug_004    moa_A      <NA>       <NA>       <NA>       72 #>  8:  G00005 drug_005    moa_A      <NA>       <NA>       <NA>       72 #>  9:  G00006 drug_006    moa_A      <NA>       <NA>       <NA>       72 #> 10:  G00021 drug_021    moa_D      <NA>       <NA>       <NA>       72 #> 11:  G00026 drug_026    moa_E      <NA>       <NA>       <NA>       72"},{"path":"https://gdrplatform.github.io/gDRutils/articles/gDRutils.html","id":"data-extraction","dir":"Articles","previous_headings":"Use cases","what":"Data extraction","title":"gDRutils","text":"metrics data stored inside assays SummarizedExperiment. downstream analyses provide tools allowing extraction data user-friendly data.table style. two functions working MultiAssayExperiment object (convert_mae_assay_to_dt) SummarizedExperiment (convert_se_assay_to_dt). alternatively SummarizedExperiment object:","code":"mdt <- convert_mae_assay_to_dt(mae, \"Metrics\") #> Loading required package: BumpyMatrix head(mdt, 3) #>                                               rId #>                                            <char> #> 1: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> 2: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> 3: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>                                cId  x_mean  x_AOC x_AOC_range  xc50   x_max #>                             <char>   <num>  <num>       <num> <num>   <num> #> 1: CL00016_cellline_GB_tissue_y_46 -0.7046 1.7046      1.7046  -Inf -0.7046 #> 2: CL00016_cellline_GB_tissue_y_46 -0.7039 1.7039      1.7039  -Inf -0.7039 #> 3: CL00016_cellline_GB_tissue_y_46 -0.6920 1.6920      1.6920  -Inf -0.6920 #>     ec50   x_inf     x_0     h    r2 x_sd_avg             fit_type #>    <num>   <num>   <num> <num> <num>    <num>               <char> #> 1:     0 -0.7046 -0.7046 1e-04     0        0 DRCConstantFitResult #> 2:     0 -0.7039 -0.7039 1e-04     0        0 DRCConstantFitResult #> 3:     0 -0.6920 -0.6920 1e-04     0        0 DRCConstantFitResult #>    maxlog10Concentration N_conc normalization_type fit_source cotrt_value ratio #>                    <num>  <int>             <char>     <char>       <num> <num> #> 1:             0.4996871      8                 GR        gDR       3.160    NA #> 2:             0.4996871      8                 GR        gDR       1.000    NA #> 3:             0.4996871      8                 GR        gDR       0.316    NA #>          source Gnumber DrugName drug_moa Gnumber_2 DrugName_2 drug_moa_2 #>          <char>  <char>   <char>   <char>    <char>     <char>     <char> #> 1: row_fittings  G00004 drug_004    moa_A    G00021   drug_021      moa_D #> 2: row_fittings  G00004 drug_004    moa_A    G00021   drug_021      moa_D #> 3: row_fittings  G00004 drug_004    moa_A    G00021   drug_021      moa_D #>    Duration    clid CellLineName   Tissue ReferenceDivisionTime #>       <num>  <char>       <char>   <char>                 <num> #> 1:       72 CL00016  cellline_GB tissue_y                    46 #> 2:       72 CL00016  cellline_GB tissue_y                    46 #> 3:       72 CL00016  cellline_GB tissue_y                    46 se <- mae[[1]] sdt <- convert_se_assay_to_dt(se, \"Metrics\") head(sdt, 3) #>                                               rId #>                                            <char> #> 1: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> 2: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> 3: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>                                cId  x_mean  x_AOC x_AOC_range  xc50   x_max #>                             <char>   <num>  <num>       <num> <num>   <num> #> 1: CL00016_cellline_GB_tissue_y_46 -0.7046 1.7046      1.7046  -Inf -0.7046 #> 2: CL00016_cellline_GB_tissue_y_46 -0.7039 1.7039      1.7039  -Inf -0.7039 #> 3: CL00016_cellline_GB_tissue_y_46 -0.6920 1.6920      1.6920  -Inf -0.6920 #>     ec50   x_inf     x_0     h    r2 x_sd_avg             fit_type #>    <num>   <num>   <num> <num> <num>    <num>               <char> #> 1:     0 -0.7046 -0.7046 1e-04     0        0 DRCConstantFitResult #> 2:     0 -0.7039 -0.7039 1e-04     0        0 DRCConstantFitResult #> 3:     0 -0.6920 -0.6920 1e-04     0        0 DRCConstantFitResult #>    maxlog10Concentration N_conc normalization_type fit_source cotrt_value ratio #>                    <num>  <int>             <char>     <char>       <num> <num> #> 1:             0.4996871      8                 GR        gDR       3.160    NA #> 2:             0.4996871      8                 GR        gDR       1.000    NA #> 3:             0.4996871      8                 GR        gDR       0.316    NA #>          source Gnumber DrugName drug_moa Gnumber_2 DrugName_2 drug_moa_2 #>          <char>  <char>   <char>   <char>    <char>     <char>     <char> #> 1: row_fittings  G00004 drug_004    moa_A    G00021   drug_021      moa_D #> 2: row_fittings  G00004 drug_004    moa_A    G00021   drug_021      moa_D #> 3: row_fittings  G00004 drug_004    moa_A    G00021   drug_021      moa_D #>    Duration    clid CellLineName   Tissue ReferenceDivisionTime #>       <num>  <char>       <char>   <char>                 <num> #> 1:       72 CL00016  cellline_GB tissue_y                    46 #> 2:       72 CL00016  cellline_GB tissue_y                    46 #> 3:       72 CL00016  cellline_GB tissue_y                    46"},{"path":"https://gdrplatform.github.io/gDRutils/articles/gDRutils.html","id":"managing-gdr-identifiers","dir":"Articles","previous_headings":"Use cases","what":"Managing gDR identifiers","title":"gDRutils","text":"gDR require standard identifiers visible input data, e.g. Gnumber, CLID, Concentration. However, user can define custom identifiers. display gDR default identifier can use get_env_identifiers function: change identifiers user can use set_env_identifier, e.g. confirm, displaying: restore default identifiers user can use reset_env_identifiers.","code":"get_env_identifiers() #> $duration #> [1] \"Duration\" #>  #> $cellline #> [1] \"clid\" #>  #> $cellline_name #> [1] \"CellLineName\" #>  #> $cellline_tissue #> [1] \"Tissue\" #>  #> $cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $cellline_subtype #> [1] \"subtype\" #>  #> $drug #> [1] \"Gnumber\" #>  #> $drug_name #> [1] \"DrugName\" #>  #> $drug_moa #> [1] \"drug_moa\" #>  #> $untreated_tag #> [1] \"vehicle\"   \"untreated\" #>  #> $masked_tag #> [1] \"masked\" #>  #> $well_position #> [1] \"WellRow\"    \"WellColumn\" #>  #> $concentration #> [1] \"Concentration\" #>  #> $template #> [1] \"Template\"  \"Treatment\" #>  #> $barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $drug2 #> [1] \"Gnumber_2\" #>  #> $drug_name2 #> [1] \"DrugName_2\" #>  #> $drug_moa2 #> [1] \"drug_moa_2\" #>  #> $concentration2 #> [1] \"Concentration_2\" #>  #> $drug3 #> [1] \"Gnumber_3\" #>  #> $drug_name3 #> [1] \"DrugName_3\" #>  #> $drug_moa3 #> [1] \"drug_moa_3\" #>  #> $concentration3 #> [1] \"Concentration_3\" #>  #> $data_source #> [1] \"data_source\" #>  #> $replicate #> [1] \"Replicate\" set_env_identifier(\"concentration\", \"Dose\") get_env_identifiers(\"concentration\") #> [1] \"Dose\" reset_env_identifiers() get_env_identifiers(\"concentration\") #> [1] \"Concentration\""},{"path":"https://gdrplatform.github.io/gDRutils/articles/gDRutils.html","id":"data-validation","dir":"Articles","previous_headings":"Use cases","what":"Data validation","title":"gDRutils","text":"Applied custom changes gDR output can upset internal functions operation. Custom changes can validated using validate_MAE validate_SE.","code":"validate_MAE(mae) validate_SE(se) assay(se, \"Normalized\") <- NULL validate_SE(se) #> Error in validate_SE(se): Assertion on 'exp_assay_names' failed: Must be a subset of {'RawTreated','Controls','Averaged','excess','all_iso_points','isobolograms','scores','Metrics'}, but has additional elements {'Normalized'}."},{"path":"https://gdrplatform.github.io/gDRutils/articles/gDRutils.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"gDRutils","text":"","code":"sessionInfo() #> R Under development (unstable) (2024-02-07 r85873) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] BumpyMatrix_1.11.0          MultiAssayExperiment_1.29.1 #>  [3] SummarizedExperiment_1.33.3 Biobase_2.63.0              #>  [5] GenomicRanges_1.55.2        GenomeInfoDb_1.39.6         #>  [7] IRanges_2.37.1              S4Vectors_0.41.3            #>  [9] BiocGenerics_0.49.1         MatrixGenerics_1.15.0       #> [11] matrixStats_1.2.0           gDRutils_1.1.4              #> [13] BiocStyle_2.31.0            #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.8              SparseArray_1.3.4       bitops_1.0-7            #>  [4] stringi_1.8.3           lattice_0.22-5          digest_0.6.34           #>  [7] magrittr_2.0.3          evaluate_0.23           grid_4.4.0              #> [10] bookdown_0.37           fastmap_1.1.1           jsonlite_1.8.8          #> [13] Matrix_1.6-5            backports_1.4.1         BiocManager_1.30.22     #> [16] purrr_1.0.2             textshaping_0.3.7       jquerylib_0.1.4         #> [19] RApiSerialize_0.1.2     abind_1.4-5             cli_3.6.2               #> [22] rlang_1.1.3             crayon_1.5.2            XVector_0.43.1          #> [25] cachem_1.0.8            DelayedArray_0.29.1     yaml_2.3.8              #> [28] S4Arrays_1.3.3          qs_0.25.7               tools_4.4.0             #> [31] checkmate_2.3.1         memoise_2.0.1           GenomeInfoDbData_1.2.11 #> [34] vctrs_0.6.5             R6_2.5.1                lifecycle_1.0.4         #> [37] zlibbioc_1.49.0         stringr_1.5.1           stringfish_0.16.0       #> [40] fs_1.6.3                ragg_1.2.7              desc_1.4.3              #> [43] RcppParallel_5.1.7      pkgdown_2.0.7           bslib_0.6.1             #> [46] Rcpp_1.0.12             data.table_1.15.0       glue_1.7.0              #> [49] systemfonts_1.0.5       xfun_0.42               knitr_1.45              #> [52] htmltools_0.5.7         rmarkdown_2.25          compiler_4.4.0          #> [55] RCurl_1.98-1.14"},{"path":"https://gdrplatform.github.io/gDRutils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bartosz Czech. Author. Arkadiusz Gladki. Maintainer, author. Aleksander Chlebowski. Author. Marc Hafner. Author. Pawel Piatkowski. Author. Dariusz Scigocki. Author. Janina Smola. Author. Sergiu Mocanu. Author. Allison Vuong. Author.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Czech B, Gladki , Chlebowski , Hafner M, Piatkowski P, Scigocki D, Smola J, Mocanu S, Vuong (2024). gDRutils: package helper functions processing drug response data. R package version 1.1.4, https://gdrplatform.github.io/gDRutils/, https://github.com/gdrplatform/gDRutils.","code":"@Manual{,   title = {gDRutils: A package with helper functions for processing drug response data},   author = {Bartosz Czech and Arkadiusz Gladki and Aleksander Chlebowski and Marc Hafner and Pawel Piatkowski and Dariusz Scigocki and Janina Smola and Sergiu Mocanu and Allison Vuong},   year = {2024},   note = {R package version 1.1.4, https://gdrplatform.github.io/gDRutils/},   url = {https://github.com/gdrplatform/gDRutils}, }"},{"path":"https://gdrplatform.github.io/gDRutils/index.html","id":"gdrutils","dir":"","previous_headings":"","what":"A package with helper functions for processing drug response data","title":"A package with helper functions for processing drug response data","text":"package utility functions munging analyzing drug reponse data.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/index.html","id":"general-info","dir":"","previous_headings":"","what":"General info","title":"A package with helper functions for processing drug response data","text":"main responsibilities provide: - getting/setting/validation functionality identifiers downstream processing analysis - convenience functions switching long table SummarizedExperiment data structures - core fitting functions","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/MAEpply.html","id":null,"dir":"Reference","previous_headings":"","what":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","title":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","text":"Lapply experiments MultiAssayExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/MAEpply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","text":"","code":"MAEpply(mae, FUN, unify = FALSE, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/MAEpply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","text":"mae MultiAssayExperiment object FUN function applied experiment MultiAssayExperiment object unify logical indicating output unlisted object unique values across experiments ... Additional args passed teh FUN.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/MAEpply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","text":"list vector depends unify param","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/MAEpply.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","text":"Bartosz Czech bartosz.czech@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/MAEpply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lapply through all the experiments in MultiAssayExperiment object — MAEpply","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") #> Loading required package: MultiAssayExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians MAEpply(mae, SummarizedExperiment::assayNames) #> $`single-agent` #> [1] \"RawTreated\" \"Controls\"   \"Normalized\" \"Averaged\"   \"Metrics\"    #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/SE_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","title":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","text":"Set metadata fitting parameters define Metrics assay SummarizedExperiment object metadata.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/SE_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","text":"","code":"set_SE_fit_parameters(se, value)  set_SE_processing_metadata(se, value)  set_SE_keys(se, value)  set_SE_experiment_metadata(se, value)  set_SE_experiment_raw_data(se, value)  get_SE_fit_parameters(se)  get_SE_processing_metadata(se)  get_SE_experiment_raw_data(se)  get_SE_experiment_metadata(se)  get_SE_keys(se, key_type = NULL)  get_SE_identifiers(se, id_type = NULL, simplify = TRUE)  set_SE_identifiers(se, value)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/SE_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","text":"se SummarizedExperiment object add fit parameter metadata. value named list metadata fit parameters. key_type string specific key type (.e. 'nested_keys', etc.). id_type string specific id type (.e. 'duration', 'cellline_name', etc.). simplify Boolean indicating whether output simplified.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/SE_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","text":"se added metadata.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/SE_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","text":"*et_SE_processing_metadata, get/set metadata processing info defines date_processed packages versions SummarizedExperiment object metadata. *et_SE_fit_parameters, get/set metadata fit parameters used construct Metrics assay SummarizedExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/SE_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and set metadata for parameters on a SummarizedExperiment object. — SE_metadata","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\")  se <- mae[[1]] get_SE_fit_parameters(se) #> $n_point_cutoff #> [1] 4 #>  #> $range_conc #> [1] 0.005 5.000 #>  #> $force_fit #> [1] FALSE #>  #> $pcutoff #> [1] 0.05 #>  #> $cap #> [1] 0.1 #>   mae <- get_synthetic_data(\"finalMAE_small.qs\")  se <- mae[[1]] meta <- get_SE_processing_metadata(se)  mae <- get_synthetic_data(\"finalMAE_small.qs\")  se <- mae[[1]] get_SE_experiment_raw_data(se) #> NULL  mae <- get_synthetic_data(\"finalMAE_small.qs\")  se <- mae[[1]] get_SE_experiment_metadata(se) #> DataFrame with 0 rows and 0 columns  mae <- get_synthetic_data(\"finalMAE_small.qs\")  se <- mae[[1]] get_SE_identifiers(se) #> $duration #> [1] \"Duration\" #>  #> $cellline #> [1] \"clid\" #>  #> $cellline_name #> [1] \"CellLineName\" #>  #> $cellline_tissue #> [1] \"Tissue\" #>  #> $cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $cellline_subtype #> [1] \"subtype\" #>  #> $drug #> [1] \"Gnumber\" #>  #> $drug_name #> [1] \"DrugName\" #>  #> $drug_moa #> [1] \"drug_moa\" #>  #> $untreated_tag #> [1] \"vehicle\"   \"untreated\" #>  #> $masked_tag #> [1] \"masked\" #>  #> $well_position #> [1] \"WellRow\"    \"WellColumn\" #>  #> $concentration #> [1] \"Concentration\" #>  #> $template #> [1] \"Template\"  \"Treatment\" #>  #> $barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $drug2 #> [1] \"Gnumber_2\" #>  #> $drug_name2 #> [1] \"DrugName_2\" #>  #> $drug_moa2 #> [1] \"drug_moa_2\" #>  #> $concentration2 #> [1] \"Concentration_2\" #>  #> $drug3 #> [1] \"Gnumber_3\" #>  #> $drug_name3 #> [1] \"DrugName_3\" #>  #> $drug_moa3 #> [1] \"drug_moa_3\" #>  #> $concentration3 #> [1] \"Concentration_3\" #>  #> $data_source #> [1] \"data_source\" #>  #> $replicate #> [1] \"Replicate\" #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/addClass.html","id":null,"dir":"Reference","previous_headings":"","what":"add arbitrary S3 class to an object — addClass","title":"add arbitrary S3 class to an object — addClass","text":"Modify object's class attribute.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/addClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add arbitrary S3 class to an object — addClass","text":"","code":"addClass(x, newClass)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/addClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add arbitrary S3 class to an object — addClass","text":"x object newClass character string; class added","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/addClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add arbitrary S3 class to an object — addClass","text":"object added S3 class.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/addClass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"add arbitrary S3 class to an object — addClass","text":"simple convenience function item class attribute object can dispatched proper S3 method. purely code clarity, individual methods clutter definitions higher order functions.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/addClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add arbitrary S3 class to an object — addClass","text":"","code":"addClass(data.table::data.table(), \"someClass\") #> Null data.table (0 rows and 0 cols)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/aggregate_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate a BumpyMatrix assay by a given aggreation function. — aggregate_assay","title":"Aggregate a BumpyMatrix assay by a given aggreation function. — aggregate_assay","text":"Aggregation can performed nested variables.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/aggregate_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate a BumpyMatrix assay by a given aggreation function. — aggregate_assay","text":"","code":"aggregate_assay(asy, by, FUN)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/aggregate_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate a BumpyMatrix assay by a given aggreation function. — aggregate_assay","text":"asy BumpyMatrix object. Character vector nested fields aggregate . FUN function use aggregate data.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/aggregate_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate a BumpyMatrix assay by a given aggreation function. — aggregate_assay","text":"BumpyMatrix object aggregated FUN.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/aggregate_assay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate a BumpyMatrix assay by a given aggreation function. — aggregate_assay","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\")  se <- mae[[1]] assay <- SummarizedExperiment::assay(se) #> Loading required package: BumpyMatrix aggregate_assay(assay, FUN = mean, by = c(\"Barcode\")) #> 10 x 10 BumpyDataFrameMatrix #> rownames: G00002_drug_002_moa_A_72 G00003_drug_003_moa_A_72 ... G00010_drug_010_moa_A_72 G00011_drug_011_moa_B_72  #> colnames: CL00011_cellline_BA_tissue_x_26 CL00012_cellline_CA_tissue_x_30 ... CL00019_cellline_JB_tissue_z_58 CL00020_cellline_KB_tissue_z_62  #> preview [1,1]: #>   DataFrame with 3 rows and 7 columns #>         Barcode Concentration ReadoutValue BackgroundValue record_id    masked #>     <character>     <numeric>    <numeric>       <numeric> <numeric> <numeric> #>   1     plate_1       1.62492      46.0333               0      1801         0 #>   2     plate_2       1.62492      46.4111               0      1901         0 #>   3     plate_3       1.62492      47.0778               0      2001         0 #>     CorrectedReadout #>            <numeric> #>   1          46.0333 #>   2          46.4111 #>   3          47.0778"},{"path":"https://gdrplatform.github.io/gDRutils/reference/apply_bumpy_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to every element of a bumpy matrix. — apply_bumpy_function","title":"Apply a function to every element of a bumpy matrix. — apply_bumpy_function","text":"Apply user-specified function every element bumpy matrix.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/apply_bumpy_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to every element of a bumpy matrix. — apply_bumpy_function","text":"","code":"apply_bumpy_function(   se,   FUN,   req_assay_name,   out_assay_name,   parallelize = FALSE,   ... )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/apply_bumpy_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to every element of a bumpy matrix. — apply_bumpy_function","text":"se SummarizedExperiment object bumpy matrices. FUN function applied element matrix assay req_assay_name. Output function must return data.table. req_assay_name String assay name se FUN act . out_assay_name String assay name contain results applied function. parallelize Logical indicating whether parallelize computation. ... Additional args passed teh FUN.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/apply_bumpy_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to every element of a bumpy matrix. — apply_bumpy_function","text":"original se object new assay, out_assay_name.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/apply_bumpy_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to every element of a bumpy matrix. — apply_bumpy_function","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") se <- mae[[1]] FUN <- function(x) {   data.table::data.table(Concentration = x$Concentration, CorrectedReadout = x$CorrectedReadout) }  apply_bumpy_function(   se,    FUN = FUN,    req_assay_name = \"RawTreated\",    out_assay_name = \"CorrectedReadout\" ) #> class: SummarizedExperiment  #> dim: 10 10  #> metadata(5): identifiers experiment_metadata Keys fit_parameters #>   .internal #> assays(6): RawTreated Controls ... Metrics CorrectedReadout #> rownames(10): G00002_drug_002_moa_A_72 G00003_drug_003_moa_A_72 ... #>   G00010_drug_010_moa_A_72 G00011_drug_011_moa_B_72 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(10): CL00011_cellline_BA_tissue_x_26 #>   CL00012_cellline_CA_tissue_x_30 ... CL00019_cellline_JB_tissue_z_58 #>   CL00020_cellline_KB_tissue_z_62 #> colData names(4): clid CellLineName Tissue ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDRutils/reference/assert_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"assert choices — assert_choices","title":"assert choices — assert_choices","text":"assert choices","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/assert_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assert choices — assert_choices","text":"","code":"assert_choices(x, choices, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/assert_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assert choices — assert_choices","text":"x charvec expected subset choices charvec reference set ... Additional arguments pass checkmate::test_choice","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/assert_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assert choices — assert_choices","text":"NULL","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/assert_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"assert choices — assert_choices","text":"","code":"assert_choices(\"x\", c(\"x\",\"y\"))"},{"path":"https://gdrplatform.github.io/gDRutils/reference/average_biological_replicates_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Average biological replicates. — average_biological_replicates_dt","title":"Average biological replicates. — average_biological_replicates_dt","text":"Average biological replicates data table side.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/average_biological_replicates_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average biological replicates. — average_biological_replicates_dt","text":"","code":"average_biological_replicates_dt(   dt,   var,   pidfs = get_prettified_identifiers(),   fixed = TRUE,   geometric_average_fields = get_header(\"metric_average_fields\")$geometric_mean )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/average_biological_replicates_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average biological replicates. — average_biological_replicates_dt","text":"dt data.table Metric data var String representing additional metadata replicates pidfs list prettified identifiers fixed Flag add fix -Inf geometric mean. geometric_average_fields Character vector column names dt take geometric average .","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/average_biological_replicates_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average biological replicates. — average_biological_replicates_dt","text":"data.table without replicates","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/average_biological_replicates_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average biological replicates. — average_biological_replicates_dt","text":"","code":"dt <- data.table::data.table(a = c(1:10, 1), b = c(rep(\"drugA\", 10), rep(\"drugB\", 1))) average_biological_replicates_dt(dt, var = \"a\") #>         b #>    <char> #> 1:  drugA #> 2:  drugB"},{"path":"https://gdrplatform.github.io/gDRutils/reference/cap_xc50.html","id":null,"dir":"Reference","previous_headings":"","what":"Cap XC50 value. — cap_xc50","title":"Cap XC50 value. — cap_xc50","text":"Set IC50/GR50 value Inf -Inf based upper lower limits.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/cap_xc50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cap XC50 value. — cap_xc50","text":"","code":"cap_xc50(xc50, max_conc, min_conc = NA, capping_fold = 5)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/cap_xc50.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cap XC50 value. — cap_xc50","text":"xc50 Numeric value IC50/GR50 cap. max_conc Numeric value highest concentration dose series used calculate xc50. min_conc Numeric value lowest concentration dose series used calculate xc50. NA (default), using max_conc/1e5 instead. capping_fold Integer value fold number use capping. Defaults 5.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/cap_xc50.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cap XC50 value. — cap_xc50","text":"Capped IC50/GR50 value.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/cap_xc50.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cap XC50 value. — cap_xc50","text":"Note: xc50 max_conc share units. Ideally, lower_cap based lowest tested concentration. However, since record , set 5 orders magnitude highest dose.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/cap_xc50.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cap XC50 value. — cap_xc50","text":"","code":"cap_xc50(xc50 = 1, max_conc = 2) #> [1] 1 cap_xc50(xc50 = 2, max_conc = 5, min_conc = 1) #> [1] 2 cap_xc50(xc50 = 26, max_conc = 5, capping_fold = 5) #> [1] Inf"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_data_to_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","title":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","text":"convert combo assays SummarizedExperiments list data.tables","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_data_to_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","text":"","code":"convert_combo_data_to_dt(   se,   c_assays = get_combo_assay_names(),   normalization_type = c(\"RV\", \"GR\"),   prettify = TRUE )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_data_to_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","text":"se SummarizedExperiment object dose-response data c_assays charvec combo assays used normalization_type charvec normalization_types expected data prettify boolean flag indicating whether prettify colnames returned data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_data_to_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","text":"list data.table(s) combo data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_data_to_dt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","text":"Arkadiusz Gładki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_data_to_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert combo assays from SummarizedExperiments to the list of data.tables — convert_combo_data_to_dt","text":"","code":"mae <- get_synthetic_data(\"finalMAE_combo_matrix_small.qs\") convert_combo_data_to_dt(mae[[1]]) #> $excess #>                                                 r Id #>                                               <char> #>    1: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>    2: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>    3: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>    4: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>    5: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>   ---                                                #> 1940: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 1941: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 1942: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 1943: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 1944: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #>                                  c Id Concentration Concentration 2     Smooth #>                                <char>         <num>           <num>      <num> #>    1: CL00016_cellline_GB_tissue_y_46          0.00         0.00000  1.0000000 #>    2: CL00016_cellline_GB_tissue_y_46          0.00         0.00000  1.0000000 #>    3: CL00016_cellline_GB_tissue_y_46          0.00         0.00100  1.0000000 #>    4: CL00016_cellline_GB_tissue_y_46          0.00         0.00100  1.0000000 #>    5: CL00016_cellline_GB_tissue_y_46          0.00         0.00316  1.0000000 #>   ---                                                                          #> 1940: CL00017_cellline_HB_tissue_y_50          3.16         0.31600  0.1828034 #> 1941: CL00017_cellline_HB_tissue_y_50          3.16         1.00000 -0.4035902 #> 1942: CL00017_cellline_HB_tissue_y_50          3.16         1.00000  0.1918578 #> 1943: CL00017_cellline_HB_tissue_y_50          3.16         3.16000 -0.4008597 #> 1944: CL00017_cellline_HB_tissue_y_50          3.16         3.16000  0.1921170 #>       Normalization Type   Hsa Excess Bliss Excess Gnumber Drug Name Drug MOA #>                   <char>        <num>        <num>  <char>    <char>   <char> #>    1:                 GR           NA           NA  G00004  drug_004    moa_A #>    2:                 RV           NA           NA  G00004  drug_004    moa_A #>    3:                 GR           NA           NA  G00004  drug_004    moa_A #>    4:                 RV           NA           NA  G00004  drug_004    moa_A #>    5:                 GR           NA           NA  G00004  drug_004    moa_A #>   ---                                                                         #> 1940:                 RV -0.001579471 -0.001579471  G00006  drug_006    moa_A #> 1941:                 GR  0.003961392  0.003961392  G00006  drug_006    moa_A #> 1942:                 RV -0.010633816 -0.010633816  G00006  drug_006    moa_A #> 1943:                 GR  0.001230976  0.001230976  G00006  drug_006    moa_A #> 1944:                 RV -0.010893026 -0.010893026  G00006  drug_006    moa_A #>       Gnumber 2 Drug Name 2 Drug MOA 2 Duration    Clid Cell Line Name   Tissue #>          <char>      <char>     <char>    <num>  <char>         <char>   <char> #>    1:    G00021    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>    2:    G00021    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>    3:    G00021    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>    4:    G00021    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>    5:    G00021    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>   ---                                                                           #> 1940:    G00026    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 1941:    G00026    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 1942:    G00026    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 1943:    G00026    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 1944:    G00026    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #>       Reference Division Time #>                         <num> #>    1:                      46 #>    2:                      46 #>    3:                      46 #>    4:                      46 #>    5:                      46 #>   ---                         #> 1940:                      50 #> 1941:                      50 #> 1942:                      50 #> 1943:                      50 #> 1944:                      50 #>  #> $scores #>                                               r Id #>                                             <char> #>  1: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>  2: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>  3: G00004_drug_004_moa_A_G00026_drug_026_moa_E_72 #>  4: G00004_drug_004_moa_A_G00026_drug_026_moa_E_72 #>  5: G00005_drug_005_moa_A_G00021_drug_021_moa_D_72 #>  6: G00005_drug_005_moa_A_G00021_drug_021_moa_D_72 #>  7: G00005_drug_005_moa_A_G00026_drug_026_moa_E_72 #>  8: G00005_drug_005_moa_A_G00026_drug_026_moa_E_72 #>  9: G00006_drug_006_moa_A_G00021_drug_021_moa_D_72 #> 10: G00006_drug_006_moa_A_G00021_drug_021_moa_D_72 #> 11: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 12: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 13: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> 14: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> 15: G00004_drug_004_moa_A_G00026_drug_026_moa_E_72 #> 16: G00004_drug_004_moa_A_G00026_drug_026_moa_E_72 #> 17: G00005_drug_005_moa_A_G00021_drug_021_moa_D_72 #> 18: G00005_drug_005_moa_A_G00021_drug_021_moa_D_72 #> 19: G00005_drug_005_moa_A_G00026_drug_026_moa_E_72 #> 20: G00005_drug_005_moa_A_G00026_drug_026_moa_E_72 #> 21: G00006_drug_006_moa_A_G00021_drug_021_moa_D_72 #> 22: G00006_drug_006_moa_A_G00021_drug_021_moa_D_72 #> 23: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 24: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #>                                               r Id #>                                c Id Normalization Type    Hsa Score #>                              <char>             <char>        <num> #>  1: CL00016_cellline_GB_tissue_y_46                 GR 0.0191864677 #>  2: CL00016_cellline_GB_tissue_y_46                 RV 0.0054825946 #>  3: CL00016_cellline_GB_tissue_y_46                 GR 0.0008640788 #>  4: CL00016_cellline_GB_tissue_y_46                 RV 0.0002808689 #>  5: CL00016_cellline_GB_tissue_y_46                 GR 0.0212208433 #>  6: CL00016_cellline_GB_tissue_y_46                 RV 0.0064007236 #>  7: CL00016_cellline_GB_tissue_y_46                 GR 0.0282309784 #>  8: CL00016_cellline_GB_tissue_y_46                 RV 0.0004152695 #>  9: CL00016_cellline_GB_tissue_y_46                 GR 0.0142686221 #> 10: CL00016_cellline_GB_tissue_y_46                 RV 0.0035563938 #> 11: CL00016_cellline_GB_tissue_y_46                 GR 0.0006824548 #> 12: CL00016_cellline_GB_tissue_y_46                 RV 0.0002571149 #> 13: CL00017_cellline_HB_tissue_y_50                 GR 0.0195459201 #> 14: CL00017_cellline_HB_tissue_y_50                 RV 0.0062733020 #> 15: CL00017_cellline_HB_tissue_y_50                 GR 0.0047716696 #> 16: CL00017_cellline_HB_tissue_y_50                 RV 0.0020015238 #> 17: CL00017_cellline_HB_tissue_y_50                 GR 0.0241474816 #> 18: CL00017_cellline_HB_tissue_y_50                 RV 0.0080924532 #> 19: CL00017_cellline_HB_tissue_y_50                 GR 0.0084478065 #> 20: CL00017_cellline_HB_tissue_y_50                 RV 0.0009734877 #> 21: CL00017_cellline_HB_tissue_y_50                 GR 0.0550440010 #> 22: CL00017_cellline_HB_tissue_y_50                 RV 0.0268261867 #> 23: CL00017_cellline_HB_tissue_y_50                 GR 0.0344185361 #> 24: CL00017_cellline_HB_tissue_y_50                 RV 0.0090907653 #>                                c Id Normalization Type    Hsa Score #>      Bliss Score  CIScore 50   CIScore 80 Gnumber Drug Name Drug MOA Gnumber 2 #>            <num>       <num>        <num>  <char>    <char>   <char>    <char> #>  1: 0.0191864677  0.01747735  0.029337758  G00004  drug_004    moa_A    G00021 #>  2: 0.0054825946  0.03485816  0.042184690  G00004  drug_004    moa_A    G00021 #>  3: 0.0008640788  0.02292999  0.010300143  G00004  drug_004    moa_A    G00026 #>  4: 0.0002808689  0.01554275  0.013571845  G00004  drug_004    moa_A    G00026 #>  5: 0.0212208433  0.01476911  0.027162506  G00005  drug_005    moa_A    G00021 #>  6: 0.0064007236  0.02046719  0.032236614  G00005  drug_005    moa_A    G00021 #>  7: 0.0282309784  0.15986731 -0.048280758  G00005  drug_005    moa_A    G00026 #>  8: 0.0004152695  0.01524069  0.022185871  G00005  drug_005    moa_A    G00026 #>  9: 0.0142686221  0.02309152  0.027147952  G00006  drug_006    moa_A    G00021 #> 10: 0.0035563938  0.02563107  0.021081550  G00006  drug_006    moa_A    G00021 #> 11: 0.0006824548  0.02039404  0.019774471  G00006  drug_006    moa_A    G00026 #> 12: 0.0002571149  0.02106643  0.020332834  G00006  drug_006    moa_A    G00026 #> 13: 0.0195459201  0.02002235  0.015382530  G00004  drug_004    moa_A    G00021 #> 14: 0.0062733020  0.01573286  0.014713425  G00004  drug_004    moa_A    G00021 #> 15: 0.0047716696  0.02639060  0.021365112  G00004  drug_004    moa_A    G00026 #> 16: 0.0020015238  0.02122847  0.016280462  G00004  drug_004    moa_A    G00026 #> 17: 0.0241474816  0.02205106 -0.005903405  G00005  drug_005    moa_A    G00021 #> 18: 0.0080924532 -0.00401062 -0.032211087  G00005  drug_005    moa_A    G00021 #> 19: 0.0084478065  0.03074943  0.051788631  G00005  drug_005    moa_A    G00026 #> 20: 0.0009734877  0.04725145  0.081596255  G00005  drug_005    moa_A    G00026 #> 21: 0.0550440010 -0.01169389 -0.138659682  G00006  drug_006    moa_A    G00021 #> 22: 0.0268261867 -0.07492990 -0.297592786  G00006  drug_006    moa_A    G00021 #> 23: 0.0344185361  0.07855021  0.339741093  G00006  drug_006    moa_A    G00026 #> 24: 0.0090907653  0.16251115  0.384075521  G00006  drug_006    moa_A    G00026 #>      Bliss Score  CIScore 50   CIScore 80 Gnumber Drug Name Drug MOA Gnumber 2 #>     Drug Name 2 Drug MOA 2 Duration    Clid Cell Line Name   Tissue #>          <char>     <char>    <num>  <char>         <char>   <char> #>  1:    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>  2:    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>  3:    drug_026      moa_E       72 CL00016    cellline_GB tissue_y #>  4:    drug_026      moa_E       72 CL00016    cellline_GB tissue_y #>  5:    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>  6:    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #>  7:    drug_026      moa_E       72 CL00016    cellline_GB tissue_y #>  8:    drug_026      moa_E       72 CL00016    cellline_GB tissue_y #>  9:    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #> 10:    drug_021      moa_D       72 CL00016    cellline_GB tissue_y #> 11:    drug_026      moa_E       72 CL00016    cellline_GB tissue_y #> 12:    drug_026      moa_E       72 CL00016    cellline_GB tissue_y #> 13:    drug_021      moa_D       72 CL00017    cellline_HB tissue_y #> 14:    drug_021      moa_D       72 CL00017    cellline_HB tissue_y #> 15:    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 16:    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 17:    drug_021      moa_D       72 CL00017    cellline_HB tissue_y #> 18:    drug_021      moa_D       72 CL00017    cellline_HB tissue_y #> 19:    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 20:    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 21:    drug_021      moa_D       72 CL00017    cellline_HB tissue_y #> 22:    drug_021      moa_D       72 CL00017    cellline_HB tissue_y #> 23:    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #> 24:    drug_026      moa_E       72 CL00017    cellline_HB tissue_y #>     Drug Name 2 Drug MOA 2 Duration    Clid Cell Line Name   Tissue #>     Reference Division Time #>                       <num> #>  1:                      46 #>  2:                      46 #>  3:                      46 #>  4:                      46 #>  5:                      46 #>  6:                      46 #>  7:                      46 #>  8:                      46 #>  9:                      46 #> 10:                      46 #> 11:                      46 #> 12:                      46 #> 13:                      50 #> 14:                      50 #> 15:                      50 #> 16:                      50 #> 17:                      50 #> 18:                      50 #> 19:                      50 #> 20:                      50 #> 21:                      50 #> 22:                      50 #> 23:                      50 #> 24:                      50 #>     Reference Division Time #>  #> $isobolograms #>                                                  r Id #>                                                <char> #>     1: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>     2: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>     3: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>     4: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>     5: G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #>    ---                                                #> 12990: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 12991: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 12992: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 12993: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #> 12994: G00006_drug_006_moa_A_G00026_drug_026_moa_E_72 #>                                   c Id Iso Level      Pos x     Pos y #>                                 <char>    <char>      <num>     <num> #>     1: CL00016_cellline_GB_tissue_y_46     -0.05 -3.6757783 -2.283728 #>     2: CL00016_cellline_GB_tissue_y_46     -0.05 -3.1612132 -2.280315 #>     3: CL00016_cellline_GB_tissue_y_46     -0.05 -3.0184836 -2.279007 #>     4: CL00016_cellline_GB_tissue_y_46     -0.05 -2.8761652 -2.278110 #>     5: CL00016_cellline_GB_tissue_y_46     -0.05 -2.7335957 -2.276962 #>    ---                                                                #> 12990: CL00017_cellline_HB_tissue_y_50       0.8  0.7382477 -3.126321 #> 12991: CL00017_cellline_HB_tissue_y_50       0.8  0.7382477 -3.000234 #> 12992: CL00017_cellline_HB_tissue_y_50       0.8  0.7382477 -2.984900 #> 12993: CL00017_cellline_HB_tissue_y_50       0.8  0.7382477 -2.858813 #> 12994: CL00017_cellline_HB_tissue_y_50       0.8  0.7382477 -2.843478 #>         Pos x Ref Pos y Ref Log10 Ratio Conc    Log2 CI Normalization Type #>             <num>     <num>            <num>      <num>             <char> #>     1: -3.6757783 -2.283728       -0.9843283 0.00000000                 GR #>     2: -3.1646556 -2.283758       -0.6228889 0.01152660                 GR #>     3: -3.0232457 -2.283769       -0.5228889 0.01721126                 GR #>     4: -2.8818402 -2.283785       -0.4228889 0.02231182                 GR #>     5: -2.7404408 -2.283807       -0.3228889 0.03271470                 GR #>    ---                                                                     #> 12990:  0.7382477 -3.161643        2.9175283 0.00000000                 RV #> 12991:  0.7382477 -3.065879        2.8283715 0.16819143                 GR #> 12992:  0.7382477 -3.033195        2.8175283 0.12396001                 RV #> 12993:  0.7382477 -2.947395        2.7283715 0.14361810                 GR #> 12994:  0.7382477 -2.909123        2.7175283 0.15685335                 RV #>        Gnumber Drug Name Drug MOA Gnumber 2 Drug Name 2 Drug MOA 2 Duration #>         <char>    <char>   <char>    <char>      <char>     <char>    <num> #>     1:  G00004  drug_004    moa_A    G00021    drug_021      moa_D       72 #>     2:  G00004  drug_004    moa_A    G00021    drug_021      moa_D       72 #>     3:  G00004  drug_004    moa_A    G00021    drug_021      moa_D       72 #>     4:  G00004  drug_004    moa_A    G00021    drug_021      moa_D       72 #>     5:  G00004  drug_004    moa_A    G00021    drug_021      moa_D       72 #>    ---                                                                      #> 12990:  G00006  drug_006    moa_A    G00026    drug_026      moa_E       72 #> 12991:  G00006  drug_006    moa_A    G00026    drug_026      moa_E       72 #> 12992:  G00006  drug_006    moa_A    G00026    drug_026      moa_E       72 #> 12993:  G00006  drug_006    moa_A    G00026    drug_026      moa_E       72 #> 12994:  G00006  drug_006    moa_A    G00026    drug_026      moa_E       72 #>           Clid Cell Line Name   Tissue Reference Division Time #>         <char>         <char>   <char>                   <num> #>     1: CL00016    cellline_GB tissue_y                      46 #>     2: CL00016    cellline_GB tissue_y                      46 #>     3: CL00016    cellline_GB tissue_y                      46 #>     4: CL00016    cellline_GB tissue_y                      46 #>     5: CL00016    cellline_GB tissue_y                      46 #>    ---                                                         #> 12990: CL00017    cellline_HB tissue_y                      50 #> 12991: CL00017    cellline_HB tissue_y                      50 #> 12992: CL00017    cellline_HB tissue_y                      50 #> 12993: CL00017    cellline_HB tissue_y                      50 #> 12994: CL00017    cellline_HB tissue_y                      50 #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_field_to_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"get combo assay names based on the field name — convert_combo_field_to_assay","title":"get combo assay names based on the field name — convert_combo_field_to_assay","text":"get combo assay names based field name","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_field_to_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get combo assay names based on the field name — convert_combo_field_to_assay","text":"","code":"convert_combo_field_to_assay(field)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_field_to_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get combo assay names based on the field name — convert_combo_field_to_assay","text":"field String containing name field assay name returned","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_field_to_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get combo assay names based on the field name — convert_combo_field_to_assay","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_combo_field_to_assay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get combo assay names based on the field name — convert_combo_field_to_assay","text":"","code":"convert_combo_field_to_assay(\"hsa_score\") #> [1] \"scores\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"Convert assay within SummarizedExperiment object MultiAssayExperiment long data.table.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"","code":"convert_mae_assay_to_dt(   mae,   assay_name,   experiment_name = NULL,   include_metadata = TRUE,   retain_nested_rownames = FALSE,   wide_structure = FALSE )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"mae MultiAssayExperiment object holding experiments raw /processed dose-response data assays. assay_name String name assay transform within experiment mae. experiment_name String name experiment mae whose assay_name converted. Defaults NULL indicate convert assay experiments one data.table object. include_metadata Boolean indicating whether include rowData() colData() returned data.table. Defaults TRUE. retain_nested_rownames Boolean indicating whether retain rownames nested within BumpyMatrix assay. Defaults FALSE. assay_name BumpyMatrix class, argument's value ignored. TRUE, resulting column data.table named \"<assay_name>_rownames\". wide_structure Boolean indicating whether transform data.table wide format. wide_structure = TRUE requires retain_nested_rownames = TRUE however validated convert_se_assay_to_dt function","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"data.table representation data assay_name.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"NOTE: extract information 'Control' data, simply call function name assay holding data controls.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"Bartosz Czech bartosz.czech@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_assay_to_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a MultiAssayExperiment assay to a long data.table — convert_mae_assay_to_dt","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") convert_mae_assay_to_dt(mae, \"Metrics\") #>                           rId                             cId     x_mean #>                        <char>                          <char>      <num> #>   1: G00002_drug_002_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.4466890 #>   2: G00002_drug_002_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.4729298 #>   3: G00003_drug_003_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.3939872 #>   4: G00003_drug_003_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.3932199 #>   5: G00004_drug_004_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.7989283 #>  ---                                                                     #> 196: G00009_drug_009_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.0774842 #> 197: G00010_drug_010_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.5769999 #> 198: G00010_drug_010_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.1991504 #> 199: G00011_drug_011_moa_B_72 CL00020_cellline_KB_tissue_z_62  0.4117805 #> 200: G00011_drug_011_moa_B_72 CL00020_cellline_KB_tissue_z_62 -0.1148134 #>          x_AOC x_AOC_range        xc50       x_max        ec50       x_inf #>          <num>       <num>       <num>       <num>       <num>       <num> #>   1: 0.5533110   0.6277120 0.007253171  0.32793333 0.003795893  0.34682665 #>   2: 0.5270702   0.6048472 0.008956223  0.33660000 0.004512560  0.36516781 #>   3: 0.6060128   0.6954994 0.005655581  0.27413333 0.003962986  0.28319787 #>   4: 0.6067801   0.7027714 0.006591468  0.25136667 0.004714084  0.26639679 #>   5: 0.2010717   0.2385432         Inf  0.70636667 0.016546380  0.71001484 #>  ---                                                                       #> 196: 0.9225158   1.0742560 0.026077313 -0.49686667 0.037516853 -0.52393526 #> 197: 0.4230001   0.4723104 0.150209032  0.07513333 0.137152296  0.09235428 #> 198: 0.8008496   0.8915995 0.096729600 -0.78626667 0.146270629 -0.74430401 #> 199: 0.5882195   0.6900581 0.027440547  0.08603333 0.024485958  0.09662172 #> 200: 1.1148134   1.3059605 0.016239553 -0.76026667 0.026434030 -0.73401896 #>        x_0        h        r2   x_sd_avg               fit_type #>      <num>    <num>     <num>      <num>                 <char> #>   1:     1 1.827031 0.9924695 0.02424423 DRC3pHillFitModelFixS0 #>   2:     1 1.911901 0.9884406 0.03203268 DRC3pHillFitModelFixS0 #>   3:     1 2.349599 0.9958511 0.02195104 DRC3pHillFitModelFixS0 #>   4:     1 2.270093 0.9905292 0.03075240 DRC3pHillFitModelFixS0 #>   5:     1 3.159939 0.9918874 0.02315049 DRC3pHillFitModelFixS0 #>  ---                                                            #> 196:     1 1.970723 0.9955609 0.04602459 DRC3pHillFitModelFixS0 #> 197:     1 2.245643 0.9988156 0.03151223 DRC3pHillFitModelFixS0 #> 198:     1 2.204685 0.9985705 0.06333498 DRC3pHillFitModelFixS0 #> 199:     1 1.884916 0.9986615 0.03335063 DRC3pHillFitModelFixS0 #> 200:     1 1.854308 0.9987249 0.07007818 DRC3pHillFitModelFixS0 #>      maxlog10Concentration N_conc normalization_type fit_source Gnumber #>                      <num>  <int>             <char>     <char>  <char> #>   1:                     1      9                 RV        gDR  G00002 #>   2:                     1      9                 GR        gDR  G00002 #>   3:                     1      9                 RV        gDR  G00003 #>   4:                     1      9                 GR        gDR  G00003 #>   5:                     1      9                 RV        gDR  G00004 #>  ---                                                                    #> 196:                     1      9                 GR        gDR  G00009 #> 197:                     1      9                 RV        gDR  G00010 #> 198:                     1      9                 GR        gDR  G00010 #> 199:                     1      9                 RV        gDR  G00011 #> 200:                     1      9                 GR        gDR  G00011 #>      DrugName drug_moa Duration    clid CellLineName   Tissue #>        <char>   <char>    <num>  <char>       <char>   <char> #>   1: drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   2: drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   3: drug_003    moa_A       72 CL00011  cellline_BA tissue_x #>   4: drug_003    moa_A       72 CL00011  cellline_BA tissue_x #>   5: drug_004    moa_A       72 CL00011  cellline_BA tissue_x #>  ---                                                          #> 196: drug_009    moa_A       72 CL00020  cellline_KB tissue_z #> 197: drug_010    moa_A       72 CL00020  cellline_KB tissue_z #> 198: drug_010    moa_A       72 CL00020  cellline_KB tissue_z #> 199: drug_011    moa_B       72 CL00020  cellline_KB tissue_z #> 200: drug_011    moa_B       72 CL00020  cellline_KB tissue_z #>      ReferenceDivisionTime #>                      <num> #>   1:                    26 #>   2:                    26 #>   3:                    26 #>   4:                    26 #>   5:                    26 #>  ---                       #> 196:                    62 #> 197:                    62 #> 198:                    62 #> 199:                    62 #> 200:                    62"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Create JSON document. — convert_mae_to_json","title":"Create JSON document. — convert_mae_to_json","text":"Convert MultiAssayExperiment object JSON document.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create JSON document. — convert_mae_to_json","text":"","code":"convert_mae_to_json(mae, with_experiments = TRUE)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create JSON document. — convert_mae_to_json","text":"mae SummarizedExperiment object. with_experiments logical convert experiment metadata well?","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create JSON document. — convert_mae_to_json","text":"String representation JSON document.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_mae_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create JSON document. — convert_mae_to_json","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") convert_mae_to_json(mae) #> $mae #> {\"experiment_names\":[\"single-agent\"]}  #>  #> $se #> $se$`single-agent` #> {\"drug\":[\"G00002\",\"G00003\",\"G00004\",\"G00005\",\"G00006\",\"G00007\",\"G00008\",\"G00009\",\"G00010\",\"G00011\"],\"drug_name\":[\"drug_002\",\"drug_003\",\"drug_004\",\"drug_005\",\"drug_006\",\"drug_007\",\"drug_008\",\"drug_009\",\"drug_010\",\"drug_011\"],\"drug_moa\":[\"moa_A\",\"moa_A\",\"moa_A\",\"moa_A\",\"moa_A\",\"moa_A\",\"moa_A\",\"moa_A\",\"moa_A\",\"moa_B\"],\"duration\":[72,72,72,72,72,72,72,72,72,72],\"misc_rowdata\":{},\"cellline\":[\"CL00011\",\"CL00012\",\"CL00013\",\"CL00014\",\"CL00015\",\"CL00016\",\"CL00017\",\"CL00018\",\"CL00019\",\"CL00020\"],\"cellline_name\":[\"cellline_BA\",\"cellline_CA\",\"cellline_DA\",\"cellline_EA\",\"cellline_FA\",\"cellline_GB\",\"cellline_HB\",\"cellline_IB\",\"cellline_JB\",\"cellline_KB\"],\"cellline_tissue\":[\"tissue_x\",\"tissue_x\",\"tissue_x\",\"tissue_x\",\"tissue_x\",\"tissue_y\",\"tissue_y\",\"tissue_y\",\"tissue_z\",\"tissue_z\"],\"cellline_ref_div_time\":[26,30,34,38,42,46,50,54,58,62],\"misc_coldata\":{}}  #>  #>  convert_mae_to_json(mae, with_experiments = FALSE) #> $mae #> {\"experiment_names\":[\"single-agent\"]}  #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_assay_to_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","title":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","text":"Convert assay within SummarizedExperiment object long data.table.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_assay_to_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","text":"","code":"convert_se_assay_to_dt(   se,   assay_name,   include_metadata = TRUE,   retain_nested_rownames = FALSE,   wide_structure = FALSE )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_assay_to_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","text":"se SummarizedExperiment object holding raw /processed dose-response data assays. assay_name String name assay transform within se. include_metadata Boolean indicating whether include rowData(se) colData(se) returned data.table. Defaults TRUE. retain_nested_rownames Boolean indicating whether retain rownames nested within BumpyMatrix assay. Defaults FALSE. assay_name BumpyMatrix class, argument's value ignored. TRUE, resulting column data.table named \"<assay_name>_rownames\". wide_structure Boolean indicating whether transform data.table wide format. wide_structure = TRUE requires retain_nested_rownames = TRUE.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_assay_to_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","text":"data.table representation data assay_name.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_assay_to_dt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","text":"NOTE: extract information 'Control' data, simply call function name assay holding data controls. extract reference data format 'Averaged' use convert_se_ref_assay_to_dt.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_assay_to_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a SummarizedExperiment assay to a long data.table — convert_se_assay_to_dt","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] convert_se_assay_to_dt(se, \"Metrics\") #>                           rId                             cId     x_mean #>                        <char>                          <char>      <num> #>   1: G00002_drug_002_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.4466890 #>   2: G00002_drug_002_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.4729298 #>   3: G00003_drug_003_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.3939872 #>   4: G00003_drug_003_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.3932199 #>   5: G00004_drug_004_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.7989283 #>  ---                                                                     #> 196: G00009_drug_009_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.0774842 #> 197: G00010_drug_010_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.5769999 #> 198: G00010_drug_010_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.1991504 #> 199: G00011_drug_011_moa_B_72 CL00020_cellline_KB_tissue_z_62  0.4117805 #> 200: G00011_drug_011_moa_B_72 CL00020_cellline_KB_tissue_z_62 -0.1148134 #>          x_AOC x_AOC_range        xc50       x_max        ec50       x_inf #>          <num>       <num>       <num>       <num>       <num>       <num> #>   1: 0.5533110   0.6277120 0.007253171  0.32793333 0.003795893  0.34682665 #>   2: 0.5270702   0.6048472 0.008956223  0.33660000 0.004512560  0.36516781 #>   3: 0.6060128   0.6954994 0.005655581  0.27413333 0.003962986  0.28319787 #>   4: 0.6067801   0.7027714 0.006591468  0.25136667 0.004714084  0.26639679 #>   5: 0.2010717   0.2385432         Inf  0.70636667 0.016546380  0.71001484 #>  ---                                                                       #> 196: 0.9225158   1.0742560 0.026077313 -0.49686667 0.037516853 -0.52393526 #> 197: 0.4230001   0.4723104 0.150209032  0.07513333 0.137152296  0.09235428 #> 198: 0.8008496   0.8915995 0.096729600 -0.78626667 0.146270629 -0.74430401 #> 199: 0.5882195   0.6900581 0.027440547  0.08603333 0.024485958  0.09662172 #> 200: 1.1148134   1.3059605 0.016239553 -0.76026667 0.026434030 -0.73401896 #>        x_0        h        r2   x_sd_avg               fit_type #>      <num>    <num>     <num>      <num>                 <char> #>   1:     1 1.827031 0.9924695 0.02424423 DRC3pHillFitModelFixS0 #>   2:     1 1.911901 0.9884406 0.03203268 DRC3pHillFitModelFixS0 #>   3:     1 2.349599 0.9958511 0.02195104 DRC3pHillFitModelFixS0 #>   4:     1 2.270093 0.9905292 0.03075240 DRC3pHillFitModelFixS0 #>   5:     1 3.159939 0.9918874 0.02315049 DRC3pHillFitModelFixS0 #>  ---                                                            #> 196:     1 1.970723 0.9955609 0.04602459 DRC3pHillFitModelFixS0 #> 197:     1 2.245643 0.9988156 0.03151223 DRC3pHillFitModelFixS0 #> 198:     1 2.204685 0.9985705 0.06333498 DRC3pHillFitModelFixS0 #> 199:     1 1.884916 0.9986615 0.03335063 DRC3pHillFitModelFixS0 #> 200:     1 1.854308 0.9987249 0.07007818 DRC3pHillFitModelFixS0 #>      maxlog10Concentration N_conc normalization_type fit_source Gnumber #>                      <num>  <int>             <char>     <char>  <char> #>   1:                     1      9                 RV        gDR  G00002 #>   2:                     1      9                 GR        gDR  G00002 #>   3:                     1      9                 RV        gDR  G00003 #>   4:                     1      9                 GR        gDR  G00003 #>   5:                     1      9                 RV        gDR  G00004 #>  ---                                                                    #> 196:                     1      9                 GR        gDR  G00009 #> 197:                     1      9                 RV        gDR  G00010 #> 198:                     1      9                 GR        gDR  G00010 #> 199:                     1      9                 RV        gDR  G00011 #> 200:                     1      9                 GR        gDR  G00011 #>      DrugName drug_moa Duration    clid CellLineName   Tissue #>        <char>   <char>    <num>  <char>       <char>   <char> #>   1: drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   2: drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   3: drug_003    moa_A       72 CL00011  cellline_BA tissue_x #>   4: drug_003    moa_A       72 CL00011  cellline_BA tissue_x #>   5: drug_004    moa_A       72 CL00011  cellline_BA tissue_x #>  ---                                                          #> 196: drug_009    moa_A       72 CL00020  cellline_KB tissue_z #> 197: drug_010    moa_A       72 CL00020  cellline_KB tissue_z #> 198: drug_010    moa_A       72 CL00020  cellline_KB tissue_z #> 199: drug_011    moa_B       72 CL00020  cellline_KB tissue_z #> 200: drug_011    moa_B       72 CL00020  cellline_KB tissue_z #>      ReferenceDivisionTime #>                      <num> #>   1:                    26 #>   2:                    26 #>   3:                    26 #>   4:                    26 #>   5:                    26 #>  ---                       #> 196:                    62 #> 197:                    62 #> 198:                    62 #> 199:                    62 #> 200:                    62"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Create JSON document. — convert_se_to_json","title":"Create JSON document. — convert_se_to_json","text":"Convert SummarizedExperiment object JSON document.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create JSON document. — convert_se_to_json","text":"","code":"convert_se_to_json(se)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create JSON document. — convert_se_to_json","text":"se SummarizedExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create JSON document. — convert_se_to_json","text":"String representation JSON document.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/convert_se_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create JSON document. — convert_se_to_json","text":"","code":"md <- list(title = \"my awesome experiment\",   description = \"description of experiment\",   source = list(name = \"GeneData_Screener\", id = \"QCS-12345\")) rdata <- data.table::data.table(  mydrug = letters,    mydrugname = letters,    mydrugmoa = letters,    Duration = 1) cdata <- data.table::data.table(mycellline = letters, mycelllinename = letters,  mycelllinetissue = letters, cellline_ref_div_time = letters) identifiers <- list(cellline = \"mycellline\",                     cellline_name = \"mycelllinename\",                     cellline_tissue = \"mycelllinetissue\",                     cellline_ref_div_time = \"cellline_ref_div_time\",                     drug = \"mydrug\",                     drug_name = \"mydrugname\",                     drug_moa = \"mydrugmoa\",                     duration = \"Duration\") se <- SummarizedExperiment::SummarizedExperiment(rowData = rdata,                                                  colData = cdata) se <- gDRutils::set_SE_experiment_metadata(se, md) se <- gDRutils::set_SE_identifiers(se, identifiers) convert_se_to_json(se) #> {\"title\":\"my awesome experiment\",\"description\":\"description of experiment\",\"source\":{\"name\":\"GeneData_Screener\",\"id\":\"QCS-12345\"},\"drug\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"drug_name\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"drug_moa\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"duration\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"misc_rowdata\":{},\"cellline\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"cellline_name\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"cellline_tissue\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"cellline_ref_div_time\":[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],\"misc_coldata\":{}}"},{"path":"https://gdrplatform.github.io/gDRutils/reference/demote_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","title":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","text":"Demote metadata field rowData colData SummarizedExperiment object nested field BumpyMatrix assay.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/demote_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","text":"","code":"demote_fields(se, fields)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/demote_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","text":"se SummarizedExperiment object. fields Character vector metadata fields demote nested columns.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/demote_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","text":"SummarizedExperiment object new dimensions resulting demoting given fields nested columns.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/demote_fields.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","text":"Revert operation using promote_fields.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/demote_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Demote a metadata field in the rowData or colData of a SummarizedExperiment object\nto a nested field of a BumpyMatrix assay. — demote_fields","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] se <- promote_fields(se, \"ReadoutValue\", 2) #> Warning: dropping assay 'Controls' from the final SE #> Warning: dropping assay 'Normalized' from the final SE #> Warning: dropping assay 'Averaged' from the final SE #> Warning: dropping assay 'Metrics' from the final SE demote_fields(se, \"ReadoutValue\") #> class: SummarizedExperiment  #> dim: 10 10  #> metadata(5): identifiers experiment_metadata Keys fit_parameters #>   .internal #> assays(1): RawTreated #> rownames(10): 1 14 ... 111 127 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(10): 1 271 ... 2161 2431 #> colData names(4): clid CellLineName Tissue ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDRutils/reference/df_to_bm_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"df_to_bm_assay — df_to_bm_assay","title":"df_to_bm_assay — df_to_bm_assay","text":"Convert data.table dose-reponse data BumpyMatrix assay.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/df_to_bm_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"df_to_bm_assay — df_to_bm_assay","text":"","code":"df_to_bm_assay(data, discard_keys = NULL)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/df_to_bm_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"df_to_bm_assay — df_to_bm_assay","text":"data data.table drug-response data discard_keys vector keys discarded","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/df_to_bm_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"df_to_bm_assay — df_to_bm_assay","text":"BumpyMatrix object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/df_to_bm_assay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"df_to_bm_assay — df_to_bm_assay","text":"'assay' simply BumpyMatrix object rownames treatment ids, colnames ids cell lines values dose-response data given cell lines given conditions.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/df_to_bm_assay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"df_to_bm_assay — df_to_bm_assay","text":"","code":"df_to_bm_assay(data.table::data.table(Gnumber = 2, clid = \"A\")) #> 1 x 1 BumpyDataFrameMatrix #> rownames: 1  #> colnames: 1  #> preview [1,1]: #>   DataFrame with 1 row and 0 columns"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_colData_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert colData to JSON — .convert_colData_to_json","title":"Convert colData to JSON — .convert_colData_to_json","text":"Convert colData JSON format elasticsearch indexing.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_colData_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert colData to JSON — .convert_colData_to_json","text":"","code":".convert_colData_to_json(   cdata,   identifiers,   req_cols = c(\"cellline\", \"cellline_name\", \"cellline_tissue\", \"cellline_ref_div_time\") )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_colData_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert colData to JSON — .convert_colData_to_json","text":"cdata data.table colData. identifiers charvec identifiers req_cols charvec required columns","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_colData_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert colData to JSON — .convert_colData_to_json","text":"JSON string capturing cdata.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_colData_to_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert colData to JSON — .convert_colData_to_json","text":"Standardizes cdata common schema fields tidies formatting condusive joining JSON responses.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_colData_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert colData to JSON — .convert_colData_to_json","text":"","code":"cdata <- data.table::data.table(   mycellline = letters,    mycelllinename = letters,    mycelllinetissue = letters,   cellline_ref_div_time = \"cellline_ref_div_time\") identifiers <- list(cellline = \"mycellline\",                     cellline_name = \"mycelllinename\",                     cellline_ref_div_time = \"cellline_ref_div_time\",                     cellline_tissue = \"mycelllinetissue\") gDRutils:::.convert_colData_to_json(cdata, identifiers) #> [1] \"\\\"cellline\\\":[\\\"a\\\",\\\"b\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\",\\\"f\\\",\\\"g\\\",\\\"h\\\",\\\"i\\\",\\\"j\\\",\\\"k\\\",\\\"l\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"t\\\",\\\"u\\\",\\\"v\\\",\\\"w\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\"],\\\"cellline_name\\\":[\\\"a\\\",\\\"b\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\",\\\"f\\\",\\\"g\\\",\\\"h\\\",\\\"i\\\",\\\"j\\\",\\\"k\\\",\\\"l\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"t\\\",\\\"u\\\",\\\"v\\\",\\\"w\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\"],\\\"cellline_tissue\\\":[\\\"a\\\",\\\"b\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\",\\\"f\\\",\\\"g\\\",\\\"h\\\",\\\"i\\\",\\\"j\\\",\\\"k\\\",\\\"l\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"t\\\",\\\"u\\\",\\\"v\\\",\\\"w\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\"],\\\"cellline_ref_div_time\\\":[\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\",\\\"cellline_ref_div_time\\\"], \\\"misc_coldata\\\": {}\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_mae_summary_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Create JSON document with MAE summary — .convert_mae_summary_to_json","title":"Create JSON document with MAE summary — .convert_mae_summary_to_json","text":"Create JSON document MAE summary, currently experiment names","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_mae_summary_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create JSON document with MAE summary — .convert_mae_summary_to_json","text":"","code":".convert_mae_summary_to_json(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_mae_summary_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create JSON document with MAE summary — .convert_mae_summary_to_json","text":"mae MultiAssayExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_mae_summary_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create JSON document with MAE summary — .convert_mae_summary_to_json","text":"String representation JSON document.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_metadata_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert experiment metadata to JSON — .convert_metadata_to_json","title":"Convert experiment metadata to JSON — .convert_metadata_to_json","text":"Convert experiment metadata JSON format elasticsearch indexing.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_metadata_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert experiment metadata to JSON — .convert_metadata_to_json","text":"","code":".convert_metadata_to_json(se)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_metadata_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert experiment metadata to JSON — .convert_metadata_to_json","text":"se SummarizedExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_metadata_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert experiment metadata to JSON — .convert_metadata_to_json","text":"JSON string capturing experiment metadata.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_metadata_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert experiment metadata to JSON — .convert_metadata_to_json","text":"","code":"md <- list(title = \"my awesome experiment\",   description = \"description of experiment\",   sources = list(list(name = \"GeneData_Screener\", id = \"QCS-12345\"))) se <- SummarizedExperiment::SummarizedExperiment(metadata = md) gDRutils:::.convert_metadata_to_json(se) #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_rowData_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert rowData to JSON — .convert_rowData_to_json","title":"Convert rowData to JSON — .convert_rowData_to_json","text":"Convert rowData JSON format elasticsearch indexing.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_rowData_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert rowData to JSON — .convert_rowData_to_json","text":"","code":".convert_rowData_to_json(   rdata,   identifiers,   req_cols = c(\"drug\", \"drug_name\", \"drug_moa\", \"duration\") )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_rowData_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert rowData to JSON — .convert_rowData_to_json","text":"rdata data.table rowData. identifiers charvec identifiers req_cols charvec required columns","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_rowData_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert rowData to JSON — .convert_rowData_to_json","text":"JSON string capturing rdata.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_rowData_to_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert rowData to JSON — .convert_rowData_to_json","text":"Standardizes rdata common schema fields tidies formatting condusive joining JSON responses.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-convert_rowData_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert rowData to JSON — .convert_rowData_to_json","text":"","code":"rdata <- data.table::data.table(   mydrug = letters,    mydrugname = letters,    mydrugmoa = letters,    Duration = 1) identifiers <- list(drug = \"mydrug\", drug_name = \"mydrugname\", drug_moa = \"mydrugmoa\", duration = \"Duration\") gDRutils:::.convert_rowData_to_json(rdata, identifiers) #> [1] \"\\\"drug\\\":[\\\"a\\\",\\\"b\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\",\\\"f\\\",\\\"g\\\",\\\"h\\\",\\\"i\\\",\\\"j\\\",\\\"k\\\",\\\"l\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"t\\\",\\\"u\\\",\\\"v\\\",\\\"w\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\"],\\\"drug_name\\\":[\\\"a\\\",\\\"b\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\",\\\"f\\\",\\\"g\\\",\\\"h\\\",\\\"i\\\",\\\"j\\\",\\\"k\\\",\\\"l\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"t\\\",\\\"u\\\",\\\"v\\\",\\\"w\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\"],\\\"drug_moa\\\":[\\\"a\\\",\\\"b\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\",\\\"f\\\",\\\"g\\\",\\\"h\\\",\\\"i\\\",\\\"j\\\",\\\"k\\\",\\\"l\\\",\\\"m\\\",\\\"n\\\",\\\"o\\\",\\\"p\\\",\\\"q\\\",\\\"r\\\",\\\"s\\\",\\\"t\\\",\\\"u\\\",\\\"v\\\",\\\"w\\\",\\\"x\\\",\\\"y\\\",\\\"z\\\"],\\\"duration\\\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], \\\"misc_rowdata\\\": {}\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_constant_fit_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Set fit parameters for a constant fit. — .set_constant_fit_params","title":"Set fit parameters for a constant fit. — .set_constant_fit_params","text":"Replace values flat fits: ec50 = 0, h = 0.0001 xc50 = +/- Inf","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_constant_fit_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set fit parameters for a constant fit. — .set_constant_fit_params","text":"","code":".set_constant_fit_params(out, mean_norm_value)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_constant_fit_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set fit parameters for a constant fit. — .set_constant_fit_params","text":"Named list fit parameters. mean_norm_value Numeric value used set parameters can calculated mean.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_constant_fit_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set fit parameters for a constant fit. — .set_constant_fit_params","text":"Modified named list fit parameters.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_constant_fit_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set fit parameters for a constant fit. — .set_constant_fit_params","text":"","code":"na <- list(x_0 = NA) gDRutils:::.set_constant_fit_params(na, mean_norm_value = 0.6) #> $x_0 #> [1] 0.6 #>  #> $fit_type #> [1] \"DRCConstantFitResult\" #>  #> $ec50 #> [1] 0 #>  #> $h #> [1] 1e-04 #>  #> $r2 #> [1] 0 #>  #> $xc50 #> [1] Inf #>  #> $x_mean #> [1] 0.6 #>  #> $x_inf #> [1] 0.6 #>  #> $x_AOC #> [1] 0.4 #>  #> $x_AOC_range #> [1] 0.4 #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_invalid_fit_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Set fit parameters for an invalid fit. — .set_invalid_fit_params","title":"Set fit parameters for an invalid fit. — .set_invalid_fit_params","text":"Set fit parameters invalid fit.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_invalid_fit_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set fit parameters for an invalid fit. — .set_invalid_fit_params","text":"","code":".set_invalid_fit_params(out, norm_values)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_invalid_fit_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set fit parameters for an invalid fit. — .set_invalid_fit_params","text":"Named list fit parameters. norm_values Numeric vector used estimate xc50 value.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_invalid_fit_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set fit parameters for an invalid fit. — .set_invalid_fit_params","text":"Modified named list fit parameters.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/dot-set_invalid_fit_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set fit parameters for an invalid fit. — .set_invalid_fit_params","text":"","code":".set_invalid_fit_params(list(), norm_values = rep(0.3, 6)) #> $fit_type #> [1] \"DRCInvalidFitResult\" #>  #> $r2 #> [1] NA #>  #> $xc50 #> [1] -Inf #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/extend_normalization_type_name.html","id":null,"dir":"Reference","previous_headings":"","what":"extend abbreviated normalization type — extend_normalization_type_name","title":"extend abbreviated normalization type — extend_normalization_type_name","text":"extend abbreviated normalization type","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/extend_normalization_type_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extend abbreviated normalization type — extend_normalization_type_name","text":"","code":"extend_normalization_type_name(x)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/extend_normalization_type_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extend abbreviated normalization type — extend_normalization_type_name","text":"x string normalization type","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/extend_normalization_type_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extend abbreviated normalization type — extend_normalization_type_name","text":"string","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/extend_normalization_type_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extend abbreviated normalization type — extend_normalization_type_name","text":"","code":"extend_normalization_type_name(\"GR\") #> [1] \"GRvalue\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/fit_curves.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit curves — fit_curves","title":"Fit curves — fit_curves","text":"Fit GR RV curves data.table.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/fit_curves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit curves — fit_curves","text":"","code":"fit_curves(   df_,   series_identifiers,   e_0 = 1,   GR_0 = 1,   n_point_cutoff = 4,   range_conc = c(0.005, 5),   force_fit = FALSE,   pcutoff = 0.05,   cap = 0.1,   normalization_type = c(\"GR\", \"RV\") )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/fit_curves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit curves — fit_curves","text":"df_ data.table containing data fit. See details. series_identifiers character vector column names data.table whose combination represents unique series fit curves. e_0 numeric value representing x_0 value RV curve. Defaults 1. GR_0 numeric value representing x_0 value GR curve. Defaults 1. n_point_cutoff integer many points considered minimum required try fit curve. Defaults 4. range_conc numeric vector length 2 indicating lower upper concentration ranges. Defaults c(5e-3, 5). See details. force_fit boolean indicating whether force constant fit. Defaults FALSE. pcutoff numeric pvalue significance threshold equal use constant fit. Defaults 0.05. cap numeric value capping norm_values stay (x_0 + cap). Defaults 0.1. normalization_type character vector types curves fit. Defaults c(\"GR\", \"RV\").","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/fit_curves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit curves — fit_curves","text":"data.table fit parameters specified normalization_type.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/fit_curves.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit curves — fit_curves","text":"df_ expects following columns: RelativeViability normalized relative viability values (normalization_type includes \"RV\") GRvalue normalized GR values (normalization_type includes \"GR\") range_conc used calculate x_AOC_range statistic. purpose statistic enable comparison across different experiments slightly different concentration ranges.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/fit_curves.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit curves — fit_curves","text":"","code":"df_ <- data.table::data.table(Concentration = c(0.001, 0.00316227766016838,  0.01, 0.0316227766016838), x_std = c(0.1, 0.1, 0.1, 0.1), normalization_types = c(\"RV\", \"RV\", \"RV\", \"RV\"), x = c(0.9999964000144, 0.999964001439942, 0.999640143942423, 0.996414342629482))  fit_curves(df_, \"Concentration\", normalization_type = \"RV\") #>       x_mean        x_AOC x_AOC_range  xc50     x_max      ec50     x_inf   x_0 #>        <num>        <num>       <num> <num>     <num>     <num>     <num> <num> #> 1: 0.9994663 0.0005336782  0.07214082   Inf 0.9964143 0.2030077 0.8446057     1 #>           h    r2 x_sd_avg               fit_type maxlog10Concentration N_conc #>       <num> <num>    <num>                 <char>                 <num>  <int> #> 1: 2.014503     1      0.1 DRC3pHillFitModelFixS0                  -1.5      4 #>    normalization_type fit_source #>                <char>     <char> #> 1:                 RV        gDR"},{"path":"https://gdrplatform.github.io/gDRutils/reference/flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a table — flatten","title":"Flatten a table — flatten","text":"Flatten stacked table wide format.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a table — flatten","text":"","code":"flatten(tbl, groups, wide_cols, sep = \"_\")"},{"path":"https://gdrplatform.github.io/gDRutils/reference/flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a table — flatten","text":"tbl table flatten. groups character vector column names representing uniquifying groups expansion. wide_cols character vector column names flatten. sep string representing separator wide_cols columns, used column renaming. Defaults \"_\".","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a table — flatten","text":"table flattened data defined wide_cols.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/flatten.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flatten a table — flatten","text":"flattened columns named original column names prefixed wide_cols columns, concatenated together separated sep. common use case function flattened version \"Metrics\" assay desired.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/flatten.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flatten a table — flatten","text":"","code":"n <- 4 m <- 5 grid <- expand.grid(normalization_type = c(\"GR\", \"RV\"),   source = c(\"GDS\", \"GDR\")) repgrid <- data.table::rbindlist(rep(list(grid), m)) repgrid$wide <- seq(m * n) repgrid$id <- rep(LETTERS[1:m], each = n)  groups <- colnames(grid) wide_cols <- c(\"wide\")  flatten(repgrid, groups = groups, wide_cols = wide_cols) #>    GR_GDS_wide     id RV_GDS_wide GR_GDR_wide RV_GDR_wide #>          <int> <char>       <int>       <int>       <int> #> 1:           1      A           2           3           4 #> 2:           5      B           6           7           8 #> 3:           9      C          10          11          12 #> 4:          13      D          14          15          16 #> 5:          17      E          18          19          20"},{"path":"https://gdrplatform.github.io/gDRutils/reference/gDRutils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gDRutils: A package with helper functions for processing drug response data — gDRutils-package","title":"gDRutils: A package with helper functions for processing drug response data — gDRutils-package","text":"package contains utility functions used throughout gDR platform fit data, manipulate data, convert validate data structures. package also necessary default constants gDR platform. Many functions utilized gDRcore package.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gDRutils-package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gDRutils: A package with helper functions for processing drug response data — gDRutils-package","text":"package help page","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gDRutils-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"gDRutils: A package with helper functions for processing drug response data — gDRutils-package","text":"learn functions start help(package = \"gDRutils\")","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gDRutils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gDRutils: A package with helper functions for processing drug response data — gDRutils-package","text":"Maintainer: Arkadiusz Gladki gladki.arkadiusz@gmail.com Authors: Bartosz Czech Aleksander Chlebowski Marc Hafner Pawel Piatkowski Dariusz Scigocki Janina Smola Sergiu Mocanu Allison Vuong","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gen_synthetic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"gen_synthetic_data — gen_synthetic_data","title":"gen_synthetic_data — gen_synthetic_data","text":"Function generating local synthetic data used unit tests modules","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gen_synthetic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gen_synthetic_data — gen_synthetic_data","text":"","code":"gen_synthetic_data(m = 1, n = 5)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/gen_synthetic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gen_synthetic_data — gen_synthetic_data","text":"m number drugs n number records","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gen_synthetic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gen_synthetic_data — gen_synthetic_data","text":"list drugs, cell_lines, raw_data assay_data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/gen_synthetic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gen_synthetic_data — gen_synthetic_data","text":"","code":"gen_synthetic_data() #> $drug_names #> [1] \"drug_001\" #>  #> $cell_names #> [1] \"cellline_BA\" \"cellline_CA\" \"cellline_DA\" \"cellline_EA\" \"cellline_FA\" #>  #> $dt #>    Drug Name Drug MOA Cell Line Name   Tissue GR_AOC GR Inf  GR 0 GEC50  h GR #>       <char>   <char>         <char>   <char>  <num>  <num> <num> <num> <num> #> 1:  drug_001    moa_B    cellline_BA tissue_x    0.1    0.1   0.1   0.1   0.1 #> 2:  drug_001    moa_B    cellline_CA tissue_x    0.7    0.7   0.7   0.7   0.7 #> 3:  drug_001    moa_B    cellline_DA tissue_x    1.3    1.3   1.3   1.3   1.3 #> 4:  drug_001    moa_B    cellline_EA tissue_x    1.9    1.9   1.9   1.9   1.9 #> 5:  drug_001    moa_B    cellline_FA tissue_y    2.5    2.5   2.5   2.5   2.5 #>    E Inf    E0  EC50  h RV  GR50  IC50 GR Max E Max GR value Concentration #>    <num> <num> <num> <num> <num> <num>  <num> <num>    <num>         <num> #> 1:   0.1   0.1   0.1   0.1   0.1   0.1    0.1   0.1      0.1           0.1 #> 2:   0.7   0.7   0.7   0.7   0.7   0.7    0.7   0.7      0.7           0.7 #> 3:   1.3   1.3   1.3   1.3   1.3   1.3    1.3   1.3      1.3           1.3 #> 4:   1.9   1.9   1.9   1.9   1.9   1.9    1.9   1.9      1.9           1.9 #> 5:   2.5   2.5   2.5   2.5   2.5   2.5    2.5   2.5      2.5           2.5 #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/geometric_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric mean — geometric_mean","title":"Geometric mean — geometric_mean","text":"Auxiliary function calculating geometric mean possibility handle -Inf","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/geometric_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric mean — geometric_mean","text":"","code":"geometric_mean(x, fixed = TRUE, maxlog10Concentration = 1)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/geometric_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric mean — geometric_mean","text":"x numeric vector fixed flag add fix -Inf maxlog10Concentration numeric value needed calculate minimal value","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/geometric_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric mean — geometric_mean","text":"numeric vector","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/geometric_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric mean — geometric_mean","text":"","code":"geometric_mean(c(2, 8)) #> [1] 4"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_MAE_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"get_MAE_identifiers — get_MAE_identifiers","title":"get_MAE_identifiers — get_MAE_identifiers","text":"get identifiers SE's MAE","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_MAE_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_MAE_identifiers — get_MAE_identifiers","text":"","code":"get_MAE_identifiers(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_MAE_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_MAE_identifiers — get_MAE_identifiers","text":"mae MultiAssayExperiment","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_MAE_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_MAE_identifiers — get_MAE_identifiers","text":"named list identifiers SE","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_MAE_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_MAE_identifiers — get_MAE_identifiers","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") get_MAE_identifiers(mae) #> $`single-agent` #> $`single-agent`$duration #> [1] \"Duration\" #>  #> $`single-agent`$cellline #> [1] \"clid\" #>  #> $`single-agent`$cellline_name #> [1] \"CellLineName\" #>  #> $`single-agent`$cellline_tissue #> [1] \"Tissue\" #>  #> $`single-agent`$cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $`single-agent`$cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $`single-agent`$cellline_subtype #> [1] \"subtype\" #>  #> $`single-agent`$drug #> [1] \"Gnumber\" #>  #> $`single-agent`$drug_name #> [1] \"DrugName\" #>  #> $`single-agent`$drug_moa #> [1] \"drug_moa\" #>  #> $`single-agent`$untreated_tag #> [1] \"vehicle\"   \"untreated\" #>  #> $`single-agent`$masked_tag #> [1] \"masked\" #>  #> $`single-agent`$well_position #> [1] \"WellRow\"    \"WellColumn\" #>  #> $`single-agent`$concentration #> [1] \"Concentration\" #>  #> $`single-agent`$template #> [1] \"Template\"  \"Treatment\" #>  #> $`single-agent`$barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $`single-agent`$drug2 #> [1] \"Gnumber_2\" #>  #> $`single-agent`$drug_name2 #> [1] \"DrugName_2\" #>  #> $`single-agent`$drug_moa2 #> [1] \"drug_moa_2\" #>  #> $`single-agent`$concentration2 #> [1] \"Concentration_2\" #>  #> $`single-agent`$drug3 #> [1] \"Gnumber_3\" #>  #> $`single-agent`$drug_name3 #> [1] \"DrugName_3\" #>  #> $`single-agent`$drug_moa3 #> [1] \"drug_moa_3\" #>  #> $`single-agent`$concentration3 #> [1] \"Concentration_3\" #>  #> $`single-agent`$data_source #> [1] \"data_source\" #>  #> $`single-agent`$replicate #> [1] \"Replicate\" #>  #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_assay_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","title":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","text":"get assay names given se/dataset fetch data se provided metadata use predefined values get_env_assay_names otherwise","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_assay_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","text":"","code":"get_assay_names(se = NULL, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_assay_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","text":"se SummarizedExperiment NULL ... Additional arguments pass get_env_assay_names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_assay_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_assay_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","text":"Arkadiusz Gładki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_assay_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get assay names of the given se/dataset\nfetch the data from the se if provided as metadata\nuse predefined values from get_env_assay_names otherwise — get_assay_names","text":"","code":"get_assay_names() #>            raw        control     normalized       averaged        metrics  #>   \"rawTreated\"     \"Controls\"   \"Normalized\"     \"Averaged\"      \"Metrics\"  #>         excess         scores   isobolograms  #>       \"excess\"       \"scores\" \"isobolograms\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_assay_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get names of combo assays — get_combo_assay_names","title":"get names of combo assays — get_combo_assay_names","text":"get names combo assays","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_assay_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get names of combo assays — get_combo_assay_names","text":"","code":"get_combo_assay_names(se = NULL, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_assay_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get names of combo assays — get_combo_assay_names","text":"se SummarizedExperiment NULL ... Additional arguments pass get_assay_names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_assay_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get names of combo assays — get_combo_assay_names","text":"charvec combo assay names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_assay_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get names of combo assays — get_combo_assay_names","text":"Arkadiusz Gładki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_assay_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get names of combo assays — get_combo_assay_names","text":"","code":"get_combo_assay_names() #>         excess         scores   isobolograms  #>       \"excess\"       \"scores\" \"isobolograms\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_base_assay_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get names of combo base assays — get_combo_base_assay_names","title":"get names of combo base assays — get_combo_base_assay_names","text":"get names combo base assays","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_base_assay_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get names of combo base assays — get_combo_base_assay_names","text":"","code":"get_combo_base_assay_names(se = NULL, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_base_assay_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get names of combo base assays — get_combo_base_assay_names","text":"se SummarizedExperiment NULL ... Additional arguments pass get_combo_assay_names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_base_assay_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get names of combo base assays — get_combo_base_assay_names","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_base_assay_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get names of combo base assays — get_combo_base_assay_names","text":"Arkadiusz Gładki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_base_assay_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get names of combo base assays — get_combo_base_assay_names","text":"","code":"get_combo_base_assay_names() #>   excess  #> \"excess\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_col_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get colorscale data for given combo assay and growth metric — get_combo_col_settings","title":"Get colorscale data for given combo assay and growth metric — get_combo_col_settings","text":"Get colorscale data given combo assay growth metric","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_col_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get colorscale data for given combo assay and growth metric — get_combo_col_settings","text":"","code":"get_combo_col_settings(g_metric, assay_type)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_col_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get colorscale data for given combo assay and growth metric — get_combo_col_settings","text":"g_metric growth metric assay_type assay type","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_col_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get colorscale data for given combo assay and growth metric — get_combo_col_settings","text":"list colors, breaks limits","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_col_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get colorscale data for given combo assay and growth metric — get_combo_col_settings","text":"","code":"get_combo_col_settings(\"GR\", \"excess\") #> $colors #> [1] \"#003355\" \"#4488dd\" \"#eeeedd\" \"#CC8844\" \"#662200\" #>  #> $breaks #> [1] -0.50 -0.25  0.00  0.25  0.50 #>  #> $limits #> [1] -0.5  0.5 #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_excess_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get names of combo excess fields — get_combo_excess_field_names","title":"get names of combo excess fields — get_combo_excess_field_names","text":"get names combo excess fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_excess_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get names of combo excess fields — get_combo_excess_field_names","text":"","code":"get_combo_excess_field_names()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_excess_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get names of combo excess fields — get_combo_excess_field_names","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_excess_field_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get names of combo excess fields — get_combo_excess_field_names","text":"","code":"get_combo_excess_field_names() #>         smooth     hsa_excess   bliss_excess  #>      \"MX full\"   \"HSA excess\" \"Bliss excess\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_assay_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get names of combo score assays — get_combo_score_assay_names","title":"get names of combo score assays — get_combo_score_assay_names","text":"get names combo score assays","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_assay_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get names of combo score assays — get_combo_score_assay_names","text":"","code":"get_combo_score_assay_names(se = NULL, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_assay_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get names of combo score assays — get_combo_score_assay_names","text":"se SummarizedExperiment NULL ... Additional arguments pass get_combo_assay_names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_assay_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get names of combo score assays — get_combo_score_assay_names","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_assay_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get names of combo score assays — get_combo_score_assay_names","text":"Arkadiusz Gładki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_assay_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get names of combo score assays — get_combo_score_assay_names","text":"","code":"get_combo_score_assay_names() #>   scores  #> \"scores\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get names of combo score fields — get_combo_score_field_names","title":"get names of combo score fields — get_combo_score_field_names","text":"get names combo score fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get names of combo score fields — get_combo_score_field_names","text":"","code":"get_combo_score_field_names()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get names of combo score fields — get_combo_score_field_names","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_combo_score_field_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get names of combo score fields — get_combo_score_field_names","text":"","code":"get_combo_score_assay_names() #>   scores  #> \"scores\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_default_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gDR default identifiers required for downstream analysis. — get_default_identifiers","title":"Get gDR default identifiers required for downstream analysis. — get_default_identifiers","text":"Get gDR default identifiers required downstream analysis.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_default_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gDR default identifiers required for downstream analysis. — get_default_identifiers","text":"","code":"get_default_identifiers()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_default_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gDR default identifiers required for downstream analysis. — get_default_identifiers","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_default_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get gDR default identifiers required for downstream analysis. — get_default_identifiers","text":"","code":"get_default_identifiers() #> $duration #> [1] \"Duration\" #>  #> $cellline #> [1] \"clid\" #>  #> $cellline_name #> [1] \"CellLineName\" #>  #> $cellline_tissue #> [1] \"Tissue\" #>  #> $cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $cellline_subtype #> [1] \"subtype\" #>  #> $drug #> [1] \"Gnumber\" #>  #> $drug_name #> [1] \"DrugName\" #>  #> $drug_moa #> [1] \"drug_moa\" #>  #> $untreated_tag #> [1] \"vehicle\"   \"untreated\" #>  #> $masked_tag #> [1] \"masked\" #>  #> $well_position #> [1] \"WellRow\"    \"WellColumn\" #>  #> $concentration #> [1] \"Concentration\" #>  #> $template #> [1] \"Template\"  \"Treatment\" #>  #> $barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $drug2 #> [1] \"Gnumber_2\" #>  #> $drug_name2 #> [1] \"DrugName_2\" #>  #> $drug_moa2 #> [1] \"drug_moa_2\" #>  #> $concentration2 #> [1] \"Concentration_2\" #>  #> $drug3 #> [1] \"Gnumber_3\" #>  #> $drug_name3 #> [1] \"DrugName_3\" #>  #> $drug_moa3 #> [1] \"drug_moa_3\" #>  #> $concentration3 #> [1] \"Concentration_3\" #>  #> $data_source #> [1] \"data_source\" #>  #> $replicate #> [1] \"Replicate\" #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_duplicated_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to find duplicated rows — get_duplicated_rows","title":"Helper function to find duplicated rows — get_duplicated_rows","text":"Helper function find duplicated rows","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_duplicated_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to find duplicated rows — get_duplicated_rows","text":"","code":"get_duplicated_rows(x, col_names = NULL)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_duplicated_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to find duplicated rows — get_duplicated_rows","text":"x data frame col_names character vector, columns duplication searched ","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_duplicated_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to find duplicated rows — get_duplicated_rows","text":"integer vector","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_duplicated_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to find duplicated rows — get_duplicated_rows","text":"","code":"dt <- data.table::data.table(a = c(1, 2, 3), b = c(3, 2, 2)) get_duplicated_rows(dt, \"b\") #> [1] 2 3"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_env_assay_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","title":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","text":"get default assay names specified filters, .e. set assay types, assay groups assay data types","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_env_assay_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","text":"","code":"get_env_assay_names(   type = NULL,   group = NULL,   data_type = NULL,   prettify = FALSE,   simplify = TRUE )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_env_assay_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","text":"type charvec assay types group charvec assay groups data_type charvec assay data types prettify logical flag, prettify assay name? simplify logical flag, simplify output? return single string instead named vector single element useful function expected return single element/assay ","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_env_assay_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_env_assay_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","text":"Arkadiusz Gładki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_env_assay_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get default assay names\nfor the specified filters,\ni.e. set of assay types, assay groups and assay data types — get_env_assay_names","text":"","code":"get_env_assay_names() #>            raw        control     normalized       averaged        metrics  #>   \"rawTreated\"     \"Controls\"   \"Normalized\"     \"Averaged\"      \"Metrics\"  #>         excess         scores   isobolograms  #>       \"excess\"       \"scores\" \"isobolograms\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_expect_one_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get identifiers that expect only one value for each identifier. — get_expect_one_identifiers","title":"Get identifiers that expect only one value for each identifier. — get_expect_one_identifiers","text":"Get identifiers expect one value identifier.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_expect_one_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get identifiers that expect only one value for each identifier. — get_expect_one_identifiers","text":"","code":"get_expect_one_identifiers()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_expect_one_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get identifiers that expect only one value for each identifier. — get_expect_one_identifiers","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_expect_one_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get identifiers that expect only one value for each identifier. — get_expect_one_identifiers","text":"","code":"get_expect_one_identifiers() #>  [1] \"duration\"                     \"cellline\"                     #>  [3] \"cellline_name\"                \"cellline_tissue\"              #>  [5] \"cellline_ref_div_time\"        \"cellline_parental_identifier\" #>  [7] \"cellline_subtype\"             \"drug\"                         #>  [9] \"drug_name\"                    \"drug_moa\"                     #> [11] \"masked_tag\"                   \"concentration\"                #> [13] \"template\"                     \"barcode\"                      #> [15] \"drug2\"                        \"drug_name2\"                   #> [17] \"drug_moa2\"                    \"concentration2\"               #> [19] \"drug3\"                        \"drug_name3\"                   #> [21] \"drug_moa3\"                    \"concentration3\"               #> [23] \"data_source\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_experiment_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"get_experiment_groups — get_experiment_groups","title":"get_experiment_groups — get_experiment_groups","text":"get experiment groups","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_experiment_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_experiment_groups — get_experiment_groups","text":"","code":"get_experiment_groups(type = NULL)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_experiment_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_experiment_groups — get_experiment_groups","text":"type String indicating name assay group. Defaults experiment groups.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_experiment_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_experiment_groups — get_experiment_groups","text":"list experiment groups string (type NULL)","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_experiment_groups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_experiment_groups — get_experiment_groups","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_experiment_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_experiment_groups — get_experiment_groups","text":"","code":"get_experiment_groups() #> $`single-agent` #>   single-agent    co-dilution  #> \"single-agent\"  \"co-dilution\"  #>  #> $combination #> [1] \"combination\" #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_identifiers_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Get descriptions for identifiers — get_identifiers_dt","title":"Get descriptions for identifiers — get_identifiers_dt","text":"Get descriptions identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_identifiers_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get descriptions for identifiers — get_identifiers_dt","text":"","code":"get_identifiers_dt(k = NULL, get_description = FALSE, get_example = FALSE)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_identifiers_dt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get descriptions for identifiers — get_identifiers_dt","text":"k identifier key, string get_description return descriptions , boolean get_example return examples , boolean","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_identifiers_dt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get descriptions for identifiers — get_identifiers_dt","text":"named list","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_identifiers_dt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get descriptions for identifiers — get_identifiers_dt","text":"","code":"get_identifiers_dt() #> $duration #> $duration$description #> [1] \"Duration of treatment (in h)\" #>  #> $duration$example #> [1] \"120\" #>  #>  #> $clid #> $clid$description #> [1] \"Cell Line identifier\" #>  #> $clid$example #> [1] \"CL00011\" #>  #>  #> $cellline_name #> $cellline_name$description #> [1] \"Cell Line common name\" #>  #> $cellline_name$example #> [1] \"MCF-10A\" #>  #>  #> $cellline_tissue #> $cellline_tissue$description #> [1] \"Tissue name\" #>  #> $cellline_tissue$example #> [1] \"Lung\" #>  #>  #> $cellline_ref_div_time #> $cellline_ref_div_time$description #> [1] \"Cell Line reference division time (in h)\" #>  #> $cellline_ref_div_time$example #> [1] \"50\" #>  #>  #> $cellline_parental_identifier #> $cellline_parental_identifier$description #> [1] \"Cell Line parental identifier\" #>  #> $cellline_parental_identifier$example #> [1] \"MCF-10A\" #>  #>  #> $cellline_subtype #> $cellline_subtype$description #> [1] \"Cell Line subtype\" #>  #> $cellline_subtype$example #> [1] \"TNBC\" #>  #>  #> $drug #> $drug$description #> [1] \"Drug identifier\" #>  #> $drug$example #> [1] \"G012345\" #>  #>  #> $drug_name #> $drug_name$description #> [1] \"Drug common name\" #>  #> $drug_name$example #> [1] \"Paclitaxel\" #>  #>  #> $drug_moa #> $drug_moa$description #> [1] \"Drug mechanism of action\" #>  #> $drug_moa$example #> [1] \"Tubulin\" #>  #>  #> $untreated_tag #> $untreated_tag$description #> [1] \"Tags for untreated cellines\" #>  #> $untreated_tag$example #> [1] \"Untreated\" #>  #>  #> $masked_tag #> $masked_tag$description #> [1] \"Tag for masked celllines\" #>  #> $masked_tag$example #> [1] TRUE #>  #>  #> $well_position #> $well_position$description #> [1] \"Position in the wells\" #>  #> $well_position$example #> [1] \"[A, 1]\" #>  #>  #> $concentration #> $concentration$description #> [1] \"Concentration of the drug used (uM)\" #>  #> $concentration$exammple #> [1] \"3.333\" #>  #>  #> $template #> $template$description #> [1] \"Treatment layout template\" #>  #> $template$example #> [1] \"Template_untreated.xlsx\" #>  #>  #> $barcode #> $barcode$description #> [1] \"Plate identifier\" #>  #> $barcode$example #> [1] \"1234C65465876_001\" #>  #>  #> $drug_2 #> $drug_2$description #> [1] \"Drug 2 identifier\" #>  #> $drug_2$example #> [1] \"G123456\" #>  #>  #> $drug_name2 #> $drug_name2$description #> [1] \"Drug 2 common name\" #>  #> $drug_name2$example #> [1] \"Erlotinib\" #>  #>  #> $drug_moa2 #> $drug_moa2$description #> [1] \"Drug 2 mechanism of action\" #>  #> $drug_moa2$example #> [1] \"EGFR\" #>  #>  #> $concentration2 #> $concentration2$description #> [1] \"Concentration of Drug 2 used (uM)\" #>  #> $concentration2$example #> [1] \"1.111\" #>  #>  #> $drug_3 #> $drug_3$description #> [1] \"Drug 3 identifier\" #>  #> $drug_3$example #> [1] \"G345678\" #>  #>  #> $drug_name3 #> $drug_name3$description #> [1] \"Drug 3 common name\" #>  #> $drug_name3$example #> [1] \"Lapatinib\" #>  #>  #> $drug_moa3 #> $drug_moa3$description #> [1] \"Drug 3 mechanism of action\" #>  #> $drug_moa3$example #> [1] \"HER2\" #>  #>  #> $concentration3 #> $concentration3$description #> [1] \"Concentration of Drug 3 used\" #>  #> $concentration3$example #> [1] \"10.0\" #>  #>  #> $data_source #> $data_source$description #> [1] \"Source of the data\" #>  #> $data_source$example #> [1] \"gDR\" #>  #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_idfs_synonyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gDR synonyms for the identifiers — get_idfs_synonyms","title":"Get gDR synonyms for the identifiers — get_idfs_synonyms","text":"Get gDR synonyms identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_idfs_synonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gDR synonyms for the identifiers — get_idfs_synonyms","text":"","code":"get_idfs_synonyms()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_idfs_synonyms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gDR synonyms for the identifiers — get_idfs_synonyms","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_idfs_synonyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get gDR synonyms for the identifiers — get_idfs_synonyms","text":"","code":"get_idfs_synonyms() #> $duration #> [1] \"time\" #>  #> $cellline #> [1] \"bioc\" #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_iso_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"get_iso_colors — get_iso_colors","title":"get_iso_colors — get_iso_colors","text":"get_iso_colors","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_iso_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_iso_colors — get_iso_colors","text":"","code":"get_iso_colors(normalization_type = c(\"RV\", \"GR\"))"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_iso_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_iso_colors — get_iso_colors","text":"normalization_type charvec normalization_types expected data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_iso_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_iso_colors — get_iso_colors","text":"named charvec iso colors","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_iso_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_iso_colors — get_iso_colors","text":"","code":"get_iso_colors() #>         0      0.05       0.1      0.15       0.2      0.25       0.3      0.35  #> \"#46aaff\" \"#46a3f5\" \"#469ceb\" \"#4694e2\" \"#468dd8\" \"#4686ce\" \"#467fc4\" \"#4677ba\"  #>       0.4      0.45       0.5      0.55       0.6      0.65       0.7      0.75  #> \"#4670b0\" \"#4669a6\" \"#46629d\" \"#465b93\" \"#465389\" \"#464c7f\" \"#464575\" \"#463e6b\"  #>       0.8      0.85       0.9      0.95         1  #> \"#463661\" \"#462f58\" \"#46284e\" \"#462144\" \"#461a3a\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_non_empty_assays.html","id":null,"dir":"Reference","previous_headings":"","what":"get_non_empty_assays — get_non_empty_assays","title":"get_non_empty_assays — get_non_empty_assays","text":"get non empty assays","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_non_empty_assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_non_empty_assays — get_non_empty_assays","text":"","code":"get_non_empty_assays(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_non_empty_assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_non_empty_assays — get_non_empty_assays","text":"mae MultiAssayExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_non_empty_assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_non_empty_assays — get_non_empty_assays","text":"charvec non-empty experiments","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_non_empty_assays.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_non_empty_assays — get_non_empty_assays","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_non_empty_assays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_non_empty_assays — get_non_empty_assays","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") get_non_empty_assays(mae) #> [1] \"single-agent\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_coldata_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"get optional colData fields — get_optional_coldata_fields","title":"get optional colData fields — get_optional_coldata_fields","text":"get optional colData fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_coldata_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get optional colData fields — get_optional_coldata_fields","text":"","code":"get_optional_coldata_fields(se)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_coldata_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get optional colData fields — get_optional_coldata_fields","text":"se SummarizedExperiment object drug-response data generate gDR pipeline","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_coldata_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get optional colData fields — get_optional_coldata_fields","text":"charvec containing names optional identifiers SE colData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_rowdata_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"get optional rowData fields — get_optional_rowdata_fields","title":"get optional rowData fields — get_optional_rowdata_fields","text":"get optional rowData fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_rowdata_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get optional rowData fields — get_optional_rowdata_fields","text":"","code":"get_optional_rowdata_fields(se)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_rowdata_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get optional rowData fields — get_optional_rowdata_fields","text":"se SummarizedExperiment object drug-response data generate gDR pipeline","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_optional_rowdata_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get optional rowData fields — get_optional_rowdata_fields","text":"charvec containing names optional identifiers SE rowData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_required_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get identifiers required for downstream analysis. — get_required_identifiers","title":"Get identifiers required for downstream analysis. — get_required_identifiers","text":"Get identifiers required downstream analysis.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_required_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get identifiers required for downstream analysis. — get_required_identifiers","text":"","code":"get_required_identifiers()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_required_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get identifiers required for downstream analysis. — get_required_identifiers","text":"charvec","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_required_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get identifiers required for downstream analysis. — get_required_identifiers","text":"","code":"get_required_identifiers() #> [1] \"duration\"      \"cellline\"      \"cellline_name\" \"drug\"          #> [5] \"drug_name\"     \"masked_tag\"    \"concentration\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_synthetic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get synthetic data from gDRtestData package — get_synthetic_data","title":"Get synthetic data from gDRtestData package — get_synthetic_data","text":"Get synthetic data gDRtestData package","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_synthetic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get synthetic data from gDRtestData package — get_synthetic_data","text":"","code":"get_synthetic_data(qs)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_synthetic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get synthetic data from gDRtestData package — get_synthetic_data","text":"qs qs filename","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_synthetic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get synthetic data from gDRtestData package — get_synthetic_data","text":"loaded data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_synthetic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get synthetic data from gDRtestData package — get_synthetic_data","text":"","code":"get_synthetic_data(\"finalMAE_small.qs\")  #> A MultiAssayExperiment object of 1 listed #>  experiment with a user-defined name and respective class. #>  Containing an ExperimentList class object of length 1: #>  [1] single-agent: SummarizedExperiment with 10 rows and 10 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_testdata.html","id":null,"dir":"Reference","previous_headings":"","what":"get_testdata — get_testdata","title":"get_testdata — get_testdata","text":"Function obtain data gDRtestData prepare unit tests","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_testdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_testdata — get_testdata","text":"","code":"get_testdata()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_testdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_testdata — get_testdata","text":"list drugs, cell_lines, raw_data assay_data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/get_testdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_testdata — get_testdata","text":"","code":"get_testdata() #> $drug_names #>  [1] \"drug_002\" \"drug_003\" \"drug_004\" \"drug_005\" \"drug_006\" \"drug_007\" #>  [7] \"drug_008\" \"drug_009\" \"drug_010\" \"drug_011\" #>  #> $cell_line_names #>  [1] \"cellline_BA\" \"cellline_CA\" \"cellline_DA\" \"cellline_EA\" \"cellline_FA\" #>  [6] \"cellline_GB\" \"cellline_HB\" \"cellline_IB\" \"cellline_JB\" \"cellline_KB\" #>  #> $dt #>      Drug Name Cell Line Name                      rId #>         <char>         <char>                   <char> #>   1:  drug_002    cellline_BA G00002_drug_002_moa_A_72 #>   2:  drug_003    cellline_BA G00003_drug_003_moa_A_72 #>   3:  drug_004    cellline_BA G00004_drug_004_moa_A_72 #>   4:  drug_005    cellline_BA G00005_drug_005_moa_A_72 #>   5:  drug_006    cellline_BA G00006_drug_006_moa_A_72 #>   6:  drug_007    cellline_BA G00007_drug_007_moa_A_72 #>   7:  drug_008    cellline_BA G00008_drug_008_moa_A_72 #>   8:  drug_009    cellline_BA G00009_drug_009_moa_A_72 #>   9:  drug_010    cellline_BA G00010_drug_010_moa_A_72 #>  10:  drug_011    cellline_BA G00011_drug_011_moa_B_72 #>  11:  drug_002    cellline_CA G00002_drug_002_moa_A_72 #>  12:  drug_003    cellline_CA G00003_drug_003_moa_A_72 #>  13:  drug_004    cellline_CA G00004_drug_004_moa_A_72 #>  14:  drug_005    cellline_CA G00005_drug_005_moa_A_72 #>  15:  drug_006    cellline_CA G00006_drug_006_moa_A_72 #>  16:  drug_007    cellline_CA G00007_drug_007_moa_A_72 #>  17:  drug_008    cellline_CA G00008_drug_008_moa_A_72 #>  18:  drug_009    cellline_CA G00009_drug_009_moa_A_72 #>  19:  drug_010    cellline_CA G00010_drug_010_moa_A_72 #>  20:  drug_011    cellline_CA G00011_drug_011_moa_B_72 #>  21:  drug_002    cellline_DA G00002_drug_002_moa_A_72 #>  22:  drug_003    cellline_DA G00003_drug_003_moa_A_72 #>  23:  drug_004    cellline_DA G00004_drug_004_moa_A_72 #>  24:  drug_005    cellline_DA G00005_drug_005_moa_A_72 #>  25:  drug_006    cellline_DA G00006_drug_006_moa_A_72 #>  26:  drug_007    cellline_DA G00007_drug_007_moa_A_72 #>  27:  drug_008    cellline_DA G00008_drug_008_moa_A_72 #>  28:  drug_009    cellline_DA G00009_drug_009_moa_A_72 #>  29:  drug_010    cellline_DA G00010_drug_010_moa_A_72 #>  30:  drug_011    cellline_DA G00011_drug_011_moa_B_72 #>  31:  drug_002    cellline_EA G00002_drug_002_moa_A_72 #>  32:  drug_003    cellline_EA G00003_drug_003_moa_A_72 #>  33:  drug_004    cellline_EA G00004_drug_004_moa_A_72 #>  34:  drug_005    cellline_EA G00005_drug_005_moa_A_72 #>  35:  drug_006    cellline_EA G00006_drug_006_moa_A_72 #>  36:  drug_007    cellline_EA G00007_drug_007_moa_A_72 #>  37:  drug_008    cellline_EA G00008_drug_008_moa_A_72 #>  38:  drug_009    cellline_EA G00009_drug_009_moa_A_72 #>  39:  drug_010    cellline_EA G00010_drug_010_moa_A_72 #>  40:  drug_011    cellline_EA G00011_drug_011_moa_B_72 #>  41:  drug_002    cellline_FA G00002_drug_002_moa_A_72 #>  42:  drug_003    cellline_FA G00003_drug_003_moa_A_72 #>  43:  drug_004    cellline_FA G00004_drug_004_moa_A_72 #>  44:  drug_005    cellline_FA G00005_drug_005_moa_A_72 #>  45:  drug_006    cellline_FA G00006_drug_006_moa_A_72 #>  46:  drug_007    cellline_FA G00007_drug_007_moa_A_72 #>  47:  drug_008    cellline_FA G00008_drug_008_moa_A_72 #>  48:  drug_009    cellline_FA G00009_drug_009_moa_A_72 #>  49:  drug_010    cellline_FA G00010_drug_010_moa_A_72 #>  50:  drug_011    cellline_FA G00011_drug_011_moa_B_72 #>  51:  drug_002    cellline_GB G00002_drug_002_moa_A_72 #>  52:  drug_003    cellline_GB G00003_drug_003_moa_A_72 #>  53:  drug_004    cellline_GB G00004_drug_004_moa_A_72 #>  54:  drug_005    cellline_GB G00005_drug_005_moa_A_72 #>  55:  drug_006    cellline_GB G00006_drug_006_moa_A_72 #>  56:  drug_007    cellline_GB G00007_drug_007_moa_A_72 #>  57:  drug_008    cellline_GB G00008_drug_008_moa_A_72 #>  58:  drug_009    cellline_GB G00009_drug_009_moa_A_72 #>  59:  drug_010    cellline_GB G00010_drug_010_moa_A_72 #>  60:  drug_011    cellline_GB G00011_drug_011_moa_B_72 #>  61:  drug_002    cellline_HB G00002_drug_002_moa_A_72 #>  62:  drug_003    cellline_HB G00003_drug_003_moa_A_72 #>  63:  drug_004    cellline_HB G00004_drug_004_moa_A_72 #>  64:  drug_005    cellline_HB G00005_drug_005_moa_A_72 #>  65:  drug_006    cellline_HB G00006_drug_006_moa_A_72 #>  66:  drug_007    cellline_HB G00007_drug_007_moa_A_72 #>  67:  drug_008    cellline_HB G00008_drug_008_moa_A_72 #>  68:  drug_009    cellline_HB G00009_drug_009_moa_A_72 #>  69:  drug_010    cellline_HB G00010_drug_010_moa_A_72 #>  70:  drug_011    cellline_HB G00011_drug_011_moa_B_72 #>  71:  drug_002    cellline_IB G00002_drug_002_moa_A_72 #>  72:  drug_003    cellline_IB G00003_drug_003_moa_A_72 #>  73:  drug_004    cellline_IB G00004_drug_004_moa_A_72 #>  74:  drug_005    cellline_IB G00005_drug_005_moa_A_72 #>  75:  drug_006    cellline_IB G00006_drug_006_moa_A_72 #>  76:  drug_007    cellline_IB G00007_drug_007_moa_A_72 #>  77:  drug_008    cellline_IB G00008_drug_008_moa_A_72 #>  78:  drug_009    cellline_IB G00009_drug_009_moa_A_72 #>  79:  drug_010    cellline_IB G00010_drug_010_moa_A_72 #>  80:  drug_011    cellline_IB G00011_drug_011_moa_B_72 #>  81:  drug_002    cellline_JB G00002_drug_002_moa_A_72 #>  82:  drug_003    cellline_JB G00003_drug_003_moa_A_72 #>  83:  drug_004    cellline_JB G00004_drug_004_moa_A_72 #>  84:  drug_005    cellline_JB G00005_drug_005_moa_A_72 #>  85:  drug_006    cellline_JB G00006_drug_006_moa_A_72 #>  86:  drug_007    cellline_JB G00007_drug_007_moa_A_72 #>  87:  drug_008    cellline_JB G00008_drug_008_moa_A_72 #>  88:  drug_009    cellline_JB G00009_drug_009_moa_A_72 #>  89:  drug_010    cellline_JB G00010_drug_010_moa_A_72 #>  90:  drug_011    cellline_JB G00011_drug_011_moa_B_72 #>  91:  drug_002    cellline_KB G00002_drug_002_moa_A_72 #>  92:  drug_003    cellline_KB G00003_drug_003_moa_A_72 #>  93:  drug_004    cellline_KB G00004_drug_004_moa_A_72 #>  94:  drug_005    cellline_KB G00005_drug_005_moa_A_72 #>  95:  drug_006    cellline_KB G00006_drug_006_moa_A_72 #>  96:  drug_007    cellline_KB G00007_drug_007_moa_A_72 #>  97:  drug_008    cellline_KB G00008_drug_008_moa_A_72 #>  98:  drug_009    cellline_KB G00009_drug_009_moa_A_72 #>  99:  drug_010    cellline_KB G00010_drug_010_moa_A_72 #> 100:  drug_011    cellline_KB G00011_drug_011_moa_B_72 #>      Drug Name Cell Line Name                      rId #>                                  cId      EC50      x_AOC       h RV #>                               <char>     <num>      <num>      <num> #>   1: CL00011_cellline_BA_tissue_x_26 0.4466890 0.55331098 0.62771204 #>   2: CL00011_cellline_BA_tissue_x_26 0.3939872 0.60601279 0.69549935 #>   3: CL00011_cellline_BA_tissue_x_26 0.7989283 0.20107172 0.23854321 #>   4: CL00011_cellline_BA_tissue_x_26 0.7292519 0.27074809 0.30829556 #>   5: CL00011_cellline_BA_tissue_x_26 0.5948205 0.40517951 0.47306641 #>   6: CL00011_cellline_BA_tissue_x_26 0.9153135 0.08468651 0.09862965 #>   7: CL00011_cellline_BA_tissue_x_26 0.6627378 0.33726218 0.37222482 #>   8: CL00011_cellline_BA_tissue_x_26 0.6541186 0.34588137 0.40814181 #>   9: CL00011_cellline_BA_tissue_x_26 0.8247285 0.17527151 0.20515620 #>  10: CL00011_cellline_BA_tissue_x_26 0.3682302 0.63176984 0.74702096 #>  11: CL00012_cellline_CA_tissue_x_30 0.6926178 0.30738217 0.35949454 #>  12: CL00012_cellline_CA_tissue_x_30 0.3979780 0.60202205 0.68371983 #>  13: CL00012_cellline_CA_tissue_x_30 0.9100255 0.08997452 0.10791397 #>  14: CL00012_cellline_CA_tissue_x_30 0.7873036 0.21269635 0.24486766 #>  15: CL00012_cellline_CA_tissue_x_30 0.8494189 0.15058108 0.17760851 #>  16: CL00012_cellline_CA_tissue_x_30 0.8169558 0.18304417 0.20901520 #>  17: CL00012_cellline_CA_tissue_x_30 0.7755540 0.22444601 0.26336442 #>  18: CL00012_cellline_CA_tissue_x_30 0.5212853 0.47871472 0.56881144 #>  19: CL00012_cellline_CA_tissue_x_30 0.7463491 0.25365094 0.30161904 #>  20: CL00012_cellline_CA_tissue_x_30 0.7616189 0.23838111 0.28326524 #>  21: CL00013_cellline_DA_tissue_x_34 0.7992747 0.20072525 0.23709408 #>  22: CL00013_cellline_DA_tissue_x_34 0.4668574 0.53314262 0.61173591 #>  23: CL00013_cellline_DA_tissue_x_34 0.7261649 0.27383514 0.32331797 #>  24: CL00013_cellline_DA_tissue_x_34 0.7151504 0.28484957 0.33700199 #>  25: CL00013_cellline_DA_tissue_x_34 0.6956589 0.30434108 0.36205275 #>  26: CL00013_cellline_DA_tissue_x_34 0.6779461 0.32205391 0.38244556 #>  27: CL00013_cellline_DA_tissue_x_34 0.9838111 0.01618889 0.01618889 #>  28: CL00013_cellline_DA_tissue_x_34 0.5806643 0.41933574 0.49233133 #>  29: CL00013_cellline_DA_tissue_x_34 0.8776200 0.12238003 0.14379727 #>  30: CL00013_cellline_DA_tissue_x_34 0.6609849 0.33901514 0.39942016 #>  31: CL00014_cellline_EA_tissue_x_38 0.8710149 0.12898507 0.15337431 #>  32: CL00014_cellline_EA_tissue_x_38 0.9173053 0.08269470 0.09639032 #>  33: CL00014_cellline_EA_tissue_x_38 0.8778150 0.12218503 0.14245939 #>  34: CL00014_cellline_EA_tissue_x_38 0.9437698 0.05623016 0.06647635 #>  35: CL00014_cellline_EA_tissue_x_38 0.7144618 0.28553821 0.33774750 #>  36: CL00014_cellline_EA_tissue_x_38 0.8874428 0.11255721 0.13302031 #>  37: CL00014_cellline_EA_tissue_x_38 0.9883815 0.01161852 0.01161852 #>  38: CL00014_cellline_EA_tissue_x_38 0.7852841 0.21471593 0.25298214 #>  39: CL00014_cellline_EA_tissue_x_38 0.8700763 0.12992370 0.15434173 #>  40: CL00014_cellline_EA_tissue_x_38 0.5865688 0.41343121 0.47176921 #>  41: CL00015_cellline_FA_tissue_x_42 0.4828015 0.51719847 0.60667873 #>  42: CL00015_cellline_FA_tissue_x_42 0.6425053 0.35749468 0.41943708 #>  43: CL00015_cellline_FA_tissue_x_42 0.3805017 0.61949830 0.71885082 #>  44: CL00015_cellline_FA_tissue_x_42 0.2977827 0.70221726 0.76597220 #>  45: CL00015_cellline_FA_tissue_x_42 0.8375294 0.16247062 0.19070324 #>  46: CL00015_cellline_FA_tissue_x_42 0.5962853 0.40371474 0.47449665 #>  47: CL00015_cellline_FA_tissue_x_42 0.4657079 0.53429209 0.61134861 #>  48: CL00015_cellline_FA_tissue_x_42 0.7549529 0.24504707 0.28487547 #>  49: CL00015_cellline_FA_tissue_x_42 0.8372120 0.16278796 0.18968302 #>  50: CL00015_cellline_FA_tissue_x_42 0.2524798 0.74752018 0.88177300 #>  51: CL00016_cellline_GB_tissue_y_46 0.1021560 0.89784398 0.97368081 #>  52: CL00016_cellline_GB_tissue_y_46 0.3319590 0.66804098 0.79488065 #>  53: CL00016_cellline_GB_tissue_y_46 0.2102313 0.78976874 0.90450614 #>  54: CL00016_cellline_GB_tissue_y_46 0.2100452 0.78995479 0.88824111 #>  55: CL00016_cellline_GB_tissue_y_46 0.3146779 0.68532206 0.81208812 #>  56: CL00016_cellline_GB_tissue_y_46 0.2311182 0.76888180 0.84899908 #>  57: CL00016_cellline_GB_tissue_y_46 0.2364875 0.76351250 0.88498708 #>  58: CL00016_cellline_GB_tissue_y_46 0.3235937 0.67640628 0.79810483 #>  59: CL00016_cellline_GB_tissue_y_46 0.4821997 0.51780026 0.60821155 #>  60: CL00016_cellline_GB_tissue_y_46 0.6425491 0.35745090 0.42057145 #>  61: CL00017_cellline_HB_tissue_y_50 0.4403251 0.55967489 0.66129430 #>  62: CL00017_cellline_HB_tissue_y_50 0.3158261 0.68417394 0.79476913 #>  63: CL00017_cellline_HB_tissue_y_50 0.3117162 0.68828381 0.81859408 #>  64: CL00017_cellline_HB_tissue_y_50 0.4144975 0.58550254 0.68838500 #>  65: CL00017_cellline_HB_tissue_y_50 0.5330401 0.46695992 0.55422115 #>  66: CL00017_cellline_HB_tissue_y_50 0.2753604 0.72463961 0.84954049 #>  67: CL00017_cellline_HB_tissue_y_50 0.2988946 0.70110537 0.81877562 #>  68: CL00017_cellline_HB_tissue_y_50 0.4775211 0.52247889 0.60461228 #>  69: CL00017_cellline_HB_tissue_y_50 0.4307934 0.56920661 0.65813446 #>  70: CL00017_cellline_HB_tissue_y_50 0.5740133 0.42598675 0.50486302 #>  71: CL00018_cellline_IB_tissue_y_54 0.1817987 0.81820132 0.91385902 #>  72: CL00018_cellline_IB_tissue_y_54 0.4557736 0.54422637 0.64062123 #>  73: CL00018_cellline_IB_tissue_y_54 0.3473656 0.65263436 0.75662897 #>  74: CL00018_cellline_IB_tissue_y_54 0.3722520 0.62774797 0.74215883 #>  75: CL00018_cellline_IB_tissue_y_54 0.3820939 0.61790607 0.72975315 #>  76: CL00018_cellline_IB_tissue_y_54 0.4088002 0.59119981 0.67444555 #>  77: CL00018_cellline_IB_tissue_y_54 0.3086007 0.69139927 0.81546273 #>  78: CL00018_cellline_IB_tissue_y_54 0.4906996 0.50930040 0.59207687 #>  79: CL00018_cellline_IB_tissue_y_54 0.4496388 0.55036124 0.63963532 #>  80: CL00018_cellline_IB_tissue_y_54 0.5613320 0.43866803 0.51481053 #>  81: CL00019_cellline_JB_tissue_z_58 0.7645125 0.23548748 0.27674936 #>  82: CL00019_cellline_JB_tissue_z_58 0.7799746 0.22002537 0.25385986 #>  83: CL00019_cellline_JB_tissue_z_58 0.7029485 0.29705152 0.32948401 #>  84: CL00019_cellline_JB_tissue_z_58 0.7566058 0.24339421 0.26629466 #>  85: CL00019_cellline_JB_tissue_z_58 0.8388170 0.16118297 0.18043264 #>  86: CL00019_cellline_JB_tissue_z_58 0.7862239 0.21377605 0.24324624 #>  87: CL00019_cellline_JB_tissue_z_58 0.8640795 0.13592048 0.15119347 #>  88: CL00019_cellline_JB_tissue_z_58 0.7614460 0.23855403 0.26963522 #>  89: CL00019_cellline_JB_tissue_z_58 0.8471580 0.15284198 0.16513000 #>  90: CL00019_cellline_JB_tissue_z_58 0.6842658 0.31573420 0.35272441 #>  91: CL00020_cellline_KB_tissue_z_62 0.6737095 0.32629051 0.38341599 #>  92: CL00020_cellline_KB_tissue_z_62 0.5683750 0.43162499 0.49907540 #>  93: CL00020_cellline_KB_tissue_z_62 0.3916886 0.60831136 0.71651338 #>  94: CL00020_cellline_KB_tissue_z_62 0.4519141 0.54808592 0.64651950 #>  95: CL00020_cellline_KB_tissue_z_62 0.5938560 0.40614404 0.46394440 #>  96: CL00020_cellline_KB_tissue_z_62 0.5525910 0.44740898 0.52483930 #>  97: CL00020_cellline_KB_tissue_z_62 0.3356482 0.66435184 0.78615325 #>  98: CL00020_cellline_KB_tissue_z_62 0.5045079 0.49549211 0.57777110 #>  99: CL00020_cellline_KB_tissue_z_62 0.5769999 0.42300010 0.47231044 #> 100: CL00020_cellline_KB_tissue_z_62 0.4117805 0.58821946 0.69005808 #>                                  cId      EC50      x_AOC       h RV #>            GEC50     GR Max        ec50     GR Inf      GR 0     h GR     E Inf #>            <num>      <num>       <num>      <num>     <num>    <num>     <num> #>   1: 0.007253171 0.32793333 0.003795893 0.34682665 1.0000000 1.827031 0.9924695 #>   2: 0.005655581 0.27413333 0.003962986 0.28319787 1.0000000 2.349599 0.9958511 #>   3:         Inf 0.70636667 0.016546380 0.71001484 1.0000000 3.159939 0.9918874 #>   4:         Inf 0.67963333 0.003304929 0.68717703 1.0000000 2.869796 0.9788260 #>   5:         Inf 0.50873333 0.004129702 0.51907021 1.0000000 3.829228 0.9978624 #>   6:         Inf 0.86246667 0.023423073 0.87074092 1.0000000 1.396984 0.9622053 #>   7:         Inf 0.59466667 0.002397623 0.62344087 1.0000000 2.285910 0.9796018 #>   8:         Inf 0.56796667 0.008060179 0.55098117 1.0000000 2.239456 0.9917851 #>   9:         Inf 0.72036667 0.031276165 0.71953596 1.0000000 2.336379 0.9894868 #>  10: 0.019384886 0.07090000 0.018136158 0.07568110 1.0000000 2.464822 0.9985658 #>  11:         Inf 0.63853333 0.004774753 0.62816339 1.0000000 2.919115 0.9767620 #>  12: 0.003821711 0.27726667 0.003008201 0.31309370 1.0000000 4.111036 0.9952426 #>  13:         Inf 0.87040000 0.008253998 0.88286884 1.0000000 5.000000 0.8541039 #>  14:         Inf 0.77096667 0.003354507 0.75408085 1.0000000 5.000000 0.9832682 #>  15:         Inf 0.80546667 0.007866347 0.80517426 1.0000000 2.241526 0.9725466 #>  16:         Inf 0.76806667 0.003815690 0.78433527 1.0000000 2.178831 0.9569420 #>  17:         Inf 0.64960000 0.025909149 0.65208728 1.0000000 2.036162 0.9968137 #>  18: 0.015334114 0.35873333 0.009338353 0.36576263 1.0000000 2.651473 0.9984890 #>  19:         Inf 0.65570000 0.010664967 0.65748115 1.0000000 2.703715 0.9917990 #>  20:         Inf 0.68473333 0.008285395 0.68946503 1.0000000 2.768447 0.9901512 #>  21:         Inf 0.69726667 0.018014759 0.70662235 1.0000000 2.255304 0.9949255 #>  22: 0.005175017 0.36916667 0.003431788 0.38161495 1.0000000 3.507307 0.9962628 #>  23:         Inf 0.60056667 0.017991972 0.59983667 1.0000000 2.193421 0.9909905 #>  24:         Inf 0.59763333 0.014539308 0.59720052 1.0000000 2.214172 0.9973294 #>  25:         Inf 0.59926667 0.007397397 0.60975201 1.0000000 3.069376 0.9934571 #>  26:         Inf 0.55096667 0.011148175 0.56228258 1.0000000 2.535963 0.9960204 #>  27:         Inf 0.97033333 0.000000000 0.98381111 0.9838111 0.000100 0.0000000 #>  28: 0.044349772 0.35713333 0.019771994 0.37777983 1.0000000 1.743888 0.9951205 #>  29:         Inf 0.82200000 0.023835769 0.81289660 1.0000000 2.039182 0.9729143 #>  30:         Inf 0.55890000 0.007078033 0.56771316 1.0000000 2.322658 0.9935786 #>  31:         Inf 0.82480000 0.007404640 0.83458186 1.0000000 3.013686 0.9253169 #>  32:         Inf 0.84193333 0.038642612 0.86268158 1.0000000 5.000000 0.9442965 #>  33:         Inf 0.78713333 0.038237333 0.79748718 1.0000000 5.000000 0.9908466 #>  34:         Inf 0.91773333 0.020858876 0.91588511 1.0000000 5.000000 0.8671881 #>  35:         Inf 0.64843333 0.005482997 0.64836791 1.0000000 3.372144 0.9971479 #>  36:         Inf 0.80563333 0.020762148 0.83175068 1.0000000 3.262119 0.9613882 #>  37:         Inf 0.97366667 0.000000000 0.98838148 0.9883815 0.000100 0.0000000 #>  38:         Inf 0.66726667 0.024503188 0.67026768 1.0000000 5.000000 0.9917875 #>  39:         Inf 0.83416667 0.008516796 0.83009341 1.0000000 2.706836 0.9367858 #>  40: 0.103693590 0.22530000 0.077874576 0.21531639 1.0000000 1.966991 0.9976196 #>  41: 0.010722078 0.33776667 0.006294304 0.35077573 1.0000000 2.270037 0.9991870 #>  42:         Inf 0.55923333 0.005301487 0.56156486 1.0000000 2.740291 0.9951004 #>  43: 0.006229871 0.23093333 0.004661971 0.25237654 1.0000000 2.423790 0.9933838 #>  44: 0.002756447 0.20110000 0.002085738 0.22629021 1.0000000 2.161036 0.9941359 #>  45:         Inf 0.77860000 0.007310403 0.79181981 1.0000000 2.065713 0.9820954 #>  46: 0.041965155 0.41790000 0.012099942 0.44418366 1.0000000 1.763005 0.9967096 #>  47: 0.005912214 0.36410000 0.003552790 0.37709397 1.0000000 2.755200 0.9964623 #>  48:         Inf 0.70263333 0.004561251 0.70521133 1.0000000 2.642410 0.9930514 #>  49:         Inf 0.76936667 0.012481407 0.77448135 1.0000000 1.432588 0.9629959 #>  50: 0.007884476 0.02790000 0.007623490 0.03706278 1.0000000 2.287981 0.9995991 #>  51: 0.001975139 0.01156667 0.001941693 0.02047816 1.0000000 2.448673 0.9992976 #>  52: 0.013697468 0.06936667 0.013030558 0.07094849 1.0000000 3.065907 0.9982225 #>  53: 0.003811979 0.06773333 0.003585337 0.07825779 1.0000000 2.776919 0.9969366 #>  54: 0.003197359 0.08630000 0.002932087 0.09935284 1.0000000 2.557727 0.9990998 #>  55: 0.014902515 0.01756667 0.014508564 0.03128655 1.0000000 2.411884 0.9989330 #>  56: 0.002887489 0.13533333 0.002461805 0.13678567 1.0000000 2.003949 0.9940489 #>  57: 0.005396956 0.06396667 0.005034691 0.06871316 1.0000000 2.127642 0.9977338 #>  58: 0.015444308 0.04450000 0.014793650 0.04081369 1.0000000 1.978326 0.9993449 #>  59: 0.032638339 0.17626667 0.027413659 0.18981432 1.0000000 2.736872 0.9994655 #>  60:         Inf 0.57070000 0.005350482 0.56115445 1.0000000 2.940905 0.9878645 #>  61: 0.023097263 0.17430000 0.019657332 0.17067228 1.0000000 2.589266 0.9980176 #>  62: 0.004922621 0.16046667 0.004218802 0.18540041 1.0000000 3.002839 0.9978019 #>  63: 0.010326282 0.07083333 0.009658844 0.08373933 1.0000000 2.743208 0.9966324 #>  64: 0.027637201 0.11686667 0.025274379 0.09621464 1.0000000 2.391418 0.9979799 #>  65: 0.019427772 0.34556667 0.011549019 0.36203554 1.0000000 2.475686 0.9965915 #>  66: 0.009224850 0.05420000 0.008730319 0.04790721 1.0000000 1.827993 0.9990550 #>  67: 0.007990484 0.08710000 0.007043304 0.10560283 1.0000000 1.880336 0.9988034 #>  68: 0.054323446 0.07786667 0.049549089 0.09209706 1.0000000 2.213005 0.9983842 #>  69: 0.008297512 0.29680000 0.005151240 0.30315714 1.0000000 1.955457 0.9958787 #>  70: 0.028380166 0.37660000 0.016287291 0.38712847 1.0000000 2.680251 0.9975327 #>  71: 0.003121891 0.06380000 0.002908151 0.06403699 1.0000000 1.932432 0.9991981 #>  72: 0.015278403 0.26503333 0.010185823 0.26943208 1.0000000 1.909176 0.9995183 #>  73: 0.007000949 0.19893333 0.005440592 0.19547452 1.0000000 1.966440 0.9994474 #>  74: 0.010133991 0.19443333 0.008351180 0.18112340 1.0000000 2.324659 0.9966253 #>  75: 0.022055538 0.08350000 0.020776435 0.07624990 1.0000000 2.769539 0.9992905 #>  76: 0.007029613 0.29376667 0.004287339 0.29150899 1.0000000 1.769006 0.9973898 #>  77: 0.013769074 0.02206667 0.013254560 0.03556904 1.0000000 1.937726 0.9990756 #>  78: 0.047179141 0.14253333 0.037914493 0.15699796 1.0000000 1.723879 0.9986513 #>  79: 0.045215408 0.05843333 0.043031281 0.06820615 1.0000000 2.962191 0.9993880 #>  80: 0.042486343 0.29903333 0.025152816 0.32334398 1.0000000 1.984697 0.9960406 #>  81:         Inf 0.65316667 0.019245011 0.65209837 1.0000000 1.796886 0.9981400 #>  82:         Inf 0.59670000 0.055689068 0.60914083 1.0000000 2.665200 0.9969579 #>  83: 0.295080096 0.30650000 0.158198620 0.34093110 1.0000000 1.837149 0.9963409 #>  84: 0.413743153 0.41173333 0.206332658 0.42342449 1.0000000 2.696824 0.9985293 #>  85:         Inf 0.65686667 0.129212028 0.65883941 1.0000000 2.006733 0.9949262 #>  86:         Inf 0.56523333 0.085602158 0.58627595 1.0000000 3.117706 0.9948828 #>  87:         Inf 0.68853333 0.149067206 0.70263542 1.0000000 3.578535 0.9913418 #>  88:         Inf 0.52300000 0.102208367 0.52064083 1.0000000 2.321359 0.9918926 #>  89:         Inf 0.61000000 0.256158972 0.61685311 1.0000000 2.023378 0.9948254 #>  90: 0.236075692 0.30246667 0.135223132 0.32473738 1.0000000 1.881323 0.9969943 #>  91:         Inf 0.52713333 0.013128583 0.54530841 1.0000000 1.733740 0.9968381 #>  92: 0.070162438 0.22003333 0.050619652 0.24695917 1.0000000 2.086104 0.9970699 #>  93: 0.010695136 0.21133333 0.008294007 0.20699055 1.0000000 2.101833 0.9960998 #>  94: 0.025509994 0.18053333 0.021456873 0.17635164 1.0000000 2.513797 0.9988743 #>  95: 0.102279380 0.20620000 0.075806992 0.23335970 1.0000000 2.099067 0.9968471 #>  96: 0.039032319 0.28623333 0.029513143 0.29115866 1.0000000 3.122947 0.9976141 #>  97: 0.012891906 0.08013333 0.011778656 0.08958619 1.0000000 2.186258 0.9990599 #>  98: 0.045034344 0.20156667 0.035484367 0.18949638 1.0000000 1.998935 0.9961207 #>  99: 0.150209032 0.07513333 0.137152296 0.09235428 1.0000000 2.245643 0.9988156 #> 100: 0.027440547 0.08603333 0.024485958 0.09662172 1.0000000 1.884916 0.9986615 #>            GEC50     GR Max        ec50     GR Inf      GR 0     h GR     E Inf #>              E0               fit_type Concentration N_conc normalization_type #>           <num>                 <char>         <num>  <int>             <char> #>   1: 0.02424423 DRC3pHillFitModelFixS0             1      9                 RV #>   2: 0.02195104 DRC3pHillFitModelFixS0             1      9                 RV #>   3: 0.02315049 DRC3pHillFitModelFixS0             1      9                 RV #>   4: 0.02433754 DRC3pHillFitModelFixS0             1      9                 RV #>   5: 0.02914251 DRC3pHillFitModelFixS0             1      9                 RV #>   6: 0.03095134 DRC3pHillFitModelFixS0             1      9                 RV #>   7: 0.02851709 DRC3pHillFitModelFixS0             1      9                 RV #>   8: 0.02120201 DRC3pHillFitModelFixS0             1      9                 RV #>   9: 0.02368805 DRC3pHillFitModelFixS0             1      9                 RV #>  10: 0.02467602 DRC3pHillFitModelFixS0             1      9                 RV #>  11: 0.02026923 DRC3pHillFitModelFixS0             1      9                 RV #>  12: 0.02564250 DRC3pHillFitModelFixS0             1      9                 RV #>  13: 0.03624754 DRC3pHillFitModelFixS0             1      9                 RV #>  14: 0.02462014 DRC3pHillFitModelFixS0             1      9                 RV #>  15: 0.02581034 DRC3pHillFitModelFixS0             1      9                 RV #>  16: 0.02491576 DRC3pHillFitModelFixS0             1      9                 RV #>  17: 0.03482572 DRC3pHillFitModelFixS0             1      9                 RV #>  18: 0.02606777 DRC3pHillFitModelFixS0             1      9                 RV #>  19: 0.02352835 DRC3pHillFitModelFixS0             1      9                 RV #>  20: 0.02706624 DRC3pHillFitModelFixS0             1      9                 RV #>  21: 0.02403599 DRC3pHillFitModelFixS0             1      9                 RV #>  22: 0.02698012 DRC3pHillFitModelFixS0             1      9                 RV #>  23: 0.02577172 DRC3pHillFitModelFixS0             1      9                 RV #>  24: 0.02525688 DRC3pHillFitModelFixS0             1      9                 RV #>  25: 0.02269828 DRC3pHillFitModelFixS0             1      9                 RV #>  26: 0.02402262 DRC3pHillFitModelFixS0             1      9                 RV #>  27: 0.02620160   DRCConstantFitResult             1      9                 RV #>  28: 0.02903764 DRC3pHillFitModelFixS0             1      9                 RV #>  29: 0.02427360 DRC3pHillFitModelFixS0             1      9                 RV #>  30: 0.02469797 DRC3pHillFitModelFixS0             1      9                 RV #>  31: 0.02546309 DRC3pHillFitModelFixS0             1      9                 RV #>  32: 0.03159417 DRC3pHillFitModelFixS0             1      9                 RV #>  33: 0.02897195 DRC3pHillFitModelFixS0             1      9                 RV #>  34: 0.02385616 DRC3pHillFitModelFixS0             1      9                 RV #>  35: 0.02145847 DRC3pHillFitModelFixS0             1      9                 RV #>  36: 0.02696312 DRC3pHillFitModelFixS0             1      9                 RV #>  37: 0.02670075   DRCConstantFitResult             1      9                 RV #>  38: 0.02216258 DRC3pHillFitModelFixS0             1      9                 RV #>  39: 0.02237141 DRC3pHillFitModelFixS0             1      9                 RV #>  40: 0.03512306 DRC3pHillFitModelFixS0             1      9                 RV #>  41: 0.02583750 DRC3pHillFitModelFixS0             1      9                 RV #>  42: 0.02329129 DRC3pHillFitModelFixS0             1      9                 RV #>  43: 0.02481987 DRC3pHillFitModelFixS0             1      9                 RV #>  44: 0.02302050 DRC3pHillFitModelFixS0             1      9                 RV #>  45: 0.02911082 DRC3pHillFitModelFixS0             1      9                 RV #>  46: 0.02750852 DRC3pHillFitModelFixS0             1      9                 RV #>  47: 0.01788683 DRC3pHillFitModelFixS0             1      9                 RV #>  48: 0.03663836 DRC3pHillFitModelFixS0             1      9                 RV #>  49: 0.01589380 DRC3pHillFitModelFixS0             1      9                 RV #>  50: 0.02605429 DRC3pHillFitModelFixS0             1      9                 RV #>  51: 0.01347179 DRC3pHillFitModelFixS0             1      9                 RV #>  52: 0.02166174 DRC3pHillFitModelFixS0             1      9                 RV #>  53: 0.02379256 DRC3pHillFitModelFixS0             1      9                 RV #>  54: 0.02440520 DRC3pHillFitModelFixS0             1      9                 RV #>  55: 0.02854761 DRC3pHillFitModelFixS0             1      9                 RV #>  56: 0.02768624 DRC3pHillFitModelFixS0             1      9                 RV #>  57: 0.02021322 DRC3pHillFitModelFixS0             1      9                 RV #>  58: 0.02920943 DRC3pHillFitModelFixS0             1      9                 RV #>  59: 0.02246907 DRC3pHillFitModelFixS0             1      9                 RV #>  60: 0.02061972 DRC3pHillFitModelFixS0             1      9                 RV #>  61: 0.02328919 DRC3pHillFitModelFixS0             1      9                 RV #>  62: 0.02727108 DRC3pHillFitModelFixS0             1      9                 RV #>  63: 0.02529924 DRC3pHillFitModelFixS0             1      9                 RV #>  64: 0.02494556 DRC3pHillFitModelFixS0             1      9                 RV #>  65: 0.02789728 DRC3pHillFitModelFixS0             1      9                 RV #>  66: 0.03555896 DRC3pHillFitModelFixS0             1      9                 RV #>  67: 0.02594352 DRC3pHillFitModelFixS0             1      9                 RV #>  68: 0.02468871 DRC3pHillFitModelFixS0             1      9                 RV #>  69: 0.02364677 DRC3pHillFitModelFixS0             1      9                 RV #>  70: 0.02115656 DRC3pHillFitModelFixS0             1      9                 RV #>  71: 0.02845357 DRC3pHillFitModelFixS0             1      9                 RV #>  72: 0.02094491 DRC3pHillFitModelFixS0             1      9                 RV #>  73: 0.03261254 DRC3pHillFitModelFixS0             1      9                 RV #>  74: 0.01687243 DRC3pHillFitModelFixS0             1      9                 RV #>  75: 0.02890447 DRC3pHillFitModelFixS0             1      9                 RV #>  76: 0.02575115 DRC3pHillFitModelFixS0             1      9                 RV #>  77: 0.02401299 DRC3pHillFitModelFixS0             1      9                 RV #>  78: 0.03358047 DRC3pHillFitModelFixS0             1      9                 RV #>  79: 0.02405125 DRC3pHillFitModelFixS0             1      9                 RV #>  80: 0.03048010 DRC3pHillFitModelFixS0             1      9                 RV #>  81: 0.02875185 DRC3pHillFitModelFixS0             1      9                 RV #>  82: 0.02807435 DRC3pHillFitModelFixS0             1      9                 RV #>  83: 0.02321208 DRC3pHillFitModelFixS0             1      9                 RV #>  84: 0.03321846 DRC3pHillFitModelFixS0             1      9                 RV #>  85: 0.02970061 DRC3pHillFitModelFixS0             1      9                 RV #>  86: 0.02613007 DRC3pHillFitModelFixS0             1      9                 RV #>  87: 0.03144202 DRC3pHillFitModelFixS0             1      9                 RV #>  88: 0.02837621 DRC3pHillFitModelFixS0             1      9                 RV #>  89: 0.03160124 DRC3pHillFitModelFixS0             1      9                 RV #>  90: 0.01994518 DRC3pHillFitModelFixS0             1      9                 RV #>  91: 0.02358830 DRC3pHillFitModelFixS0             1      9                 RV #>  92: 0.02633392 DRC3pHillFitModelFixS0             1      9                 RV #>  93: 0.02144606 DRC3pHillFitModelFixS0             1      9                 RV #>  94: 0.03026998 DRC3pHillFitModelFixS0             1      9                 RV #>  95: 0.02618347 DRC3pHillFitModelFixS0             1      9                 RV #>  96: 0.01817215 DRC3pHillFitModelFixS0             1      9                 RV #>  97: 0.02235921 DRC3pHillFitModelFixS0             1      9                 RV #>  98: 0.02298094 DRC3pHillFitModelFixS0             1      9                 RV #>  99: 0.03151223 DRC3pHillFitModelFixS0             1      9                 RV #> 100: 0.03335063 DRC3pHillFitModelFixS0             1      9                 RV #>              E0               fit_type Concentration N_conc normalization_type #>      fit_source Gnumber Drug MOA Duration    clid   Tissue #>          <char>  <char>   <char>    <num>  <char>   <char> #>   1:        gDR  G00002    moa_A       72 CL00011 tissue_x #>   2:        gDR  G00003    moa_A       72 CL00011 tissue_x #>   3:        gDR  G00004    moa_A       72 CL00011 tissue_x #>   4:        gDR  G00005    moa_A       72 CL00011 tissue_x #>   5:        gDR  G00006    moa_A       72 CL00011 tissue_x #>   6:        gDR  G00007    moa_A       72 CL00011 tissue_x #>   7:        gDR  G00008    moa_A       72 CL00011 tissue_x #>   8:        gDR  G00009    moa_A       72 CL00011 tissue_x #>   9:        gDR  G00010    moa_A       72 CL00011 tissue_x #>  10:        gDR  G00011    moa_B       72 CL00011 tissue_x #>  11:        gDR  G00002    moa_A       72 CL00012 tissue_x #>  12:        gDR  G00003    moa_A       72 CL00012 tissue_x #>  13:        gDR  G00004    moa_A       72 CL00012 tissue_x #>  14:        gDR  G00005    moa_A       72 CL00012 tissue_x #>  15:        gDR  G00006    moa_A       72 CL00012 tissue_x #>  16:        gDR  G00007    moa_A       72 CL00012 tissue_x #>  17:        gDR  G00008    moa_A       72 CL00012 tissue_x #>  18:        gDR  G00009    moa_A       72 CL00012 tissue_x #>  19:        gDR  G00010    moa_A       72 CL00012 tissue_x #>  20:        gDR  G00011    moa_B       72 CL00012 tissue_x #>  21:        gDR  G00002    moa_A       72 CL00013 tissue_x #>  22:        gDR  G00003    moa_A       72 CL00013 tissue_x #>  23:        gDR  G00004    moa_A       72 CL00013 tissue_x #>  24:        gDR  G00005    moa_A       72 CL00013 tissue_x #>  25:        gDR  G00006    moa_A       72 CL00013 tissue_x #>  26:        gDR  G00007    moa_A       72 CL00013 tissue_x #>  27:        gDR  G00008    moa_A       72 CL00013 tissue_x #>  28:        gDR  G00009    moa_A       72 CL00013 tissue_x #>  29:        gDR  G00010    moa_A       72 CL00013 tissue_x #>  30:        gDR  G00011    moa_B       72 CL00013 tissue_x #>  31:        gDR  G00002    moa_A       72 CL00014 tissue_x #>  32:        gDR  G00003    moa_A       72 CL00014 tissue_x #>  33:        gDR  G00004    moa_A       72 CL00014 tissue_x #>  34:        gDR  G00005    moa_A       72 CL00014 tissue_x #>  35:        gDR  G00006    moa_A       72 CL00014 tissue_x #>  36:        gDR  G00007    moa_A       72 CL00014 tissue_x #>  37:        gDR  G00008    moa_A       72 CL00014 tissue_x #>  38:        gDR  G00009    moa_A       72 CL00014 tissue_x #>  39:        gDR  G00010    moa_A       72 CL00014 tissue_x #>  40:        gDR  G00011    moa_B       72 CL00014 tissue_x #>  41:        gDR  G00002    moa_A       72 CL00015 tissue_x #>  42:        gDR  G00003    moa_A       72 CL00015 tissue_x #>  43:        gDR  G00004    moa_A       72 CL00015 tissue_x #>  44:        gDR  G00005    moa_A       72 CL00015 tissue_x #>  45:        gDR  G00006    moa_A       72 CL00015 tissue_x #>  46:        gDR  G00007    moa_A       72 CL00015 tissue_x #>  47:        gDR  G00008    moa_A       72 CL00015 tissue_x #>  48:        gDR  G00009    moa_A       72 CL00015 tissue_x #>  49:        gDR  G00010    moa_A       72 CL00015 tissue_x #>  50:        gDR  G00011    moa_B       72 CL00015 tissue_x #>  51:        gDR  G00002    moa_A       72 CL00016 tissue_y #>  52:        gDR  G00003    moa_A       72 CL00016 tissue_y #>  53:        gDR  G00004    moa_A       72 CL00016 tissue_y #>  54:        gDR  G00005    moa_A       72 CL00016 tissue_y #>  55:        gDR  G00006    moa_A       72 CL00016 tissue_y #>  56:        gDR  G00007    moa_A       72 CL00016 tissue_y #>  57:        gDR  G00008    moa_A       72 CL00016 tissue_y #>  58:        gDR  G00009    moa_A       72 CL00016 tissue_y #>  59:        gDR  G00010    moa_A       72 CL00016 tissue_y #>  60:        gDR  G00011    moa_B       72 CL00016 tissue_y #>  61:        gDR  G00002    moa_A       72 CL00017 tissue_y #>  62:        gDR  G00003    moa_A       72 CL00017 tissue_y #>  63:        gDR  G00004    moa_A       72 CL00017 tissue_y #>  64:        gDR  G00005    moa_A       72 CL00017 tissue_y #>  65:        gDR  G00006    moa_A       72 CL00017 tissue_y #>  66:        gDR  G00007    moa_A       72 CL00017 tissue_y #>  67:        gDR  G00008    moa_A       72 CL00017 tissue_y #>  68:        gDR  G00009    moa_A       72 CL00017 tissue_y #>  69:        gDR  G00010    moa_A       72 CL00017 tissue_y #>  70:        gDR  G00011    moa_B       72 CL00017 tissue_y #>  71:        gDR  G00002    moa_A       72 CL00018 tissue_y #>  72:        gDR  G00003    moa_A       72 CL00018 tissue_y #>  73:        gDR  G00004    moa_A       72 CL00018 tissue_y #>  74:        gDR  G00005    moa_A       72 CL00018 tissue_y #>  75:        gDR  G00006    moa_A       72 CL00018 tissue_y #>  76:        gDR  G00007    moa_A       72 CL00018 tissue_y #>  77:        gDR  G00008    moa_A       72 CL00018 tissue_y #>  78:        gDR  G00009    moa_A       72 CL00018 tissue_y #>  79:        gDR  G00010    moa_A       72 CL00018 tissue_y #>  80:        gDR  G00011    moa_B       72 CL00018 tissue_y #>  81:        gDR  G00002    moa_A       72 CL00019 tissue_z #>  82:        gDR  G00003    moa_A       72 CL00019 tissue_z #>  83:        gDR  G00004    moa_A       72 CL00019 tissue_z #>  84:        gDR  G00005    moa_A       72 CL00019 tissue_z #>  85:        gDR  G00006    moa_A       72 CL00019 tissue_z #>  86:        gDR  G00007    moa_A       72 CL00019 tissue_z #>  87:        gDR  G00008    moa_A       72 CL00019 tissue_z #>  88:        gDR  G00009    moa_A       72 CL00019 tissue_z #>  89:        gDR  G00010    moa_A       72 CL00019 tissue_z #>  90:        gDR  G00011    moa_B       72 CL00019 tissue_z #>  91:        gDR  G00002    moa_A       72 CL00020 tissue_z #>  92:        gDR  G00003    moa_A       72 CL00020 tissue_z #>  93:        gDR  G00004    moa_A       72 CL00020 tissue_z #>  94:        gDR  G00005    moa_A       72 CL00020 tissue_z #>  95:        gDR  G00006    moa_A       72 CL00020 tissue_z #>  96:        gDR  G00007    moa_A       72 CL00020 tissue_z #>  97:        gDR  G00008    moa_A       72 CL00020 tissue_z #>  98:        gDR  G00009    moa_A       72 CL00020 tissue_z #>  99:        gDR  G00010    moa_A       72 CL00020 tissue_z #> 100:        gDR  G00011    moa_B       72 CL00020 tissue_z #>      fit_source Gnumber Drug MOA Duration    clid   Tissue #>      ReferenceDivisionTime      GR50      IC50     E Max  GR value #>                      <num>     <num>     <num>     <num>     <num> #>   1:                    26 0.4466890 0.4466890 0.4466890 0.4466890 #>   2:                    26 0.3939872 0.3939872 0.3939872 0.3939872 #>   3:                    26 0.7989283 0.7989283 0.7989283 0.7989283 #>   4:                    26 0.7292519 0.7292519 0.7292519 0.7292519 #>   5:                    26 0.5948205 0.5948205 0.5948205 0.5948205 #>   6:                    26 0.9153135 0.9153135 0.9153135 0.9153135 #>   7:                    26 0.6627378 0.6627378 0.6627378 0.6627378 #>   8:                    26 0.6541186 0.6541186 0.6541186 0.6541186 #>   9:                    26 0.8247285 0.8247285 0.8247285 0.8247285 #>  10:                    26 0.3682302 0.3682302 0.3682302 0.3682302 #>  11:                    30 0.6926178 0.6926178 0.6926178 0.6926178 #>  12:                    30 0.3979780 0.3979780 0.3979780 0.3979780 #>  13:                    30 0.9100255 0.9100255 0.9100255 0.9100255 #>  14:                    30 0.7873036 0.7873036 0.7873036 0.7873036 #>  15:                    30 0.8494189 0.8494189 0.8494189 0.8494189 #>  16:                    30 0.8169558 0.8169558 0.8169558 0.8169558 #>  17:                    30 0.7755540 0.7755540 0.7755540 0.7755540 #>  18:                    30 0.5212853 0.5212853 0.5212853 0.5212853 #>  19:                    30 0.7463491 0.7463491 0.7463491 0.7463491 #>  20:                    30 0.7616189 0.7616189 0.7616189 0.7616189 #>  21:                    34 0.7992747 0.7992747 0.7992747 0.7992747 #>  22:                    34 0.4668574 0.4668574 0.4668574 0.4668574 #>  23:                    34 0.7261649 0.7261649 0.7261649 0.7261649 #>  24:                    34 0.7151504 0.7151504 0.7151504 0.7151504 #>  25:                    34 0.6956589 0.6956589 0.6956589 0.6956589 #>  26:                    34 0.6779461 0.6779461 0.6779461 0.6779461 #>  27:                    34 0.9838111 0.9838111 0.9838111 0.9838111 #>  28:                    34 0.5806643 0.5806643 0.5806643 0.5806643 #>  29:                    34 0.8776200 0.8776200 0.8776200 0.8776200 #>  30:                    34 0.6609849 0.6609849 0.6609849 0.6609849 #>  31:                    38 0.8710149 0.8710149 0.8710149 0.8710149 #>  32:                    38 0.9173053 0.9173053 0.9173053 0.9173053 #>  33:                    38 0.8778150 0.8778150 0.8778150 0.8778150 #>  34:                    38 0.9437698 0.9437698 0.9437698 0.9437698 #>  35:                    38 0.7144618 0.7144618 0.7144618 0.7144618 #>  36:                    38 0.8874428 0.8874428 0.8874428 0.8874428 #>  37:                    38 0.9883815 0.9883815 0.9883815 0.9883815 #>  38:                    38 0.7852841 0.7852841 0.7852841 0.7852841 #>  39:                    38 0.8700763 0.8700763 0.8700763 0.8700763 #>  40:                    38 0.5865688 0.5865688 0.5865688 0.5865688 #>  41:                    42 0.4828015 0.4828015 0.4828015 0.4828015 #>  42:                    42 0.6425053 0.6425053 0.6425053 0.6425053 #>  43:                    42 0.3805017 0.3805017 0.3805017 0.3805017 #>  44:                    42 0.2977827 0.2977827 0.2977827 0.2977827 #>  45:                    42 0.8375294 0.8375294 0.8375294 0.8375294 #>  46:                    42 0.5962853 0.5962853 0.5962853 0.5962853 #>  47:                    42 0.4657079 0.4657079 0.4657079 0.4657079 #>  48:                    42 0.7549529 0.7549529 0.7549529 0.7549529 #>  49:                    42 0.8372120 0.8372120 0.8372120 0.8372120 #>  50:                    42 0.2524798 0.2524798 0.2524798 0.2524798 #>  51:                    46 0.1021560 0.1021560 0.1021560 0.1021560 #>  52:                    46 0.3319590 0.3319590 0.3319590 0.3319590 #>  53:                    46 0.2102313 0.2102313 0.2102313 0.2102313 #>  54:                    46 0.2100452 0.2100452 0.2100452 0.2100452 #>  55:                    46 0.3146779 0.3146779 0.3146779 0.3146779 #>  56:                    46 0.2311182 0.2311182 0.2311182 0.2311182 #>  57:                    46 0.2364875 0.2364875 0.2364875 0.2364875 #>  58:                    46 0.3235937 0.3235937 0.3235937 0.3235937 #>  59:                    46 0.4821997 0.4821997 0.4821997 0.4821997 #>  60:                    46 0.6425491 0.6425491 0.6425491 0.6425491 #>  61:                    50 0.4403251 0.4403251 0.4403251 0.4403251 #>  62:                    50 0.3158261 0.3158261 0.3158261 0.3158261 #>  63:                    50 0.3117162 0.3117162 0.3117162 0.3117162 #>  64:                    50 0.4144975 0.4144975 0.4144975 0.4144975 #>  65:                    50 0.5330401 0.5330401 0.5330401 0.5330401 #>  66:                    50 0.2753604 0.2753604 0.2753604 0.2753604 #>  67:                    50 0.2988946 0.2988946 0.2988946 0.2988946 #>  68:                    50 0.4775211 0.4775211 0.4775211 0.4775211 #>  69:                    50 0.4307934 0.4307934 0.4307934 0.4307934 #>  70:                    50 0.5740133 0.5740133 0.5740133 0.5740133 #>  71:                    54 0.1817987 0.1817987 0.1817987 0.1817987 #>  72:                    54 0.4557736 0.4557736 0.4557736 0.4557736 #>  73:                    54 0.3473656 0.3473656 0.3473656 0.3473656 #>  74:                    54 0.3722520 0.3722520 0.3722520 0.3722520 #>  75:                    54 0.3820939 0.3820939 0.3820939 0.3820939 #>  76:                    54 0.4088002 0.4088002 0.4088002 0.4088002 #>  77:                    54 0.3086007 0.3086007 0.3086007 0.3086007 #>  78:                    54 0.4906996 0.4906996 0.4906996 0.4906996 #>  79:                    54 0.4496388 0.4496388 0.4496388 0.4496388 #>  80:                    54 0.5613320 0.5613320 0.5613320 0.5613320 #>  81:                    58 0.7645125 0.7645125 0.7645125 0.7645125 #>  82:                    58 0.7799746 0.7799746 0.7799746 0.7799746 #>  83:                    58 0.7029485 0.7029485 0.7029485 0.7029485 #>  84:                    58 0.7566058 0.7566058 0.7566058 0.7566058 #>  85:                    58 0.8388170 0.8388170 0.8388170 0.8388170 #>  86:                    58 0.7862239 0.7862239 0.7862239 0.7862239 #>  87:                    58 0.8640795 0.8640795 0.8640795 0.8640795 #>  88:                    58 0.7614460 0.7614460 0.7614460 0.7614460 #>  89:                    58 0.8471580 0.8471580 0.8471580 0.8471580 #>  90:                    58 0.6842658 0.6842658 0.6842658 0.6842658 #>  91:                    62 0.6737095 0.6737095 0.6737095 0.6737095 #>  92:                    62 0.5683750 0.5683750 0.5683750 0.5683750 #>  93:                    62 0.3916886 0.3916886 0.3916886 0.3916886 #>  94:                    62 0.4519141 0.4519141 0.4519141 0.4519141 #>  95:                    62 0.5938560 0.5938560 0.5938560 0.5938560 #>  96:                    62 0.5525910 0.5525910 0.5525910 0.5525910 #>  97:                    62 0.3356482 0.3356482 0.3356482 0.3356482 #>  98:                    62 0.5045079 0.5045079 0.5045079 0.5045079 #>  99:                    62 0.5769999 0.5769999 0.5769999 0.5769999 #> 100:                    62 0.4117805 0.4117805 0.4117805 0.4117805 #>      ReferenceDivisionTime      GR50      IC50     E Max  GR value #>  #> $raw_data #>                           rId                             cId     x_mean #>                        <char>                          <char>      <num> #>   1: G00002_drug_002_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.4466890 #>   2: G00002_drug_002_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.4729298 #>   3: G00003_drug_003_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.3939872 #>   4: G00003_drug_003_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.3932199 #>   5: G00004_drug_004_moa_A_72 CL00011_cellline_BA_tissue_x_26  0.7989283 #>  ---                                                                     #> 196: G00009_drug_009_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.0774842 #> 197: G00010_drug_010_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.5769999 #> 198: G00010_drug_010_moa_A_72 CL00020_cellline_KB_tissue_z_62  0.1991504 #> 199: G00011_drug_011_moa_B_72 CL00020_cellline_KB_tissue_z_62  0.4117805 #> 200: G00011_drug_011_moa_B_72 CL00020_cellline_KB_tissue_z_62 -0.1148134 #>          x_AOC x_AOC_range        xc50       x_max        ec50       x_inf #>          <num>       <num>       <num>       <num>       <num>       <num> #>   1: 0.5533110   0.6277120 0.007253171  0.32793333 0.003795893  0.34682665 #>   2: 0.5270702   0.6048472 0.008956223  0.33660000 0.004512560  0.36516781 #>   3: 0.6060128   0.6954994 0.005655581  0.27413333 0.003962986  0.28319787 #>   4: 0.6067801   0.7027714 0.006591468  0.25136667 0.004714084  0.26639679 #>   5: 0.2010717   0.2385432         Inf  0.70636667 0.016546380  0.71001484 #>  ---                                                                       #> 196: 0.9225158   1.0742560 0.026077313 -0.49686667 0.037516853 -0.52393526 #> 197: 0.4230001   0.4723104 0.150209032  0.07513333 0.137152296  0.09235428 #> 198: 0.8008496   0.8915995 0.096729600 -0.78626667 0.146270629 -0.74430401 #> 199: 0.5882195   0.6900581 0.027440547  0.08603333 0.024485958  0.09662172 #> 200: 1.1148134   1.3059605 0.016239553 -0.76026667 0.026434030 -0.73401896 #>        x_0        h        r2   x_sd_avg               fit_type #>      <num>    <num>     <num>      <num>                 <char> #>   1:     1 1.827031 0.9924695 0.02424423 DRC3pHillFitModelFixS0 #>   2:     1 1.911901 0.9884406 0.03203268 DRC3pHillFitModelFixS0 #>   3:     1 2.349599 0.9958511 0.02195104 DRC3pHillFitModelFixS0 #>   4:     1 2.270093 0.9905292 0.03075240 DRC3pHillFitModelFixS0 #>   5:     1 3.159939 0.9918874 0.02315049 DRC3pHillFitModelFixS0 #>  ---                                                            #> 196:     1 1.970723 0.9955609 0.04602459 DRC3pHillFitModelFixS0 #> 197:     1 2.245643 0.9988156 0.03151223 DRC3pHillFitModelFixS0 #> 198:     1 2.204685 0.9985705 0.06333498 DRC3pHillFitModelFixS0 #> 199:     1 1.884916 0.9986615 0.03335063 DRC3pHillFitModelFixS0 #> 200:     1 1.854308 0.9987249 0.07007818 DRC3pHillFitModelFixS0 #>      maxlog10Concentration N_conc normalization_type fit_source Gnumber #>                      <num>  <int>             <char>     <char>  <char> #>   1:                     1      9                 RV        gDR  G00002 #>   2:                     1      9                 GR        gDR  G00002 #>   3:                     1      9                 RV        gDR  G00003 #>   4:                     1      9                 GR        gDR  G00003 #>   5:                     1      9                 RV        gDR  G00004 #>  ---                                                                    #> 196:                     1      9                 GR        gDR  G00009 #> 197:                     1      9                 RV        gDR  G00010 #> 198:                     1      9                 GR        gDR  G00010 #> 199:                     1      9                 RV        gDR  G00011 #> 200:                     1      9                 GR        gDR  G00011 #>      DrugName drug_moa Duration    clid CellLineName   Tissue #>        <char>   <char>    <num>  <char>       <char>   <char> #>   1: drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   2: drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   3: drug_003    moa_A       72 CL00011  cellline_BA tissue_x #>   4: drug_003    moa_A       72 CL00011  cellline_BA tissue_x #>   5: drug_004    moa_A       72 CL00011  cellline_BA tissue_x #>  ---                                                          #> 196: drug_009    moa_A       72 CL00020  cellline_KB tissue_z #> 197: drug_010    moa_A       72 CL00020  cellline_KB tissue_z #> 198: drug_010    moa_A       72 CL00020  cellline_KB tissue_z #> 199: drug_011    moa_B       72 CL00020  cellline_KB tissue_z #> 200: drug_011    moa_B       72 CL00020  cellline_KB tissue_z #>      ReferenceDivisionTime #>                      <num> #>   1:                    26 #>   2:                    26 #>   3:                    26 #>   4:                    26 #>   5:                    26 #>  ---                       #> 196:                    62 #> 197:                    62 #> 198:                    62 #> 199:                    62 #> 200:                    62 #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/headers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or reset headers for one or all header field(s) respectively — headers","title":"Get or reset headers for one or all header field(s) respectively — headers","text":"Get expected header(s) one field reset header fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/headers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or reset headers for one or all header field(s) respectively — headers","text":"","code":"get_header(k = NULL)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/headers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or reset headers for one or all header field(s) respectively — headers","text":"k string field (data type) return headers ","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/headers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or reset headers for one or all header field(s) respectively — headers","text":"get_header character vector headers field k.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/headers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get or reset headers for one or all header field(s) respectively — headers","text":"get_header called values, entire available header list returned.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/headers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or reset headers for one or all header field(s) respectively — headers","text":"","code":"get_header(k = NULL) #> $manifest #> $manifest$barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $manifest$template #> [1] \"Template\"  \"Treatment\" #>  #> $manifest$duration #> [1] \"Duration\" #>  #>  #> $raw_data #> [1] \"ReadoutValue\"    \"BackgroundValue\" \"UntrtReadout\"    \"Day0Readout\"     #> [5] \"masked\"          #>  #> $normalized_results #> [1] \"x\"                    \"CorrectedReadout\"     \"GRvalue\"              #> [4] \"RelativeViability\"    \"DivisionTime\"         \"RefGRvalue\"           #> [7] \"RefRelativeViability\" #>  #> $averaged_results #> [1] \"x\"                     \"x_std\"                 \"std_RelativeViability\" #> [4] \"std_GRvalue\"           #>  #> $response_metrics #>  [1] \"x_mean\"      \"x_AOC\"       \"x_AOC_range\" \"xc50\"        \"x_max\"       #>  [6] \"ec50\"        \"x_inf\"       \"x_0\"         \"h\"           \"r2\"          #> [11] \"x_sd_avg\"    \"fit_type\"    #>  #> $metric_average_fields #> $metric_average_fields$mean #> [1] \"x_mean\"      \"x_AOC\"       \"x_AOC_range\" \"x_max\"       \"x_inf\"       #> [6] \"x_0\"         #>  #> $metric_average_fields$geometric_mean #> [1] \"xc50\"  \"ec50\"  \"GR50\"  \"GEC50\" \"IC50\"  \"EC50\"  #>  #>  #> $add_clid #> $add_clid$cellline_name #> [1] \"CellLineName\" #>  #> $add_clid$cellline_tissue #> [1] \"Tissue\" #>  #> $add_clid$cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $add_clid$cellline_subtype #> [1] \"subtype\" #>  #> $add_clid$cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #>  #> $metrics_names #>    x_mean    x_AOC    x_AOC_range    xc50   x_max    ec50    x_inf    x_0    #> RV \"RV_mean\" \"RV_AOC\" \"RV_AOC_range\" \"IC50\" \"E_max\"  \"EC50\"  \"E_inf\"  \"E_0\"  #> GR \"GR_mean\" \"GR_AOC\" \"GR_AOC_range\" \"GR50\" \"GR_max\" \"GEC50\" \"GR_inf\" \"GR_0\" #>    h      r2      x_sd_avg    fit_type      #> RV \"h_RV\" \"RV_r2\" \"RV_sd_avg\" \"fit_type_RV\" #> GR \"h_GR\" \"GR_r2\" \"GR_sd_avg\" \"fit_type_GR\" #>  #> $metrics_results #>  [1] \"maxlog10Concentration\" \"N_conc\"                \"cotrt_value\"           #>  [4] \"source\"                \"x_mean\"                \"x_AOC\"                 #>  [7] \"x_AOC_range\"           \"xc50\"                  \"x_max\"                 #> [10] \"ec50\"                  \"x_inf\"                 \"x_0\"                   #> [13] \"h\"                     \"r2\"                    \"x_sd_avg\"              #> [16] \"fit_type\"              \"RV_mean\"               \"GR_mean\"               #> [19] \"RV_AOC\"                \"GR_AOC\"                \"RV_AOC_range\"          #> [22] \"GR_AOC_range\"          \"IC50\"                  \"GR50\"                  #> [25] \"E_max\"                 \"GR_max\"                \"EC50\"                  #> [28] \"GEC50\"                 \"E_inf\"                 \"GR_inf\"                #> [31] \"E_0\"                   \"GR_0\"                  \"h_RV\"                  #> [34] \"h_GR\"                  \"RV_r2\"                 \"GR_r2\"                 #> [37] \"RV_sd_avg\"             \"GR_sd_avg\"             \"fit_type_RV\"           #> [40] \"fit_type_GR\"           #>  #> $controlled #> $controlled[[1]] #> [1] \"clid\" #>  #> $controlled$barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $controlled$template #> [1] \"Template\"  \"Treatment\" #>  #> $controlled$duration #> [1] \"Duration\" #>  #> $controlled[[5]] #> [1] \"Gnumber\" #>  #> $controlled[[6]] #> [1] \"Concentration\" #>  #> $controlled[[7]] #> [1] \"Gnumber_2\" #>  #> $controlled[[8]] #> [1] \"Gnumber_3\" #>  #> $controlled[[9]] #> [1] \"Gnumber_4\" #>  #> $controlled[[10]] #> [1] \"Gnumber_5\" #>  #> $controlled[[11]] #> [1] \"Gnumber_6\" #>  #> $controlled[[12]] #> [1] \"Gnumber_7\" #>  #> $controlled[[13]] #> [1] \"Gnumber_8\" #>  #> $controlled[[14]] #> [1] \"Gnumber_9\" #>  #> $controlled[[15]] #> [1] \"Gnumber_10\" #>  #> $controlled[[16]] #> [1] \"Concentration_2\" #>  #> $controlled[[17]] #> [1] \"Concentration_3\" #>  #> $controlled[[18]] #> [1] \"Concentration_4\" #>  #> $controlled[[19]] #> [1] \"Concentration_5\" #>  #> $controlled[[20]] #> [1] \"Concentration_6\" #>  #> $controlled[[21]] #> [1] \"Concentration_7\" #>  #> $controlled[[22]] #> [1] \"Concentration_8\" #>  #> $controlled[[23]] #> [1] \"Concentration_9\" #>  #> $controlled[[24]] #> [1] \"Concentration_10\" #>  #>  #> $reserved #> $reserved$cellline_name #> [1] \"CellLineName\" #>  #> $reserved$cellline_tissue #> [1] \"Tissue\" #>  #> $reserved$cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $reserved$cellline_subtype #> [1] \"subtype\" #>  #> $reserved$cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $reserved[[6]] #> [1] \"DrugName\" #>  #> $reserved[[7]] #> [1] \"masked\" #>  #> $reserved[[8]] #> [1] \"DrugName_2\" #>  #> $reserved[[9]] #> [1] \"DrugName_3\" #>  #> $reserved[[10]] #> [1] \"DrugName_4\" #>  #> $reserved[[11]] #> [1] \"DrugName_5\" #>  #> $reserved[[12]] #> [1] \"DrugName_6\" #>  #> $reserved[[13]] #> [1] \"DrugName_7\" #>  #> $reserved[[14]] #> [1] \"DrugName_8\" #>  #> $reserved[[15]] #> [1] \"DrugName_9\" #>  #> $reserved[[16]] #> [1] \"DrugName_10\" #>  #> $reserved[[17]] #> [1] \"drug_moa_2\" #>  #> $reserved[[18]] #> [1] \"drug_moa_3\" #>  #> $reserved[[19]] #> [1] \"drug_moa_4\" #>  #> $reserved[[20]] #> [1] \"drug_moa_5\" #>  #> $reserved[[21]] #> [1] \"drug_moa_6\" #>  #> $reserved[[22]] #> [1] \"drug_moa_7\" #>  #> $reserved[[23]] #> [1] \"drug_moa_8\" #>  #> $reserved[[24]] #> [1] \"drug_moa_9\" #>  #> $reserved[[25]] #> [1] \"drug_moa_10\" #>  #> $reserved[[26]] #> [1] \"ReadoutValue\" #>  #> $reserved[[27]] #> [1] \"BackgroundValue\" #>  #> $reserved[[28]] #> [1] \"UntrtReadout\" #>  #> $reserved[[29]] #> [1] \"Day0Readout\" #>  #> $reserved[[30]] #> [1] \"masked\" #>  #> $reserved[[31]] #> [1] \"x\" #>  #> $reserved[[32]] #> [1] \"CorrectedReadout\" #>  #> $reserved[[33]] #> [1] \"GRvalue\" #>  #> $reserved[[34]] #> [1] \"RelativeViability\" #>  #> $reserved[[35]] #> [1] \"DivisionTime\" #>  #> $reserved[[36]] #> [1] \"RefGRvalue\" #>  #> $reserved[[37]] #> [1] \"RefRelativeViability\" #>  #> $reserved[[38]] #> [1] \"x\" #>  #> $reserved[[39]] #> [1] \"x_std\" #>  #> $reserved[[40]] #> [1] \"std_RelativeViability\" #>  #> $reserved[[41]] #> [1] \"std_GRvalue\" #>  #> $reserved[[42]] #> [1] \"maxlog10Concentration\" #>  #> $reserved[[43]] #> [1] \"N_conc\" #>  #> $reserved[[44]] #> [1] \"cotrt_value\" #>  #> $reserved[[45]] #> [1] \"source\" #>  #> $reserved[[46]] #> [1] \"x_mean\" #>  #> $reserved[[47]] #> [1] \"x_AOC\" #>  #> $reserved[[48]] #> [1] \"x_AOC_range\" #>  #> $reserved[[49]] #> [1] \"xc50\" #>  #> $reserved[[50]] #> [1] \"x_max\" #>  #> $reserved[[51]] #> [1] \"ec50\" #>  #> $reserved[[52]] #> [1] \"x_inf\" #>  #> $reserved[[53]] #> [1] \"x_0\" #>  #> $reserved[[54]] #> [1] \"h\" #>  #> $reserved[[55]] #> [1] \"r2\" #>  #> $reserved[[56]] #> [1] \"x_sd_avg\" #>  #> $reserved[[57]] #> [1] \"fit_type\" #>  #> $reserved[[58]] #> [1] \"RV_mean\" #>  #> $reserved[[59]] #> [1] \"GR_mean\" #>  #> $reserved[[60]] #> [1] \"RV_AOC\" #>  #> $reserved[[61]] #> [1] \"GR_AOC\" #>  #> $reserved[[62]] #> [1] \"RV_AOC_range\" #>  #> $reserved[[63]] #> [1] \"GR_AOC_range\" #>  #> $reserved[[64]] #> [1] \"IC50\" #>  #> $reserved[[65]] #> [1] \"GR50\" #>  #> $reserved[[66]] #> [1] \"E_max\" #>  #> $reserved[[67]] #> [1] \"GR_max\" #>  #> $reserved[[68]] #> [1] \"EC50\" #>  #> $reserved[[69]] #> [1] \"GEC50\" #>  #> $reserved[[70]] #> [1] \"E_inf\" #>  #> $reserved[[71]] #> [1] \"GR_inf\" #>  #> $reserved[[72]] #> [1] \"E_0\" #>  #> $reserved[[73]] #> [1] \"GR_0\" #>  #> $reserved[[74]] #> [1] \"h_RV\" #>  #> $reserved[[75]] #> [1] \"h_GR\" #>  #> $reserved[[76]] #> [1] \"RV_r2\" #>  #> $reserved[[77]] #> [1] \"GR_r2\" #>  #> $reserved[[78]] #> [1] \"RV_sd_avg\" #>  #> $reserved[[79]] #> [1] \"GR_sd_avg\" #>  #> $reserved[[80]] #> [1] \"fit_type_RV\" #>  #> $reserved[[81]] #> [1] \"fit_type_GR\" #>  #> $reserved[[82]] #> [1] \"WellRow\" #>  #> $reserved[[83]] #> [1] \"WellColumn\" #>  #>  #> $ordered_1 #>  [1] \"CellLineName\"     \"Tissue\"           \"Duration\"         \"DrugName\"         #>  [5] \"Concentration\"    \"DrugName_2\"       \"Concentration_2\"  \"DrugName_3\"       #>  [9] \"Concentration_3\"  \"DrugName_4\"       \"Concentration_4\"  \"DrugName_5\"       #> [13] \"Concentration_5\"  \"DrugName_6\"       \"Concentration_6\"  \"DrugName_7\"       #> [17] \"Concentration_7\"  \"DrugName_8\"       \"Concentration_8\"  \"DrugName_9\"       #> [21] \"Concentration_9\"  \"DrugName_10\"      \"Concentration_10\" #>  #> $ordered_2 #> $ordered_2[[1]] #> [1] \"x\" #>  #> $ordered_2[[2]] #> [1] \"CorrectedReadout\" #>  #> $ordered_2[[3]] #> [1] \"GRvalue\" #>  #> $ordered_2[[4]] #> [1] \"RelativeViability\" #>  #> $ordered_2[[5]] #> [1] \"DivisionTime\" #>  #> $ordered_2[[6]] #> [1] \"RefGRvalue\" #>  #> $ordered_2[[7]] #> [1] \"RefRelativeViability\" #>  #> $ordered_2[[8]] #> [1] \"x\" #>  #> $ordered_2[[9]] #> [1] \"x_std\" #>  #> $ordered_2[[10]] #> [1] \"std_RelativeViability\" #>  #> $ordered_2[[11]] #> [1] \"std_GRvalue\" #>  #> $ordered_2[[12]] #> [1] \"maxlog10Concentration\" #>  #> $ordered_2[[13]] #> [1] \"N_conc\" #>  #> $ordered_2[[14]] #> [1] \"cotrt_value\" #>  #> $ordered_2[[15]] #> [1] \"source\" #>  #> $ordered_2[[16]] #> [1] \"x_mean\" #>  #> $ordered_2[[17]] #> [1] \"x_AOC\" #>  #> $ordered_2[[18]] #> [1] \"x_AOC_range\" #>  #> $ordered_2[[19]] #> [1] \"xc50\" #>  #> $ordered_2[[20]] #> [1] \"x_max\" #>  #> $ordered_2[[21]] #> [1] \"ec50\" #>  #> $ordered_2[[22]] #> [1] \"x_inf\" #>  #> $ordered_2[[23]] #> [1] \"x_0\" #>  #> $ordered_2[[24]] #> [1] \"h\" #>  #> $ordered_2[[25]] #> [1] \"r2\" #>  #> $ordered_2[[26]] #> [1] \"x_sd_avg\" #>  #> $ordered_2[[27]] #> [1] \"fit_type\" #>  #> $ordered_2[[28]] #> [1] \"RV_mean\" #>  #> $ordered_2[[29]] #> [1] \"GR_mean\" #>  #> $ordered_2[[30]] #> [1] \"RV_AOC\" #>  #> $ordered_2[[31]] #> [1] \"GR_AOC\" #>  #> $ordered_2[[32]] #> [1] \"RV_AOC_range\" #>  #> $ordered_2[[33]] #> [1] \"GR_AOC_range\" #>  #> $ordered_2[[34]] #> [1] \"IC50\" #>  #> $ordered_2[[35]] #> [1] \"GR50\" #>  #> $ordered_2[[36]] #> [1] \"E_max\" #>  #> $ordered_2[[37]] #> [1] \"GR_max\" #>  #> $ordered_2[[38]] #> [1] \"EC50\" #>  #> $ordered_2[[39]] #> [1] \"GEC50\" #>  #> $ordered_2[[40]] #> [1] \"E_inf\" #>  #> $ordered_2[[41]] #> [1] \"GR_inf\" #>  #> $ordered_2[[42]] #> [1] \"E_0\" #>  #> $ordered_2[[43]] #> [1] \"GR_0\" #>  #> $ordered_2[[44]] #> [1] \"h_RV\" #>  #> $ordered_2[[45]] #> [1] \"h_GR\" #>  #> $ordered_2[[46]] #> [1] \"RV_r2\" #>  #> $ordered_2[[47]] #> [1] \"GR_r2\" #>  #> $ordered_2[[48]] #> [1] \"RV_sd_avg\" #>  #> $ordered_2[[49]] #> [1] \"GR_sd_avg\" #>  #> $ordered_2[[50]] #> [1] \"fit_type_RV\" #>  #> $ordered_2[[51]] #> [1] \"fit_type_GR\" #>  #> $ordered_2[[52]] #> [1] \"ReadoutValue\" #>  #> $ordered_2[[53]] #> [1] \"BackgroundValue\" #>  #> $ordered_2[[54]] #> [1] \"UntrtReadout\" #>  #> $ordered_2[[55]] #> [1] \"Day0Readout\" #>  #> $ordered_2[[56]] #> [1] \"masked\" #>  #> $ordered_2[[57]] #> [1] \"ReferenceDivisionTime\" #>  #> $ordered_2[[58]] #> [1] \"clid\" #>  #> $ordered_2[[59]] #> [1] \"Gnumber\" #>  #> $ordered_2[[60]] #> [1] \"Gnumber_2\" #>  #> $ordered_2[[61]] #> [1] \"Gnumber_3\" #>  #> $ordered_2[[62]] #> [1] \"Gnumber_4\" #>  #> $ordered_2[[63]] #> [1] \"Gnumber_5\" #>  #> $ordered_2[[64]] #> [1] \"Gnumber_6\" #>  #> $ordered_2[[65]] #> [1] \"Gnumber_7\" #>  #> $ordered_2[[66]] #> [1] \"Gnumber_8\" #>  #> $ordered_2[[67]] #> [1] \"Gnumber_9\" #>  #> $ordered_2[[68]] #> [1] \"Gnumber_10\" #>  #> $ordered_2$barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $ordered_2$template #> [1] \"Template\"  \"Treatment\" #>  #> $ordered_2$duration #> [1] \"Duration\" #>  #> $ordered_2[[72]] #> [1] \"WellRow\" #>  #> $ordered_2[[73]] #> [1] \"WellColumn\" #>  #>  #> $id #> [1] \"rId\" \"cId\" #>  #> $iso_position #> [1] \"iso_level\" \"pos_x\"     \"pos_y\"     \"pos_x_ref\" \"pos_y_ref\" #>  #> $excess #> [1] \"smooth\"       \"hsa_excess\"   \"bliss_excess\" #>  #> $scores #> [1] \"hsa_score\"   \"bliss_score\" \"CIScore_50\"  \"CIScore_80\"  #>  #> $isobolograms #> [1] \"normalization_type\" \"iso_level\"          \"pos_x\"              #> [4] \"pos_y\"              \"pos_x_ref\"          \"pos_y_ref\"          #> [7] \"log2_CI\"            \"log10_ratio_conc\"   #>  #> $obsolete #> [1] \"RV\"     \"GR\"     \"Excess\" #>  get_header(\"manifest\") #> $barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $template #> [1] \"Template\"  \"Treatment\" #>  #> $duration #> [1] \"Duration\" #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","title":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","text":"Get, set, reset expected identifier(s) one identifier field(s). Identifiers used gDR processing functions identify columns data.table correspond certain expected fields. Functions family *et_identifier look identifiers environment functions family *et_SE_identifiers look identifiers metadata slot SummarizedExperiment object. See details expected identifiers definitions.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","text":"","code":"get_env_identifiers(k = NULL, simplify = TRUE)  get_prettified_identifiers(k = NULL, simplify = TRUE)  set_env_identifier(k, v)  reset_env_identifiers()"},{"path":"https://gdrplatform.github.io/gDRutils/reference/identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","text":"k String corresponding identifier name. simplify Boolean indicating whether output simplified. v Character vector corresponding value given identifier k.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","text":"setting resetting functionality, NULL invisibly. get_env_identifiers character vector identifiers field k. functions called arguments, entire available identifier list returned. list charvec depends unify param list charvec depends unify param NULL NULL","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identifiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","text":"Identifiers supported gDR suite include: \"barcode\": String column name containing barcode metadata \"cellline\": String column name containing unique, machine-readable cell line identifiers \"cellline_name\": String column name containing human-friendly cell line names \"cellline_tissue\": String column name containing metadata cell line tissue type \"cellline_ref_div_time\": String column name containing reference division time cell lines \"cellline_parental_identifier\": String column name containing unique, machine-readable parental cell line identifiers. Used case derived engineered cell lines. \"drug\": String column name containing unique, machine-readable drug identifiers \"drug_name\": String column name containing human-friendly drug names \"drug_moa\": String column name containing metadata drug mode action \"duration\": String column name containing metadata duration cells treated (hours) \"template\": String collumn name containing template metadata \"untreated_tag\": Character vector entries identify control, untreated wells \"well_position\": Character vector column names containing metadata well positions plate","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get, set, or reset identifiers for one or all identifier field(s) — identifiers","text":"","code":"get_env_identifiers(\"duration\") # \"Duration\" #> [1] \"Duration\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identify_unique_se_metadata_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify unique metadata fields from a list of SummarizedExperiments — identify_unique_se_metadata_fields","title":"Identify unique metadata fields from a list of SummarizedExperiments — identify_unique_se_metadata_fields","text":"Identify unique metadata fields list SummarizedExperiments","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identify_unique_se_metadata_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify unique metadata fields from a list of SummarizedExperiments — identify_unique_se_metadata_fields","text":"","code":"identify_unique_se_metadata_fields(SElist)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/identify_unique_se_metadata_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify unique metadata fields from a list of SummarizedExperiments — identify_unique_se_metadata_fields","text":"SElist named list SummarizedExperiments","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identify_unique_se_metadata_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify unique metadata fields from a list of SummarizedExperiments — identify_unique_se_metadata_fields","text":"character vector unique names metadata","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/identify_unique_se_metadata_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify unique metadata fields from a list of SummarizedExperiments — identify_unique_se_metadata_fields","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] SElist <- list(   se,    se ) identify_unique_se_metadata_fields(SElist) #> [1] \"identifiers\"         \"experiment_metadata\" \"Keys\"                #> [4] \"fit_parameters\"      \".internal\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_any_exp_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"is_any_exp_empty — is_any_exp_empty","title":"is_any_exp_empty — is_any_exp_empty","text":"check experiment empty","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_any_exp_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_any_exp_empty — is_any_exp_empty","text":"","code":"is_any_exp_empty(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_any_exp_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_any_exp_empty — is_any_exp_empty","text":"mae MultiAssayExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_any_exp_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_any_exp_empty — is_any_exp_empty","text":"logical","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_any_exp_empty.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_any_exp_empty — is_any_exp_empty","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_any_exp_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_any_exp_empty — is_any_exp_empty","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") is_any_exp_empty(mae) #> [1] FALSE"},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_exp_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"is_exp_empty — is_exp_empty","title":"is_exp_empty — is_exp_empty","text":"check experiment (SE) empty","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_exp_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_exp_empty — is_exp_empty","text":"","code":"is_exp_empty(exp)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_exp_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_exp_empty — is_exp_empty","text":"exp SummarizedExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_exp_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_exp_empty — is_exp_empty","text":"logical","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_exp_empty.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_exp_empty — is_exp_empty","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_exp_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_exp_empty — is_exp_empty","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") se <- mae[[1]] is_exp_empty(se) #> [1] FALSE"},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_mae_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"is_mae_empty — is_mae_empty","title":"is_mae_empty — is_mae_empty","text":"check mae experiments empty","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_mae_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_mae_empty — is_mae_empty","text":"","code":"is_mae_empty(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_mae_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_mae_empty — is_mae_empty","text":"mae MultiAssayExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_mae_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_mae_empty — is_mae_empty","text":"logical","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_mae_empty.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_mae_empty — is_mae_empty","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/is_mae_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_mae_empty — is_mae_empty","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") is_mae_empty(mae) #> [1] FALSE"},{"path":"https://gdrplatform.github.io/gDRutils/reference/logisticFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic fit — logisticFit","title":"Logistic fit — logisticFit","text":"Fit logistic curve drug response data.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/logisticFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic fit — logisticFit","text":"","code":"logisticFit(   concs,   norm_values,   std_norm_values = NA,   x_0 = 1,   priors = NULL,   lower = NULL,   range_conc = c(0.005, 5),   force_fit = FALSE,   pcutoff = 0.05,   cap = 0.1,   n_point_cutoff = 4,   capping_fold = 5 )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/logisticFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic fit — logisticFit","text":"concs concentrations transformed log space. norm_values normalized response values (Untreated = 1). std_norm_values std values. x_0 upper limit. Defaults 1. co-treatments, value set NA. priors numeric vector containing starting values . mean parameters model. Overrules self starter function. lower numeric vector lower limits parameters 4-param model. range_conc range concentration calculating AOC_range. force_fit boolean indicating whether force parameter-based fit. pcutoff numeric pvalue significance threshold equal use constant fit. cap numeric value capping norm_values stay (x_0 + cap). n_point_cutoff integer indicating number unique concentrations required fit curve. capping_fold Integer value fold number use capping IC50/GR50. Default 5.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/logisticFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logistic fit — logisticFit","text":"data.table metrics fit parameters.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/logisticFit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logistic fit — logisticFit","text":"Implementation genedata approach curve fit: https://screener.genedata.com/documentation/display/DOC15/Business+Rules++Dose-Response+Curve+Fitting+Model+Selection++Fit+Validity #nolint output parameter names correspond following definitions: x_mean mean given dose-response metric x_AOC_range range area curve x_AOC area GR curve , respectively, relative cell count curve, averaged range concentration values xc50 concentration effect reaches value 0.5 based interpolation fitted curve x_max maximum effect drug ec50 drug concentration half-maximal effect x_inf asymptotic value sigmoidal fit dose-response data concentration goes infinity x_0 asymptotic metric value corresponding concentration 0 primary drug h hill coefficient fitted curve, reflects steep dose-response curve r2 goodness fit x_sd_avg standard deviation GR/IC fit_type given one following: \"DRC4pHillFitModel\" Successfully fit 4-parameter model \"DRC3pHillFitModelFixS0\" Successfully fit 3-parameter model \"DRCConstantFitResult\" Successfully fit constant fit \"DRCTooFewPointsToFit\" enough points run fit \"DRCInvalidFitResult\" Fit attempted failed maxlog10Concentration highest log10 concentration N_conc Number unique concentrations","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/logisticFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logistic fit — logisticFit","text":"","code":"logisticFit( c(0.001, 0.00316227766016838, 0.01, 0.0316227766016838), c(0.9999964000144, 0.999964001439942, 0.999640143942423, 0.996414342629482), rep(0.1, 4), priors = c(2, 0.4, 1, 0.00658113883008419) ) #>       x_mean        x_AOC x_AOC_range  xc50     x_max      ec50     x_inf   x_0 #>        <num>        <num>       <num> <num>     <num>     <num>     <num> <num> #> 1: 0.9993262 0.0006738196 0.003303951   Inf 0.9964143 0.0187753 0.9958965     1 #>           h        r2 x_sd_avg               fit_type maxlog10Concentration #>       <num>     <num>    <num>                 <char>                 <num> #> 1: 3.711073 0.9998954      0.1 DRC3pHillFitModelFixS0                  -1.5 #>    N_conc #>     <int> #> 1:      4"},{"path":"https://gdrplatform.github.io/gDRutils/reference/loop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lapply or bplapply. — loop","title":"Lapply or bplapply. — loop","text":"Lapply bplapply.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/loop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lapply or bplapply. — loop","text":"","code":"loop(x, FUN, parallelize = TRUE, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/loop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lapply or bplapply. — loop","text":"x Vector (atomic list) ‘expression’ object. objects (including classed objects) coerced ‘base::.list’. FUN user-defined function. parallelize Logical indicating whether parallelize computation. Defaults TRUE. ... optional argument passed bplapply parallelize == TRUE, else lapply.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/loop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lapply or bplapply. — loop","text":"List containing output FUN applied every element x.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/loop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lapply or bplapply. — loop","text":"","code":"loop(list(c(1,2), c(2,3)), sum, parallelize = FALSE) #> [[1]] #> [1] 3 #>  #> [[2]] #> [1] 5 #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/mcolData.html","id":null,"dir":"Reference","previous_headings":"","what":"mcolData — mcolData","title":"mcolData — mcolData","text":"get colData experiments","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mcolData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcolData — mcolData","text":"","code":"mcolData(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/mcolData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mcolData — mcolData","text":"mae MultiAssayExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mcolData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mcolData — mcolData","text":"data.table -experiments colData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mcolData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mcolData — mcolData","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mcolData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mcolData — mcolData","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") mcolData(mae) #>        clid CellLineName   Tissue ReferenceDivisionTime #>      <char>       <char>   <char>                 <num> #>  1: CL00011  cellline_BA tissue_x                    26 #>  2: CL00012  cellline_CA tissue_x                    30 #>  3: CL00013  cellline_DA tissue_x                    34 #>  4: CL00014  cellline_EA tissue_x                    38 #>  5: CL00015  cellline_FA tissue_x                    42 #>  6: CL00016  cellline_GB tissue_y                    46 #>  7: CL00017  cellline_HB tissue_y                    50 #>  8: CL00018  cellline_IB tissue_y                    54 #>  9: CL00019  cellline_JB tissue_z                    58 #> 10: CL00020  cellline_KB tissue_z                    62"},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge multiple Summarized Experiments — merge_SE","title":"Merge multiple Summarized Experiments — merge_SE","text":"Merge multiple Summarized Experiments","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge multiple Summarized Experiments — merge_SE","text":"","code":"merge_SE(   SElist,   additional_col_name = \"data_source\",   discard_keys = c(\"normalization_type\", \"fit_source\", \"record_id\", \"swap_sa\",     \"control_type\") )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge multiple Summarized Experiments — merge_SE","text":"SElist named list Summarized Experiments additional_col_name string name column added assay data distinction possible duplicated metrics can arise multiple projects discard_keys character vector string discarded creating BumpyMatrix object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge multiple Summarized Experiments — merge_SE","text":"merged SummarizedExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_SE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge multiple Summarized Experiments — merge_SE","text":"","code":"se1 <- get_synthetic_data(\"finalMAE_small\")[[1]] merge_SE(list(se1 = se1, se2 = se1)) #> Warning: ignoring input keys: 'data_source' which are not present in data.table #> class: SummarizedExperiment  #> dim: 10 10  #> metadata(5): experiment_metadata Keys fit_parameters .internal #>   identifiers #> assays(5): RawTreated Controls Normalized Averaged Metrics #> rownames(10): G00002_drug_002_moa_A_72 G00003_drug_003_moa_A_72 ... #>   G00010_drug_010_moa_A_72 G00011_drug_011_moa_B_72 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(10): CL00011_cellline_BA_tissue_x_26 #>   CL00012_cellline_CA_tissue_x_30 ... CL00019_cellline_JB_tissue_z_58 #>   CL00020_cellline_KB_tissue_z_62 #> colData names(4): clid CellLineName Tissue ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge assay data — merge_assay","title":"Merge assay data — merge_assay","text":"Merge assay data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge assay data — merge_assay","text":"","code":"merge_assay(   SElist,   assay_name,   additional_col_name = \"data_source\",   discard_keys = NULL )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge assay data — merge_assay","text":"SElist named list Summarized Experiments assay_name name assay extracted merged additional_col_name string column name added assay data distinction possible duplicated metrics can arise multiple projects discard_keys character vector string discarded creating BumpyMatrix object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge assay data — merge_assay","text":"BumpyMatrix list data.table + BumpyMatrix","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_assay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge assay data — merge_assay","text":"","code":"mae <- get_synthetic_data(\"finalMAE_combo_2dose_nonoise\") listSE <- list(   combo1 = mae[[1]],    sa = mae[[2]] ) merge_assay(listSE, \"Normalized\") #> $DT #>       data_source Concentration Concentration_2 masked normalization_type     x #>            <char>         <num>           <num> <lgcl>             <fctr> <num> #>    1:      combo1   0.001000000             0.0  FALSE                 RV 0.957 #>    2:      combo1   0.001000000             0.2  FALSE                 RV 0.957 #>    3:      combo1   0.001000000             1.0  FALSE                 RV 0.957 #>    4:      combo1   0.003162278             0.0  FALSE                 RV 0.712 #>    5:      combo1   0.003162278             0.2  FALSE                 RV 0.712 #>   ---                                                                           #> 2804:          sa   1.000000000              NA  FALSE                 GR 1.000 #> 2805:          sa   1.000000000              NA  FALSE                 GR 1.000 #> 2806:          sa   1.000000000              NA  FALSE                 GR 1.000 #> 2807:          sa   1.000000000              NA  FALSE                 GR 1.000 #> 2808:          sa   1.000000000              NA  FALSE                 GR 1.000 #>       Gnumber DrugName drug_moa Gnumber_2 DrugName_2 drug_moa_2 Duration #>        <char>   <char>   <char>    <char>     <char>     <char>    <num> #>    1:  G00002 drug_002    moa_A    G00026   drug_026      moa_E       72 #>    2:  G00002 drug_002    moa_A    G00026   drug_026      moa_E       72 #>    3:  G00002 drug_002    moa_A    G00026   drug_026      moa_E       72 #>    4:  G00002 drug_002    moa_A    G00026   drug_026      moa_E       72 #>    5:  G00002 drug_002    moa_A    G00026   drug_026      moa_E       72 #>   ---                                                                    #> 2804:  G00026 drug_026    moa_E      <NA>       <NA>       <NA>       72 #> 2805:  G00026 drug_026    moa_E      <NA>       <NA>       <NA>       72 #> 2806:  G00026 drug_026    moa_E      <NA>       <NA>       <NA>       72 #> 2807:  G00026 drug_026    moa_E      <NA>       <NA>       <NA>       72 #> 2808:  G00026 drug_026    moa_E      <NA>       <NA>       <NA>       72 #>          clid CellLineName   Tissue ReferenceDivisionTime #>        <char>       <char>   <char>                 <num> #>    1: CL00011  cellline_BA tissue_x                    26 #>    2: CL00011  cellline_BA tissue_x                    26 #>    3: CL00011  cellline_BA tissue_x                    26 #>    4: CL00011  cellline_BA tissue_x                    26 #>    5: CL00011  cellline_BA tissue_x                    26 #>   ---                                                     #> 2804: CL00013  cellline_DA tissue_x                    34 #> 2805: CL00013  cellline_DA tissue_x                    34 #> 2806: CL00013  cellline_DA tissue_x                    34 #> 2807: CL00013  cellline_DA tissue_x                    34 #> 2808: CL00013  cellline_DA tissue_x                    34 #>  #> $BM #> 13 x 3 BumpyDataFrameMatrix #> rownames: 1 2 ... 12 13  #> colnames: 1 2 3  #> preview [1,1]: #>   DataFrame with 54 rows and 5 columns #>          masked         x Concentration data_source normalization_type #>       <logical> <numeric>     <numeric> <character>           <factor> #>   1       FALSE    0.9570    0.00100000      combo1                 RV #>   2       FALSE    0.4519    0.01000000      combo1                 GR #>   3       FALSE    0.4519    0.01000000      combo1                 GR #>   4       FALSE    0.7120    0.00316228      combo1                 RV #>   5       FALSE    0.3691    0.03162278      combo1                 GR #>   ...       ...       ...           ...         ...                ... #>   50      FALSE    0.1863   10.00000000      combo1                 RV #>   51      FALSE    0.7691    0.00316228      combo1                 GR #>   52      FALSE    0.1866    3.16227766      combo1                 RV #>   53      FALSE    0.1863   10.00000000      combo1                 RV #>   54      FALSE    0.1866    3.16227766      combo1                 RV #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge metadata — merge_metadata","title":"Merge metadata — merge_metadata","text":"Merge metadata","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge metadata — merge_metadata","text":"","code":"merge_metadata(SElist, metadata_fields)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge metadata — merge_metadata","text":"SElist named list SummarizedExperiments metadata_fields vector metadata names merged","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge metadata — merge_metadata","text":"list merged metadata","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/merge_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge metadata — merge_metadata","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] listSE <- list(   se,    se ) metadata_fields <- identify_unique_se_metadata_fields(listSE) merge_metadata(listSE, metadata_fields) #> $identifiers #> NULL #>  #> $experiment_metadata #> NULL #>  #> $Keys #> NULL #>  #> $fit_parameters #> NULL #>  #> $.internal #> NULL #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/modifyData.html","id":null,"dir":"Reference","previous_headings":"","what":"modify assay with additional data — modifyData","title":"modify assay with additional data — modifyData","text":"Reduce dimensionality assay dropping extra data combining variables.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/modifyData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modify assay with additional data — modifyData","text":"","code":"modifyData(x, ...)  # S3 method for drug_name2 modifyData(x, option, keep, ...)  # S3 method for data_source modifyData(x, option, keep, ...)  # S3 method for default modifyData(x, option, keep, ...)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/modifyData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modify assay with additional data — modifyData","text":"x data.table containing assay ... additional arguments passed methods option character string specifying action taken, see Details keep character string specifying value active variable kept","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/modifyData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"modify assay with additional data — modifyData","text":"essay extracted SummarizedExperiment contains additional information, .e. factors beyond DrugName CellLineName, information treated one three ways, depending value option: drop: information discarded one value additional variable (chosen user) kept. toDrug: information pasted together primary drug name. observations kept. toCellLine: , pasting done cell line name. Depending type additional information, exact details differ. handled app adding special classes data tables dispatching S3 methods. Following modification, additional columns discarded.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/modifyData.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"modify assay with additional data — modifyData","text":"modifyData(drug_name2): includes name concentration second drug modifyData(data_source): includes data source modifyData(default): includes name additional variables","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/modifyData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modify assay with additional data — modifyData","text":"","code":"dt <- data.table::data.table(a = as.character(1:10), b = \"data\") dt <- addClass(dt, \"a\") modifyData(dt, \"average\", keep = \"b\") #>         b #>    <char> #> 1:   data"},{"path":"https://gdrplatform.github.io/gDRutils/reference/mrowData.html","id":null,"dir":"Reference","previous_headings":"","what":"mrowData — mrowData","title":"mrowData — mrowData","text":"get rowData experiments","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mrowData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mrowData — mrowData","text":"","code":"mrowData(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/mrowData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mrowData — mrowData","text":"mae MultiAssayExperiment object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mrowData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mrowData — mrowData","text":"data.table -experiments rowData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mrowData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mrowData — mrowData","text":"Arkadiusz Gladki arkadiusz.gladki@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/mrowData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mrowData — mrowData","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\")  mrowData(mae) #>     Gnumber DrugName drug_moa Duration #>      <char>   <char>   <char>    <num> #>  1:  G00002 drug_002    moa_A       72 #>  2:  G00003 drug_003    moa_A       72 #>  3:  G00004 drug_004    moa_A       72 #>  4:  G00005 drug_005    moa_A       72 #>  5:  G00006 drug_006    moa_A       72 #>  6:  G00007 drug_007    moa_A       72 #>  7:  G00008 drug_008    moa_A       72 #>  8:  G00009 drug_009    moa_A       72 #>  9:  G00010 drug_010    moa_A       72 #> 10:  G00011 drug_011    moa_B       72"},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_conc_from_efficacy.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","title":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","text":"Predict concentration given efficacy fit parameters.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_conc_from_efficacy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","text":"","code":"predict_conc_from_efficacy(efficacy, x_inf, x_0, ec50, h)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_conc_from_efficacy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","text":"efficacy Numeric vector representing efficacies predict concentrations . x_inf Numeric vector representing asymptotic value sigmoidal fit dose-response data concentration goes infinity. x_0 Numeric vector representing asymptotic metric value corresponding concentration 0 primary drug. ec50 Numeric vector representing drug concentration half-maximal effect. h Numeric vector representing hill coefficient fitted curve, reflects steep","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_conc_from_efficacy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","text":"Numeric vector representing predicted concentrations given efficacies fit parameters.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_conc_from_efficacy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","text":"inverse function predict_efficacy_from_conc.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_conc_from_efficacy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict a concentration for a given efficacy with fit parameters. — predict_conc_from_efficacy","text":"","code":"predict_conc_from_efficacy(efficacy = c(1, 1.5), x_inf = 0.1, x_0 = 1, ec50 = 0.5, h = 2) #> [1] 0 0"},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_efficacy_from_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","title":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","text":"Predict efficacy values given fit parameters concentration.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_efficacy_from_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","text":"","code":"predict_efficacy_from_conc(c, x_inf, x_0, ec50, h)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_efficacy_from_conc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","text":"c Numeric vector representing concentrations predict efficacies . x_inf Numeric vector representing asymptotic value sigmoidal fit dose-response data concentration goes infinity. x_0 Numeric vector representing asymptotic metric value corresponding concentration 0 primary drug. ec50 Numeric vector representing drug concentration half-maximal effect. h Numeric vector representing hill coefficient fitted curve, reflects steep dose-response curve .","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_efficacy_from_conc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","text":"Numeric vector representing predicted efficacies given concentrations fit parameters.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_efficacy_from_conc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","text":"inverse function predict_conc_from_efficacy.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/predict_efficacy_from_conc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict efficacy values given fit parameters and a concentration. — predict_efficacy_from_conc","text":"","code":"predict_efficacy_from_conc(c = 1, x_inf = 0.1, x_0 = 1, ec50 = 0.5, h = 2) #> [1] 0.28"},{"path":"https://gdrplatform.github.io/gDRutils/reference/prettify_flat_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","title":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","text":"Map existing column names flattened 'Metrics' assay prettified names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/prettify_flat_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","text":"","code":"prettify_flat_metrics(   x,   human_readable = FALSE,   normalization_type = c(\"GR\", \"RV\") )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/prettify_flat_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","text":"x character vector names prettify. human_readable boolean indicating whether return column names human readable format. Defaults FALSE. normalization_type character vector specified normalization type. Defaults c(\"GR\", \"RV\").","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/prettify_flat_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","text":"character vector prettified names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/prettify_flat_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","text":"common use case function prettify column names flattened version \"Metrics\" assay. Mode \"human_readable\" = TRUE often used prettification context front-end applications, whereas \"human_readable\" = FALSE often used prettification context command line.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/prettify_flat_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prettify metric names in flat 'Metrics' assay — prettify_flat_metrics","text":"","code":"x <- c(\"CellLineName\", \"Tissue\", \"Primary Tissue\", \"GR_gDR_x_mean\", \"GR_gDR_xc50\", \"RV_GDS_x_mean\") prettify_flat_metrics(x, human_readable = FALSE) #> [1] \"CellLineName\"   \"Tissue\"         \"Primary Tissue\" \"GR_mean\"        #> [5] \"GR50\"           \"GDS_RV_mean\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/promote_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","title":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","text":"Promote nested field represented metadata field SummarizedExperiment either rowData colData.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/promote_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","text":"","code":"promote_fields(se, fields, MARGIN = c(1, 2))"},{"path":"https://gdrplatform.github.io/gDRutils/reference/promote_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","text":"se SummarizedExperiment object. fields Character vector nested fields BumpyMatrix object promote metadata fields se. MARGIN Numeric values 1 2 indicating whether promote fields rows columns respectively.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/promote_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","text":"SummarizedExperiment object new dimensions resulting promoting given fields.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/promote_fields.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","text":"Revert operation using demote_fields.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRutils/reference/promote_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Promote a nested field to be represented as a metadata field of the SummarizedExperiment\nas either the rowData or colData. — promote_fields","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] se <- promote_fields(se, \"ReadoutValue\", 2) #> Warning: dropping assay 'Controls' from the final SE #> Warning: dropping assay 'Normalized' from the final SE #> Warning: dropping assay 'Averaged' from the final SE #> Warning: dropping assay 'Metrics' from the final SE"},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_coldata.html","id":null,"dir":"Reference","previous_headings":"","what":"refine colData — refine_coldata","title":"refine colData — refine_coldata","text":"current improvements done colData standardization step: set default value optional colData fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_coldata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"refine colData — refine_coldata","text":"","code":"refine_coldata(cd, se, default_v = \"Undefined\")"},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_coldata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"refine colData — refine_coldata","text":"cd DataFrame colData se SummarizedExperiment object drug-response data generate gDR pipeline default_v string default value optional columns colData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_coldata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"refine colData — refine_coldata","text":"refined colData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_coldata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"refine colData — refine_coldata","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") refine_coldata(SummarizedExperiment::colData(mae[[1]]), mae[[1]]) #> DataFrame with 10 rows and 4 columns #>                                        clid CellLineName      Tissue #>                                 <character>  <character> <character> #> CL00011_cellline_BA_tissue_x_26     CL00011  cellline_BA    tissue_x #> CL00012_cellline_CA_tissue_x_30     CL00012  cellline_CA    tissue_x #> CL00013_cellline_DA_tissue_x_34     CL00013  cellline_DA    tissue_x #> CL00014_cellline_EA_tissue_x_38     CL00014  cellline_EA    tissue_x #> CL00015_cellline_FA_tissue_x_42     CL00015  cellline_FA    tissue_x #> CL00016_cellline_GB_tissue_y_46     CL00016  cellline_GB    tissue_y #> CL00017_cellline_HB_tissue_y_50     CL00017  cellline_HB    tissue_y #> CL00018_cellline_IB_tissue_y_54     CL00018  cellline_IB    tissue_y #> CL00019_cellline_JB_tissue_z_58     CL00019  cellline_JB    tissue_z #> CL00020_cellline_KB_tissue_z_62     CL00020  cellline_KB    tissue_z #>                                 ReferenceDivisionTime #>                                             <numeric> #> CL00011_cellline_BA_tissue_x_26                    26 #> CL00012_cellline_CA_tissue_x_30                    30 #> CL00013_cellline_DA_tissue_x_34                    34 #> CL00014_cellline_EA_tissue_x_38                    38 #> CL00015_cellline_FA_tissue_x_42                    42 #> CL00016_cellline_GB_tissue_y_46                    46 #> CL00017_cellline_HB_tissue_y_50                    50 #> CL00018_cellline_IB_tissue_y_54                    54 #> CL00019_cellline_JB_tissue_z_58                    58 #> CL00020_cellline_KB_tissue_z_62                    62"},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_rowdata.html","id":null,"dir":"Reference","previous_headings":"","what":"refine rowData — refine_rowdata","title":"refine rowData — refine_rowdata","text":"current improvements done rowData standardization step: set default value optional rowData fields","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_rowdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"refine rowData — refine_rowdata","text":"","code":"refine_rowdata(rd, se, default_v = \"Undefined\")"},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_rowdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"refine rowData — refine_rowdata","text":"rd DataFrame rowData se SummarizedExperiment object drug-response data generate gDR pipeline default_v string default value optional columns rowData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_rowdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"refine rowData — refine_rowdata","text":"refined rowData","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/refine_rowdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"refine rowData — refine_rowdata","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") refine_rowdata(SummarizedExperiment::colData(mae[[1]]), mae[[1]]) #> DataFrame with 10 rows and 5 columns #>                                        clid CellLineName      Tissue #>                                 <character>  <character> <character> #> CL00011_cellline_BA_tissue_x_26     CL00011  cellline_BA    tissue_x #> CL00012_cellline_CA_tissue_x_30     CL00012  cellline_CA    tissue_x #> CL00013_cellline_DA_tissue_x_34     CL00013  cellline_DA    tissue_x #> CL00014_cellline_EA_tissue_x_38     CL00014  cellline_EA    tissue_x #> CL00015_cellline_FA_tissue_x_42     CL00015  cellline_FA    tissue_x #> CL00016_cellline_GB_tissue_y_46     CL00016  cellline_GB    tissue_y #> CL00017_cellline_HB_tissue_y_50     CL00017  cellline_HB    tissue_y #> CL00018_cellline_IB_tissue_y_54     CL00018  cellline_IB    tissue_y #> CL00019_cellline_JB_tissue_z_58     CL00019  cellline_JB    tissue_z #> CL00020_cellline_KB_tissue_z_62     CL00020  cellline_KB    tissue_z #>                                 ReferenceDivisionTime    drug_moa #>                                             <numeric> <character> #> CL00011_cellline_BA_tissue_x_26                    26   Undefined #> CL00012_cellline_CA_tissue_x_30                    30   Undefined #> CL00013_cellline_DA_tissue_x_34                    34   Undefined #> CL00014_cellline_EA_tissue_x_38                    38   Undefined #> CL00015_cellline_FA_tissue_x_42                    42   Undefined #> CL00016_cellline_GB_tissue_y_46                    46   Undefined #> CL00017_cellline_HB_tissue_y_50                    50   Undefined #> CL00018_cellline_IB_tissue_y_54                    54   Undefined #> CL00019_cellline_JB_tissue_z_58                    58   Undefined #> CL00020_cellline_KB_tissue_z_62                    62   Undefined"},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_DFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename DFrame — rename_DFrame","title":"Rename DFrame — rename_DFrame","text":"Rename DFrame","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_DFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename DFrame — rename_DFrame","text":"","code":"rename_DFrame(df, mapping_vector)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_DFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename DFrame — rename_DFrame","text":"df DFrame object mapping_vector named vector mapping old new values. names character vector indicate source names, corresponding values destination names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_DFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename DFrame — rename_DFrame","text":"renamed DFrame object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_DFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename DFrame — rename_DFrame","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") rename_DFrame(SummarizedExperiment::rowData(mae[[1]]), c(\"Gnumber\" = \"Gnumber1\")) #> DataFrame with 10 rows and 4 columns #>                             Gnumber1    DrugName    drug_moa  Duration #>                          <character> <character> <character> <numeric> #> G00002_drug_002_moa_A_72      G00002    drug_002       moa_A        72 #> G00003_drug_003_moa_A_72      G00003    drug_003       moa_A        72 #> G00004_drug_004_moa_A_72      G00004    drug_004       moa_A        72 #> G00005_drug_005_moa_A_72      G00005    drug_005       moa_A        72 #> G00006_drug_006_moa_A_72      G00006    drug_006       moa_A        72 #> G00007_drug_007_moa_A_72      G00007    drug_007       moa_A        72 #> G00008_drug_008_moa_A_72      G00008    drug_008       moa_A        72 #> G00009_drug_009_moa_A_72      G00009    drug_009       moa_A        72 #> G00010_drug_010_moa_A_72      G00010    drug_010       moa_A        72 #> G00011_drug_011_moa_B_72      G00011    drug_011       moa_B        72"},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_bumpy.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename BumpyMatrix — rename_bumpy","title":"Rename BumpyMatrix — rename_bumpy","text":"Rename BumpyMatrix","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_bumpy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename BumpyMatrix — rename_bumpy","text":"","code":"rename_bumpy(bumpy, mapping_vector)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_bumpy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename BumpyMatrix — rename_bumpy","text":"bumpy BumpyMatrix object mapping_vector named vector mapping old new values. names character vector indicate source names, corresponding values destination names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_bumpy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename BumpyMatrix — rename_bumpy","text":"renamed BumpyMatrix object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/rename_bumpy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename BumpyMatrix — rename_bumpy","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") se <- mae[[1]] assay <- SummarizedExperiment::assay(se) rename_bumpy(assay, c(\"Concentration\" = \"conc\")) #> 10 x 10 BumpyDataFrameMatrix #> rownames: G00002_drug_002_moa_A_72 G00003_drug_003_moa_A_72 ... G00010_drug_010_moa_A_72 G00011_drug_011_moa_B_72  #> colnames: CL00011_cellline_BA_tissue_x_26 CL00012_cellline_CA_tissue_x_30 ... CL00019_cellline_JB_tissue_z_58 CL00020_cellline_KB_tissue_z_62  #> preview [1,1]: #>   DataFrame with 27 rows and 7 columns #>           Barcode       conc ReadoutValue BackgroundValue record_id    masked #>       <character>  <numeric>    <numeric>       <numeric> <integer> <logical> #>   1       plate_1 0.00100000         93.5               0       601     FALSE #>   2       plate_1 0.00316228         74.8               0       901     FALSE #>   3       plate_1 0.01000000         40.1               0      1201     FALSE #>   4       plate_1 0.03162278         33.2               0      1501     FALSE #>   5       plate_1 0.10000000         31.5               0      1801     FALSE #>   ...         ...        ...          ...             ...       ...       ... #>   23      plate_3   0.100000         37.8               0      2001     FALSE #>   24      plate_3   0.316228         36.4               0      2301     FALSE #>   25      plate_3   1.000000         36.1               0      2601     FALSE #>   26      plate_3   3.162278         33.1               0      2901     FALSE #>   27      plate_3  10.000000         35.4               0      3201     FALSE #>       CorrectedReadout #>              <numeric> #>   1               93.5 #>   2               74.8 #>   3               40.1 #>   4               33.2 #>   5               31.5 #>   ...              ... #>   23              37.8 #>   24              36.4 #>   25              36.1 #>   26              33.1 #>   27              35.4"},{"path":"https://gdrplatform.github.io/gDRutils/reference/shorten_normalization_type_name.html","id":null,"dir":"Reference","previous_headings":"","what":"shorten normalization type — shorten_normalization_type_name","title":"shorten normalization type — shorten_normalization_type_name","text":"shorten normalization type","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/shorten_normalization_type_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shorten normalization type — shorten_normalization_type_name","text":"","code":"shorten_normalization_type_name(x)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/shorten_normalization_type_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"shorten normalization type — shorten_normalization_type_name","text":"x string normalization type","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/shorten_normalization_type_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"shorten normalization type — shorten_normalization_type_name","text":"shortened string representing normalization type","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/shorten_normalization_type_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shorten normalization type — shorten_normalization_type_name","text":"","code":"shorten_normalization_type_name(\"GRvalue\") #> [1] \"GR\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/split_SE_components.html","id":null,"dir":"Reference","previous_headings":"","what":"split_SE_components — split_SE_components","title":"split_SE_components — split_SE_components","text":"Divide columns input data.table treatment metadata, condition metadata, experiment metadata, assay data analysis. commonly used identify different components SummarizedExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/split_SE_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split_SE_components — split_SE_components","text":"","code":"split_SE_components(df_, nested_keys = NULL, combine_on = 1L)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/split_SE_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split_SE_components — split_SE_components","text":"df_ data.table drug-response data nested_keys character vector keys exclude row column metadata, instead nest within element matrix. See details. combine_on integer value 1 2, indicating whether unrecognized columns combined row column respectively. Defaults 1.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/split_SE_components.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"split_SE_components — split_SE_components","text":"named list containing different elements SummarizedExperiment; see details.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/split_SE_components.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"split_SE_components — split_SE_components","text":"Named list containing following elements: \"treatment_md\": treatment metadata \"condition_md\": condition metadata \"data_fields\": data.table column names corresponding fields nested within BumpyMatrix cell \"experiment_md\": metadata constant entries data.table \"identifiers_md\": key identifier mappings nested_keys provides user opportunity specify like use metadata field differentiator treatments, instead, incorporate nested DataFrame BumpyMatrix matrix object. event nested_keys constant throughout whole data.table, still included DataFrame BumpyMatrix experiment_metadata. Columns within df_ identified following logic: First, known data fields specified nested_keys extracted. Following , known cell drug metadata fields detected, remaining columns represent constant metadata fields across rows extracted. Next, cell line metadata heuristically extracted. Finally, remaining columns combined either rows columns specified combine_on.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/split_SE_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"split_SE_components — split_SE_components","text":"","code":"split_SE_components(data.table::data.table(clid = \"CL1\", Gnumber = \"DrugA\")) #> $condition_md #> DataFrame with 1 row and 1 column #>            clid #>     <character> #> CL1         CL1 #>  #> $treatment_md #> DataFrame with 1 row and 1 column #>           Gnumber #>       <character> #> DrugA       DrugA #>  #> $data_fields #> character(0) #>  #> $experiment_md #> DataFrame with 0 rows and 0 columns #>  #> $identifiers_md #> $identifiers_md$duration #> [1] \"Duration\" #>  #> $identifiers_md$cellline #> [1] \"clid\" #>  #> $identifiers_md$cellline_name #> [1] \"CellLineName\" #>  #> $identifiers_md$cellline_tissue #> [1] \"Tissue\" #>  #> $identifiers_md$cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $identifiers_md$cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $identifiers_md$cellline_subtype #> [1] \"subtype\" #>  #> $identifiers_md$drug #> [1] \"Gnumber\" #>  #> $identifiers_md$drug_name #> [1] \"DrugName\" #>  #> $identifiers_md$drug_moa #> [1] \"drug_moa\" #>  #> $identifiers_md$untreated_tag #> [1] \"vehicle\"   \"untreated\" #>  #> $identifiers_md$masked_tag #> [1] \"masked\" #>  #> $identifiers_md$well_position #> [1] \"WellRow\"    \"WellColumn\" #>  #> $identifiers_md$concentration #> [1] \"Concentration\" #>  #> $identifiers_md$template #> [1] \"Template\"  \"Treatment\" #>  #> $identifiers_md$barcode #> [1] \"Barcode\" \"Plate\"   #>  #> $identifiers_md$drug2 #> [1] \"Gnumber_2\" #>  #> $identifiers_md$drug_name2 #> [1] \"DrugName_2\" #>  #> $identifiers_md$drug_moa2 #> [1] \"drug_moa_2\" #>  #> $identifiers_md$concentration2 #> [1] \"Concentration_2\" #>  #> $identifiers_md$drug3 #> [1] \"Gnumber_3\" #>  #> $identifiers_md$drug_name3 #> [1] \"DrugName_3\" #>  #> $identifiers_md$drug_moa3 #> [1] \"drug_moa_3\" #>  #> $identifiers_md$concentration3 #> [1] \"Concentration_3\" #>  #> $identifiers_md$data_source #> [1] \"data_source\" #>  #> $identifiers_md$replicate #> [1] \"Replicate\" #>  #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize MAE by switching from custom identifiers into gDR-default — standardize_mae","title":"Standardize MAE by switching from custom identifiers into gDR-default — standardize_mae","text":"Standardize MAE switching custom identifiers gDR-default","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize MAE by switching from custom identifiers into gDR-default — standardize_mae","text":"","code":"standardize_mae(mae, use_default = TRUE)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize MAE by switching from custom identifiers into gDR-default — standardize_mae","text":"mae MultiAssayExperiment object drug-response data generate gDR pipeline use_default boolean indicating whether use default identifiers standardization","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize MAE by switching from custom identifiers into gDR-default — standardize_mae","text":"mae MultiAssayExperiment default gDR identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_mae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize MAE by switching from custom identifiers into gDR-default — standardize_mae","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") S4Vectors::metadata(mae[[1]])$identifiers$drug <- \"druug\" standardize_mae(mae) #> A MultiAssayExperiment object of 1 listed #>  experiment with a user-defined name and respective class. #>  Containing an ExperimentList class object of length 1: #>  [1] single-agent: SummarizedExperiment with 10 rows and 10 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files"},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize SE by switching from custom identifiers into gDR-default — standardize_se","title":"Standardize SE by switching from custom identifiers into gDR-default — standardize_se","text":"Standardize SE switching custom identifiers gDR-default","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize SE by switching from custom identifiers into gDR-default — standardize_se","text":"","code":"standardize_se(se, use_default = TRUE)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize SE by switching from custom identifiers into gDR-default — standardize_se","text":"se SummarizedExperiment object drug-response data generate gDR pipeline use_default boolean indicating whether use default identifiers standardization","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize SE by switching from custom identifiers into gDR-default — standardize_se","text":"se SummarizedExperiment default gDR identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/standardize_se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize SE by switching from custom identifiers into gDR-default — standardize_se","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small.qs\") se <- mae[[1]] S4Vectors::metadata(se)$identifiers$drug <- \"druug\" standardize_se(se) #> class: SummarizedExperiment  #> dim: 10 10  #> metadata(5): identifiers experiment_metadata Keys fit_parameters #>   .internal #> assays(5): RawTreated Controls Normalized Averaged Metrics #> rownames(10): G00002_drug_002_moa_A_72 G00003_drug_003_moa_A_72 ... #>   G00010_drug_010_moa_A_72 G00011_drug_011_moa_B_72 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(10): CL00011_cellline_BA_tissue_x_26 #>   CL00012_cellline_CA_tissue_x_30 ... CL00019_cellline_JB_tissue_z_58 #>   CL00020_cellline_KB_tissue_z_62 #> colData names(4): clid CellLineName Tissue ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDRutils/reference/strip_first_and_last_char.html","id":null,"dir":"Reference","previous_headings":"","what":"String first and last characters of a string. — strip_first_and_last_char","title":"String first and last characters of a string. — strip_first_and_last_char","text":"String first last characters string.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/strip_first_and_last_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String first and last characters of a string. — strip_first_and_last_char","text":"","code":"strip_first_and_last_char(jstring)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/strip_first_and_last_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String first and last characters of a string. — strip_first_and_last_char","text":"jstring String number characters greater 1.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/strip_first_and_last_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"String first and last characters of a string. — strip_first_and_last_char","text":"String first last characters stripped.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/strip_first_and_last_char.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"String first and last characters of a string. — strip_first_and_last_char","text":"often used remove JSON brackets '{' '}'.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_env_idfs_from_mae.html","id":null,"dir":"Reference","previous_headings":"","what":"Update environment identifiers from MAE object identifiers — update_env_idfs_from_mae","title":"Update environment identifiers from MAE object identifiers — update_env_idfs_from_mae","text":"Update environment identifiers MAE object identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_env_idfs_from_mae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update environment identifiers from MAE object identifiers — update_env_idfs_from_mae","text":"","code":"update_env_idfs_from_mae(mae_idfs)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_env_idfs_from_mae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update environment identifiers from MAE object identifiers — update_env_idfs_from_mae","text":"mae_idfs list containing MAE identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_env_idfs_from_mae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update environment identifiers from MAE object identifiers — update_env_idfs_from_mae","text":"NULL","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_env_idfs_from_mae.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update environment identifiers from MAE object identifiers — update_env_idfs_from_mae","text":"","code":"update_env_idfs_from_mae(list(get_env_identifiers()))"},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_idfs_synonyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Update gDR synonyms for the identifier — update_idfs_synonyms","title":"Update gDR synonyms for the identifier — update_idfs_synonyms","text":"Update gDR synonyms identifier","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_idfs_synonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update gDR synonyms for the identifier — update_idfs_synonyms","text":"","code":"update_idfs_synonyms(data, dict = get_idfs_synonyms())"},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_idfs_synonyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update gDR synonyms for the identifier — update_idfs_synonyms","text":"data list charvec identifiers data dict list dictionary","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_idfs_synonyms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update gDR synonyms for the identifier — update_idfs_synonyms","text":"list","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/update_idfs_synonyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update gDR synonyms for the identifier — update_idfs_synonyms","text":"","code":"mdict <- list(duration = \"time\") iv <- c(\"Time\", \"Duration\", \"time\") update_idfs_synonyms(iv, dict = mdict) #> [1] \"Duration\" \"Duration\" \"Duration\""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_MAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate MultiAssayExperiment object — validate_MAE","title":"Validate MultiAssayExperiment object — validate_MAE","text":"Function validates correctness SE included MAE checking multiple cases: detection duplicated rowData/colData, incompatibility rownames/colnames, occurrence necessary assays, detection mismatch CLIDs inside colData colnames (different order), correctness metadata names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_MAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate MultiAssayExperiment object — validate_MAE","text":"","code":"validate_MAE(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_MAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate MultiAssayExperiment object — validate_MAE","text":"mae MultiAssayExperiment object produced gDR pipeline","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_MAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate MultiAssayExperiment object — validate_MAE","text":"NULL invisibly MultiAssayExperiment valid. Throws error MultiAssayExperiment valid.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_MAE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Validate MultiAssayExperiment object — validate_MAE","text":"Bartosz Czech bartosz.czech@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_MAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate MultiAssayExperiment object — validate_MAE","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\")  validate_MAE(mae)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SummarizedExperiment object — validate_SE","title":"Validate SummarizedExperiment object — validate_SE","text":"Function validates correctness SE checking multiple cases: detection duplicated rowData/colData, incompatibility rownames/colnames, occurrence necessary assays, detection mismatch CLIDs inside colData colnames (different order), correctness metadata names.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SummarizedExperiment object — validate_SE","text":"","code":"validate_SE(se, expect_single_agent = FALSE)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SummarizedExperiment object — validate_SE","text":"se SummarizedExperiment object produced gDR pipeline expect_single_agent logical indicating function check whether SummarizedExperiment single-agent data","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SummarizedExperiment object — validate_SE","text":"NULL invisibly SummarizedExperiment valid. Throws error SummarizedExperiment valid.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_SE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate SummarizedExperiment object — validate_SE","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] validate_SE(se)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_dimnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate dimnames — validate_dimnames","title":"Validate dimnames — validate_dimnames","text":"Assure dimnames two objects ","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_dimnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate dimnames — validate_dimnames","text":"","code":"validate_dimnames(obj, obj2, skip_empty = TRUE)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_dimnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate dimnames — validate_dimnames","text":"obj first object dimnames compare obj2 second object dimnames compare skip_empty logical indicating whether skip comparison given dimname empty case objects","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_dimnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate dimnames — validate_dimnames","text":"NULL","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that specified identifier values exist in the data. — validate_identifiers","title":"Check that specified identifier values exist in the data. — validate_identifiers","text":"Check specified identifier values exist data error otherwise.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that specified identifier values exist in the data. — validate_identifiers","text":"","code":"validate_identifiers(   df,   identifiers = NULL,   req_ids = NULL,   exp_one_ids = NULL )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that specified identifier values exist in the data. — validate_identifiers","text":"df data.table colnames. identifiers Named list identifiers names standardized identifier names. passed, defaults get_env_identifiers(). req_ids Character vector standardized identifier names required pass identifier validation. exp_one_ids Character vector standardized identifiers names one identifier value expected. passed, defaults get_expect_one_identifiers().","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that specified identifier values exist in the data. — validate_identifiers","text":"Named list identifiers modified pass validation input data. Errors explanatory message validation pass given identifiers data.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_identifiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check that specified identifier values exist in the data. — validate_identifiers","text":"Note set identifiers anywhere (.e. environment SummarizedExperiment object). identifiers validate, throw error side effect.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that specified identifier values exist in the data. — validate_identifiers","text":"","code":"validate_identifiers(   S4Vectors::DataFrame(\"Barcode\" = NA, \"Duration\" = NA, \"Template\" = NA, \"clid\" = NA),    req_ids = \"barcode\" ) #> $duration #> [1] \"Duration\" #>  #> $cellline #> [1] \"clid\" #>  #> $cellline_name #> [1] \"CellLineName\" #>  #> $cellline_tissue #> [1] \"Tissue\" #>  #> $cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $cellline_parental_identifier #> [1] \"parental_identifier\" #>  #> $cellline_subtype #> [1] \"subtype\" #>  #> $drug #> [1] \"Gnumber\" #>  #> $drug_name #> [1] \"DrugName\" #>  #> $drug_moa #> [1] \"drug_moa\" #>  #> $untreated_tag #> [1] \"vehicle\"   \"untreated\" #>  #> $masked_tag #> [1] \"masked\" #>  #> $well_position #> [1] \"WellRow\"    \"WellColumn\" #>  #> $concentration #> [1] \"Concentration\" #>  #> $template #> [1] \"Template\" #>  #> $barcode #> [1] \"Barcode\" #>  #> $drug2 #> [1] \"Gnumber_2\" #>  #> $drug_name2 #> [1] \"DrugName_2\" #>  #> $drug_moa2 #> [1] \"drug_moa_2\" #>  #> $concentration2 #> [1] \"Concentration_2\" #>  #> $drug3 #> [1] \"Gnumber_3\" #>  #> $drug_name3 #> [1] \"DrugName_3\" #>  #> $drug_moa3 #> [1] \"drug_moa_3\" #>  #> $concentration3 #> [1] \"Concentration_3\" #>  #> $data_source #> [1] \"data_source\" #>  #> $replicate #> [1] \"Replicate\" #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate JSON against a schema. — validate_json","title":"Validate JSON against a schema. — validate_json","text":"Validate JSON describing object schema.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate JSON against a schema. — validate_json","text":"","code":"validate_json(json, schema_path)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate JSON against a schema. — validate_json","text":"json String JSON memory. schema_path String schema validate .","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate JSON against a schema. — validate_json","text":"Boolean whether JSON successfully validated.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate JSON against a schema. — validate_json","text":"often used validate JSON passing document ElasticSearch index.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate JSON against a schema. — validate_json","text":"","code":"json <- '{}'"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_mae_with_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate MAE against a schema. — validate_mae_with_schema","title":"Validate MAE against a schema. — validate_mae_with_schema","text":"Validate MAE object schema. Currently SEs validated TODO: add mae.json schema validate full MAE object","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_mae_with_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate MAE against a schema. — validate_mae_with_schema","text":"","code":"validate_mae_with_schema(   mae,   schema_package = Sys.getenv(\"SCHEMA_PACKAGE\", \"gDRutils\"),   schema_dir_path = Sys.getenv(\"SCHEMA_DIR_PATH\", \"schemas\"),   schema = c(se = \"se.json\", mae = \"mae.json\") )"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_mae_with_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate MAE against a schema. — validate_mae_with_schema","text":"mae MultiAssayExperiment object schema_package string name package JSON schema files schema_dir_path path dir JSON schema files schema named charvec filenames schemas validate .","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_mae_with_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate MAE against a schema. — validate_mae_with_schema","text":"Boolean whether mae valid","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_mae_with_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate MAE against a schema. — validate_mae_with_schema","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\")  validate_mae_with_schema(mae) #> $mae #> [1] TRUE #> attr(,\"exit_code\") #> [1] 0 #>  #> $`experiment:single-agent` #> [1] FALSE #> attr(,\"error\") #> [1] \"JSON validation of data model failed\" #> attr(,\"exit_code\") #> [1] 2 #> attr(,\"derror\") #>   instancePath schemaPath  keyword missingProperty #> 1              #/required required           title #> 2              #/required required     description #> 3              #/required required experimentalist #> 4              #/required required         sources #>                                         message       schema #> 1           must have required property 'title' title, d.... #> 2     must have required property 'description' title, d.... #> 3 must have required property 'experimentalist' title, d.... #> 4         must have required property 'sources' title, d.... #>                     parentSchema.$schema   parentSchema.title #> 1 http://json-schema.org/draft-07/schema SummarizedExperiment #> 2 http://json-schema.org/draft-07/schema SummarizedExperiment #> 3 http://json-schema.org/draft-07/schema SummarizedExperiment #> 4 http://json-schema.org/draft-07/schema SummarizedExperiment #>   parentSchema.description parentSchema.type parentSchema.properties.type #> 1                                     object                       string #> 2                                     object                       string #> 3                                     object                       string #> 4                                     object                       string #>   parentSchema.properties.description.type #> 1                                   string #> 2                                   string #> 3                                   string #> 4                                   string #>        parentSchema.properties.description.description #> 1 A free text description of the experiment performed. #> 2 A free text description of the experiment performed. #> 3 A free text description of the experiment performed. #> 4 A free text description of the experiment performed. #>   parentSchema.properties.experimentalist.type #> 1                                       string #> 2                                       string #> 3                                       string #> 4                                       string #>   parentSchema.properties.experimentalist.description #> 1                 Unix id or name of experimentalist. #> 2                 Unix id or name of experimentalist. #> 3                 Unix id or name of experimentalist. #> 4                 Unix id or name of experimentalist. #>   parentSchema.properties.experimentalist.examples #> 1                                            eqlin #> 2                                            eqlin #> 3                                            eqlin #> 4                                            eqlin #>                   parentSchema.properties.duration.description #> 1 Number of days cells were treated with perturbation in days. #> 2 Number of days cells were treated with perturbation in days. #> 3 Number of days cells were treated with perturbation in days. #> 4 Number of days cells were treated with perturbation in days. #>   parentSchema.properties.duration.type parentSchema.properties.duration.type #> 1                                 array                               integer #> 2                                 array                               integer #> 3                                 array                               integer #> 4                                 array                               integer #>   parentSchema.properties.cellline.description #> 1            Identifier of the given cell line #> 2            Identifier of the given cell line #> 3            Identifier of the given cell line #> 4            Identifier of the given cell line #>   parentSchema.properties.cellline.type parentSchema.properties.cellline.type #> 1                                 array                                string #> 2                                 array                                string #> 3                                 array                                string #> 4                                 array                                string #>   parentSchema.properties.cellline_name.description #> 1                       Name of the given cell line #> 2                       Name of the given cell line #> 3                       Name of the given cell line #> 4                       Name of the given cell line #>   parentSchema.properties.cellline_name.type #> 1                                      array #> 2                                      array #> 3                                      array #> 4                                      array #>   parentSchema.properties.cellline_name.type #> 1                                     string #> 2                                     string #> 3                                     string #> 4                                     string #>   parentSchema.properties.cellline_tissue.description #> 1                Tissue origin of the given cell line #> 2                Tissue origin of the given cell line #> 3                Tissue origin of the given cell line #> 4                Tissue origin of the given cell line #>   parentSchema.properties.cellline_tissue.type #> 1                                        array #> 2                                        array #> 3                                        array #> 4                                        array #>   parentSchema.properties.cellline_tissue.type #> 1                                       string #> 2                                       string #> 3                                       string #> 4                                       string #>   parentSchema.properties.cellline_ref_div_time.description #> 1            Reference division time of the given cell line #> 2            Reference division time of the given cell line #> 3            Reference division time of the given cell line #> 4            Reference division time of the given cell line #>   parentSchema.properties.cellline_ref_div_time.type #> 1                                              array #> 2                                              array #> 3                                              array #> 4                                              array #>   parentSchema.properties.cellline_ref_div_time.items.type #> 1                                             integer,.... #> 2                                             integer,.... #> 3                                             integer,.... #> 4                                             integer,.... #>   parentSchema.properties.cellline_ref_div_time.items.pattern #> 1                                                   [0-9]+|NA #> 2                                                   [0-9]+|NA #> 3                                                   [0-9]+|NA #> 4                                                   [0-9]+|NA #>   parentSchema.properties.drug.description parentSchema.properties.drug.type #> 1             Identifier of the given drug                             array #> 2             Identifier of the given drug                             array #> 3             Identifier of the given drug                             array #> 4             Identifier of the given drug                             array #>   parentSchema.properties.drug.type #> 1                            string #> 2                            string #> 3                            string #> 4                            string #>   parentSchema.properties.drug_name.description #> 1                        Name of the given drug #> 2                        Name of the given drug #> 3                        Name of the given drug #> 4                        Name of the given drug #>   parentSchema.properties.drug_name.type parentSchema.properties.drug_name.type #> 1                                  array                                 string #> 2                                  array                                 string #> 3                                  array                                 string #> 4                                  array                                 string #>   parentSchema.properties.drug_moa.description #> 1        Mechanism of action of the given drug #> 2        Mechanism of action of the given drug #> 3        Mechanism of action of the given drug #> 4        Mechanism of action of the given drug #>   parentSchema.properties.drug_moa.type parentSchema.properties.drug_moa.type #> 1                                 array                                string #> 2                                 array                                string #> 3                                 array                                string #> 4                                 array                                string #>   parentSchema.properties.sources.type #> 1                                array #> 2                                array #> 3                                array #> 4                                array #>   parentSchema.properties.sources.description #> 1                                 Data source #> 2                                 Data source #> 3                                 Data source #> 4                                 Data source #>   parentSchema.properties.sources.items.type #> 1                                     object #> 2                                     object #> 3                                     object #> 4                                     object #>   parentSchema.properties.sources.items.required #> 1                                       name, id #> 2                                       name, id #> 3                                       name, id #> 4                                       name, id #>   parentSchema.properties.sources.items.additionalProperties #> 1                                                      FALSE #> 2                                                      FALSE #> 3                                                      FALSE #> 4                                                      FALSE #>   parentSchema.properties.sources.items.properties.name.type #> 1                                                     string #> 2                                                     string #> 3                                                     string #> 4                                                     string #>   parentSchema.properties.sources.items.properties.name.examples #> 1                                                   GeneData.... #> 2                                                   GeneData.... #> 3                                                   GeneData.... #> 4                                                   GeneData.... #>   parentSchema.properties.sources.items.properties.id.type #> 1                                                   string #> 2                                                   string #> 3                                                   string #> 4                                                   string #>   parentSchema.properties.sources.items.properties.id.description #> 1                                   An identifier for the source. #> 2                                   An identifier for the source. #> 3                                   An identifier for the source. #> 4                                   An identifier for the source. #>   parentSchema.properties.sources.items.properties.id.examples #> 1                                                    IDS-12345 #> 2                                                    IDS-12345 #> 3                                                    IDS-12345 #> 4                                                    IDS-12345 #>   parentSchema.required    data.drug data.drug_name data.drug_moa data.duration #> 1          title, d.... G00002, ....   drug_002....  moa_A, m....  72, 72, .... #> 2          title, d.... G00002, ....   drug_002....  moa_A, m....  72, 72, .... #> 3          title, d.... G00002, ....   drug_002....  moa_A, m....  72, 72, .... #> 4          title, d.... G00002, ....   drug_002....  moa_A, m....  72, 72, .... #>   data.cellline data.cellline_name data.cellline_tissue #> 1  CL00011,....       cellline....         tissue_x.... #> 2  CL00011,....       cellline....         tissue_x.... #> 3  CL00011,....       cellline....         tissue_x.... #> 4  CL00011,....       cellline....         tissue_x.... #>   data.cellline_ref_div_time dataPath #> 1               26, 30, ....          #> 2               26, 30, ....          #> 3               26, 30, ....          #> 4               26, 30, ....          #>"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_se_assay_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether or not an assay exists in a SummarizedExperiment object. — validate_se_assay_name","title":"Check whether or not an assay exists in a SummarizedExperiment object. — validate_se_assay_name","text":"Check presence assay SummarizedExperiment object.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_se_assay_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether or not an assay exists in a SummarizedExperiment object. — validate_se_assay_name","text":"","code":"validate_se_assay_name(se, name)"},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_se_assay_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether or not an assay exists in a SummarizedExperiment object. — validate_se_assay_name","text":"se SummarizedExperiment object. name String name assay validate.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_se_assay_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether or not an assay exists in a SummarizedExperiment object. — validate_se_assay_name","text":"NULL invisibly assay name valid. Throws error assay valid.","code":""},{"path":"https://gdrplatform.github.io/gDRutils/reference/validate_se_assay_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether or not an assay exists in a SummarizedExperiment object. — validate_se_assay_name","text":"","code":"mae <- get_synthetic_data(\"finalMAE_small\")  se <- mae[[1]] validate_se_assay_name(se, \"RawTreated\")"}]
